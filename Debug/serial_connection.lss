
serial_connection.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b6  00800100  000012ca  0000137e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012ca  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  008002b6  008002b6  00001534  2**0
                  ALLOC
  3 .eeprom       00000017  00810000  00810000  00001534  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  0000154b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015a8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000268  00000000  00000000  000015e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002403  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000db4  00000000  00000000  00003c53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000117d  00000000  00000000  00004a07  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000055c  00000000  00000000  00005b84  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000871  00000000  00000000  000060e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001139  00000000  00000000  00006951  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000188  00000000  00000000  00007a8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea ec       	ldi	r30, 0xCA	; 202
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 3b       	cpi	r26, 0xB6	; 182
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a6 eb       	ldi	r26, 0xB6	; 182
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	aa 3e       	cpi	r26, 0xEA	; 234
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 ad 04 	call	0x95a	; 0x95a <main>
      9e:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_16>:
uint16_t timer_value;
int distance_cm;
uint8_t error;

ISR (TIMER0_OVF_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	8f 93       	push	r24
      b2:	9f 93       	push	r25
	if(rising_edge==1) //Check if there was echo
      b4:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <rising_edge>
      b8:	81 30       	cpi	r24, 0x01	; 1
      ba:	99 f4       	brne	.+38     	; 0xe2 <__vector_16+0x3c>
	{
		timer_value++;
      bc:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <timer_value>
      c0:	90 91 ba 02 	lds	r25, 0x02BA	; 0x8002ba <timer_value+0x1>
      c4:	01 96       	adiw	r24, 0x01	; 1
      c6:	90 93 ba 02 	sts	0x02BA, r25	; 0x8002ba <timer_value+0x1>
      ca:	80 93 b9 02 	sts	0x02B9, r24	; 0x8002b9 <timer_value>
		/*Check if isnt out of range*/
		if(timer_value > 91)
      ce:	8c 35       	cpi	r24, 0x5C	; 92
      d0:	91 05       	cpc	r25, r1
      d2:	38 f0       	brcs	.+14     	; 0xe2 <__vector_16+0x3c>
		{
			working = 0;
      d4:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <working>
			rising_edge = 0;
      d8:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <rising_edge>
			error = 1;
      dc:	81 e0       	ldi	r24, 0x01	; 1
      de:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <error>
		}
	}
}
      e2:	9f 91       	pop	r25
      e4:	8f 91       	pop	r24
      e6:	0f 90       	pop	r0
      e8:	0f be       	out	0x3f, r0	; 63
      ea:	0f 90       	pop	r0
      ec:	1f 90       	pop	r1
      ee:	18 95       	reti

000000f0 <__vector_2>:
ISR (INT1_vect)
{
      f0:	1f 92       	push	r1
      f2:	0f 92       	push	r0
      f4:	0f b6       	in	r0, 0x3f	; 63
      f6:	0f 92       	push	r0
      f8:	11 24       	eor	r1, r1
      fa:	2f 93       	push	r18
      fc:	3f 93       	push	r19
      fe:	6f 93       	push	r22
     100:	7f 93       	push	r23
     102:	8f 93       	push	r24
     104:	9f 93       	push	r25
     106:	af 93       	push	r26
     108:	bf 93       	push	r27
	if(working==1) //Check if echo is high, start timer
     10a:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <working>
     10e:	81 30       	cpi	r24, 0x01	; 1
     110:	31 f5       	brne	.+76     	; 0x15e <__vector_2+0x6e>
	{
		if(rising_edge==0)
     112:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <rising_edge>
     116:	81 11       	cpse	r24, r1
     118:	09 c0       	rjmp	.+18     	; 0x12c <__vector_2+0x3c>
		{
			rising_edge=1;
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <rising_edge>
			TCNT0 = 0;
     120:	16 bc       	out	0x26, r1	; 38
			timer_value = 0;
     122:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <timer_value+0x1>
     126:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <timer_value>
     12a:	19 c0       	rjmp	.+50     	; 0x15e <__vector_2+0x6e>
		}
		else //Check if echo turned low, calculate distance
		{
			rising_edge = 0;
     12c:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <rising_edge>
			distance_cm = (timer_value*256 + TCNT0)/58;
     130:	86 b5       	in	r24, 0x26	; 38
     132:	20 e0       	ldi	r18, 0x00	; 0
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	30 91 b9 02 	lds	r19, 0x02B9	; 0x8002b9 <timer_value>
     13a:	28 0f       	add	r18, r24
     13c:	31 1d       	adc	r19, r1
     13e:	af e9       	ldi	r26, 0x9F	; 159
     140:	b6 e4       	ldi	r27, 0x46	; 70
     142:	0e 94 ba 04 	call	0x974	; 0x974 <__umulhisi3>
     146:	92 95       	swap	r25
     148:	82 95       	swap	r24
     14a:	8f 70       	andi	r24, 0x0F	; 15
     14c:	89 27       	eor	r24, r25
     14e:	9f 70       	andi	r25, 0x0F	; 15
     150:	89 27       	eor	r24, r25
     152:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <distance_cm+0x1>
     156:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <distance_cm>
			working = 0;
     15a:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <working>
		}
	}
}
     15e:	bf 91       	pop	r27
     160:	af 91       	pop	r26
     162:	9f 91       	pop	r25
     164:	8f 91       	pop	r24
     166:	7f 91       	pop	r23
     168:	6f 91       	pop	r22
     16a:	3f 91       	pop	r19
     16c:	2f 91       	pop	r18
     16e:	0f 90       	pop	r0
     170:	0f be       	out	0x3f, r0	; 63
     172:	0f 90       	pop	r0
     174:	1f 90       	pop	r1
     176:	18 95       	reti

00000178 <__vector_11>:
  determined by the timer settings in SCH_Init_T1().

-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
     178:	1f 92       	push	r1
     17a:	0f 92       	push	r0
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	0f 92       	push	r0
     180:	11 24       	eor	r1, r1
     182:	2f 93       	push	r18
     184:	3f 93       	push	r19
     186:	8f 93       	push	r24
     188:	9f 93       	push	r25
     18a:	af 93       	push	r26
     18c:	bf 93       	push	r27
     18e:	ef 93       	push	r30
     190:	ff 93       	push	r31
     192:	ef eb       	ldi	r30, 0xBF	; 191
     194:	f2 e0       	ldi	r31, 0x02	; 2
     196:	22 ee       	ldi	r18, 0xE2	; 226
     198:	32 e0       	ldi	r19, 0x02	; 2
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
   {
      // Check if there is a task at this location
      if(SCH_tasks_G[Index].pTask)
     19a:	80 81       	ld	r24, Z
     19c:	91 81       	ldd	r25, Z+1	; 0x01
     19e:	89 2b       	or	r24, r25
     1a0:	91 f0       	breq	.+36     	; 0x1c6 <__vector_11+0x4e>
      {
         if(SCH_tasks_G[Index].Delay == 0)
     1a2:	82 81       	ldd	r24, Z+2	; 0x02
     1a4:	93 81       	ldd	r25, Z+3	; 0x03
     1a6:	00 97       	sbiw	r24, 0x00	; 0
     1a8:	59 f4       	brne	.+22     	; 0x1c0 <__vector_11+0x48>
         {
            // The task is due to run, Inc. the 'RunMe' flag
            SCH_tasks_G[Index].RunMe += 1;
     1aa:	86 81       	ldd	r24, Z+6	; 0x06
     1ac:	8f 5f       	subi	r24, 0xFF	; 255
     1ae:	86 83       	std	Z+6, r24	; 0x06

            if(SCH_tasks_G[Index].Period)
     1b0:	84 81       	ldd	r24, Z+4	; 0x04
     1b2:	95 81       	ldd	r25, Z+5	; 0x05
     1b4:	00 97       	sbiw	r24, 0x00	; 0
     1b6:	39 f0       	breq	.+14     	; 0x1c6 <__vector_11+0x4e>
            {
               // Schedule periodic tasks to run again
               SCH_tasks_G[Index].Delay = SCH_tasks_G[Index].Period;
               SCH_tasks_G[Index].Delay -= 1;
     1b8:	01 97       	sbiw	r24, 0x01	; 1
     1ba:	93 83       	std	Z+3, r25	; 0x03
     1bc:	82 83       	std	Z+2, r24	; 0x02
     1be:	03 c0       	rjmp	.+6      	; 0x1c6 <__vector_11+0x4e>
            }
         }
         else
         {
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	93 83       	std	Z+3, r25	; 0x03
     1c4:	82 83       	std	Z+2, r24	; 0x02
     1c6:	37 96       	adiw	r30, 0x07	; 7
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
     1c8:	e2 17       	cp	r30, r18
     1ca:	f3 07       	cpc	r31, r19
     1cc:	31 f7       	brne	.-52     	; 0x19a <__vector_11+0x22>
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
         }
      }
   }
}
     1ce:	ff 91       	pop	r31
     1d0:	ef 91       	pop	r30
     1d2:	bf 91       	pop	r27
     1d4:	af 91       	pop	r26
     1d6:	9f 91       	pop	r25
     1d8:	8f 91       	pop	r24
     1da:	3f 91       	pop	r19
     1dc:	2f 91       	pop	r18
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <ser_init>:
}

void ser_writeln(char* s) {
	ser_write(s);
	ser_transmit('\r');
	ser_transmit('\n');
     1e8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     1ec:	87 e6       	ldi	r24, 0x67	; 103
     1ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     1f2:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     1f6:	88 e1       	ldi	r24, 0x18	; 24
     1f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     1fc:	86 e0       	ldi	r24, 0x06	; 6
     1fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	91 e0       	ldi	r25, 0x01	; 1
     206:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <__iob+0x3>
     20a:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <__iob+0x2>
     20e:	08 95       	ret

00000210 <ser_transmit>:
     210:	e0 ec       	ldi	r30, 0xC0	; 192
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	90 81       	ld	r25, Z
     216:	95 ff       	sbrs	r25, 5
     218:	fd cf       	rjmp	.-6      	; 0x214 <ser_transmit+0x4>
     21a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     21e:	08 95       	ret

00000220 <ser_stdio_putchar>:
     220:	cf 93       	push	r28
     222:	c8 2f       	mov	r28, r24
     224:	8a 30       	cpi	r24, 0x0A	; 10
     226:	19 f4       	brne	.+6      	; 0x22e <ser_stdio_putchar+0xe>
     228:	8d e0       	ldi	r24, 0x0D	; 13
     22a:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     22e:	8c 2f       	mov	r24, r28
     230:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <ser_receive>:
     238:	e0 ec       	ldi	r30, 0xC0	; 192
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	80 81       	ld	r24, Z
     23e:	88 23       	and	r24, r24
     240:	ec f7       	brge	.-6      	; 0x23c <ser_receive+0x4>
     242:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     246:	08 95       	ret

00000248 <ser_readln>:
}

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
     248:	af 92       	push	r10
     24a:	bf 92       	push	r11
     24c:	cf 92       	push	r12
     24e:	df 92       	push	r13
     250:	ef 92       	push	r14
     252:	ff 92       	push	r15
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	6c 01       	movw	r12, r24
     25e:	d4 2f       	mov	r29, r20
     260:	5c 01       	movw	r10, r24
	int i=0;
     262:	00 e0       	ldi	r16, 0x00	; 0
     264:	10 e0       	ldi	r17, 0x00	; 0
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     266:	7b 01       	movw	r14, r22
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	e8 1a       	sub	r14, r24
     26c:	f1 08       	sbc	r15, r1
// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;

	while(1) {
		uint8_t c = ser_receive();
     26e:	0e 94 1c 01 	call	0x238	; 0x238 <ser_receive>
     272:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
     274:	d1 11       	cpse	r29, r1
     276:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
		if (c=='\r') {
     27a:	cd 30       	cpi	r28, 0x0D	; 13
     27c:	31 f4       	brne	.+12     	; 0x28a <ser_readln+0x42>
			if (echo) ser_transmit('\n');
     27e:	dd 23       	and	r29, r29
     280:	69 f0       	breq	.+26     	; 0x29c <ser_readln+0x54>
     282:	8a e0       	ldi	r24, 0x0A	; 10
     284:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     288:	09 c0       	rjmp	.+18     	; 0x29c <ser_readln+0x54>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     28a:	0e 15       	cp	r16, r14
     28c:	1f 05       	cpc	r17, r15
     28e:	7c f7       	brge	.-34     	; 0x26e <ser_readln+0x26>
			buf[i++]=c;
     290:	0f 5f       	subi	r16, 0xFF	; 255
     292:	1f 4f       	sbci	r17, 0xFF	; 255
     294:	f5 01       	movw	r30, r10
     296:	c1 93       	st	Z+, r28
     298:	5f 01       	movw	r10, r30
     29a:	e9 cf       	rjmp	.-46     	; 0x26e <ser_readln+0x26>
		}
	}
	buf[i]='\0';
     29c:	f6 01       	movw	r30, r12
     29e:	e0 0f       	add	r30, r16
     2a0:	f1 1f       	adc	r31, r17
     2a2:	10 82       	st	Z, r1
}
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	1f 91       	pop	r17
     2aa:	0f 91       	pop	r16
     2ac:	ff 90       	pop	r15
     2ae:	ef 90       	pop	r14
     2b0:	df 90       	pop	r13
     2b2:	cf 90       	pop	r12
     2b4:	bf 90       	pop	r11
     2b6:	af 90       	pop	r10
     2b8:	08 95       	ret

000002ba <initEEPROM>:
			panelDown();
		} else if(readLight() < SRAMLightMin) {
			panelUp();
		}	
	}
}
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	28 97       	sbiw	r28, 0x08	; 8
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
     2ce:	84 e0       	ldi	r24, 0x04	; 4
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     2d6:	88 23       	and	r24, r24
     2d8:	09 f4       	brne	.+2      	; 0x2dc <initEEPROM+0x22>
     2da:	41 c0       	rjmp	.+130    	; 0x35e <initEEPROM+0xa4>
     2dc:	88 e0       	ldi	r24, 0x08	; 8
     2de:	ea ea       	ldi	r30, 0xAA	; 170
     2e0:	f1 e0       	ldi	r31, 0x01	; 1
     2e2:	de 01       	movw	r26, r28
     2e4:	11 96       	adiw	r26, 0x01	; 1
     2e6:	01 90       	ld	r0, Z+
     2e8:	0d 92       	st	X+, r0
     2ea:	8a 95       	dec	r24
     2ec:	e1 f7       	brne	.-8      	; 0x2e6 <initEEPROM+0x2c>
     2ee:	4a e0       	ldi	r20, 0x0A	; 10
     2f0:	50 e0       	ldi	r21, 0x00	; 0
     2f2:	6d e0       	ldi	r22, 0x0D	; 13
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	ce 01       	movw	r24, r28
     2f8:	01 96       	adiw	r24, 0x01	; 1
     2fa:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <eeprom_write_block>
     2fe:	61 e0       	ldi	r22, 0x01	; 1
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	82 e0       	ldi	r24, 0x02	; 2
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     30a:	60 e0       	ldi	r22, 0x00	; 0
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	89 e0       	ldi	r24, 0x09	; 9
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     316:	60 e5       	ldi	r22, 0x50	; 80
     318:	70 e0       	ldi	r23, 0x00	; 0
     31a:	8b e0       	ldi	r24, 0x0B	; 11
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     322:	6f ed       	ldi	r22, 0xDF	; 223
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	87 e0       	ldi	r24, 0x07	; 7
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     32e:	6f ee       	ldi	r22, 0xEF	; 239
     330:	70 e0       	ldi	r23, 0x00	; 0
     332:	85 e0       	ldi	r24, 0x05	; 5
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     33a:	6f ee       	ldi	r22, 0xEF	; 239
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	85 e0       	ldi	r24, 0x05	; 5
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     346:	66 e9       	ldi	r22, 0x96	; 150
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     352:	60 e0       	ldi	r22, 0x00	; 0
     354:	70 e0       	ldi	r23, 0x00	; 0
     356:	84 e0       	ldi	r24, 0x04	; 4
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     35e:	28 96       	adiw	r28, 0x08	; 8
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <setMode>:
     370:	bc 01       	movw	r22, r24
     372:	82 e0       	ldi	r24, 0x02	; 2
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     37a:	08 95       	ret

0000037c <setTempMin>:
     37c:	bc 01       	movw	r22, r24
     37e:	89 e0       	ldi	r24, 0x09	; 9
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     386:	08 95       	ret

00000388 <setTempMax>:
     388:	bc 01       	movw	r22, r24
     38a:	8b e0       	ldi	r24, 0x0B	; 11
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     392:	08 95       	ret

00000394 <setLightMin>:
     394:	bc 01       	movw	r22, r24
     396:	87 e0       	ldi	r24, 0x07	; 7
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     39e:	08 95       	ret

000003a0 <setLightMax>:
     3a0:	bc 01       	movw	r22, r24
     3a2:	87 e0       	ldi	r24, 0x07	; 7
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     3aa:	08 95       	ret

000003ac <setDeviceName>:
     3ac:	fc 01       	movw	r30, r24
     3ae:	01 90       	ld	r0, Z+
     3b0:	00 20       	and	r0, r0
     3b2:	e9 f7       	brne	.-6      	; 0x3ae <setDeviceName+0x2>
     3b4:	31 97       	sbiw	r30, 0x01	; 1
     3b6:	e8 1b       	sub	r30, r24
     3b8:	f9 0b       	sbc	r31, r25
     3ba:	3b 97       	sbiw	r30, 0x0b	; 11
     3bc:	4c f0       	brlt	.+18     	; 0x3d0 <setDeviceName+0x24>
     3be:	82 e1       	ldi	r24, 0x12	; 18
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	9f 93       	push	r25
     3c4:	8f 93       	push	r24
     3c6:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	08 95       	ret
     3d0:	4a e0       	ldi	r20, 0x0A	; 10
     3d2:	50 e0       	ldi	r21, 0x00	; 0
     3d4:	6d e0       	ldi	r22, 0x0D	; 13
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <eeprom_write_block>
     3dc:	86 e2       	ldi	r24, 0x26	; 38
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	9f 93       	push	r25
     3e2:	8f 93       	push	r24
     3e4:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	08 95       	ret

000003ee <setDistanceMax>:
     3ee:	bc 01       	movw	r22, r24
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <eeprom_write_word>
     3f8:	08 95       	ret

000003fa <getDeviceName>:
     3fa:	ef 92       	push	r14
     3fc:	ff 92       	push	r15
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	2a 97       	sbiw	r28, 0x0a	; 10
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	de bf       	out	0x3e, r29	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	cd bf       	out	0x3d, r28	; 61
     416:	7c 01       	movw	r14, r24
     418:	8b 01       	movw	r16, r22
     41a:	4a e0       	ldi	r20, 0x0A	; 10
     41c:	50 e0       	ldi	r21, 0x00	; 0
     41e:	6d e0       	ldi	r22, 0x0D	; 13
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	ce 01       	movw	r24, r28
     424:	01 96       	adiw	r24, 0x01	; 1
     426:	0e 94 bc 08 	call	0x1178	; 0x1178 <eeprom_read_block>
     42a:	a8 01       	movw	r20, r16
     42c:	41 50       	subi	r20, 0x01	; 1
     42e:	51 09       	sbc	r21, r1
     430:	be 01       	movw	r22, r28
     432:	6f 5f       	subi	r22, 0xFF	; 255
     434:	7f 4f       	sbci	r23, 0xFF	; 255
     436:	c7 01       	movw	r24, r14
     438:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <strncpy>
     43c:	0e 0d       	add	r16, r14
     43e:	1f 1d       	adc	r17, r15
     440:	f8 01       	movw	r30, r16
     442:	31 97       	sbiw	r30, 0x01	; 1
     444:	10 82       	st	Z, r1
     446:	2a 96       	adiw	r28, 0x0a	; 10
     448:	0f b6       	in	r0, 0x3f	; 63
     44a:	f8 94       	cli
     44c:	de bf       	out	0x3e, r29	; 62
     44e:	0f be       	out	0x3f, r0	; 63
     450:	cd bf       	out	0x3d, r28	; 61
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	1f 91       	pop	r17
     458:	0f 91       	pop	r16
     45a:	ff 90       	pop	r15
     45c:	ef 90       	pop	r14
     45e:	08 95       	ret

00000460 <get_config>:
     460:	4f 92       	push	r4
     462:	5f 92       	push	r5
     464:	6f 92       	push	r6
     466:	7f 92       	push	r7
     468:	8f 92       	push	r8
     46a:	9f 92       	push	r9
     46c:	af 92       	push	r10
     46e:	bf 92       	push	r11
     470:	cf 92       	push	r12
     472:	df 92       	push	r13
     474:	ef 92       	push	r14
     476:	ff 92       	push	r15
     478:	0f 93       	push	r16
     47a:	1f 93       	push	r17
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
     484:	2a 97       	sbiw	r28, 0x0a	; 10
     486:	0f b6       	in	r0, 0x3f	; 63
     488:	f8 94       	cli
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	cd bf       	out	0x3d, r28	; 61
     490:	82 e0       	ldi	r24, 0x02	; 2
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     498:	f8 2e       	mov	r15, r24
     49a:	e9 2e       	mov	r14, r25
     49c:	8b e0       	ldi	r24, 0x0B	; 11
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     4a4:	b8 2e       	mov	r11, r24
     4a6:	a9 2e       	mov	r10, r25
     4a8:	89 e0       	ldi	r24, 0x09	; 9
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     4b0:	d8 2e       	mov	r13, r24
     4b2:	c9 2e       	mov	r12, r25
     4b4:	85 e0       	ldi	r24, 0x05	; 5
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     4bc:	78 2e       	mov	r7, r24
     4be:	69 2e       	mov	r6, r25
     4c0:	87 e0       	ldi	r24, 0x07	; 7
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     4c8:	98 2e       	mov	r9, r24
     4ca:	89 2e       	mov	r8, r25
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 cc 08 	call	0x1198	; 0x1198 <eeprom_read_word>
     4d4:	58 2e       	mov	r5, r24
     4d6:	49 2e       	mov	r4, r25
     4d8:	6a e0       	ldi	r22, 0x0A	; 10
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	8e 01       	movw	r16, r28
     4de:	0f 5f       	subi	r16, 0xFF	; 255
     4e0:	1f 4f       	sbci	r17, 0xFF	; 255
     4e2:	c8 01       	movw	r24, r16
     4e4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <getDeviceName>
     4e8:	89 81       	ldd	r24, Y+1	; 0x01
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	0e 94 21 06 	call	0xc42	; 0xc42 <putchar>
     4f0:	4f 92       	push	r4
     4f2:	5f 92       	push	r5
     4f4:	6f 92       	push	r6
     4f6:	7f 92       	push	r7
     4f8:	8f 92       	push	r8
     4fa:	9f 92       	push	r9
     4fc:	af 92       	push	r10
     4fe:	bf 92       	push	r11
     500:	cf 92       	push	r12
     502:	df 92       	push	r13
     504:	ef 92       	push	r14
     506:	ff 92       	push	r15
     508:	1f 93       	push	r17
     50a:	0f 93       	push	r16
     50c:	85 e0       	ldi	r24, 0x05	; 5
     50e:	8f 93       	push	r24
     510:	89 e3       	ldi	r24, 0x39	; 57
     512:	8f 93       	push	r24
     514:	8c e2       	ldi	r24, 0x2C	; 44
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	9f 93       	push	r25
     51a:	8f 93       	push	r24
     51c:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     520:	0f b6       	in	r0, 0x3f	; 63
     522:	f8 94       	cli
     524:	de bf       	out	0x3e, r29	; 62
     526:	0f be       	out	0x3f, r0	; 63
     528:	cd bf       	out	0x3d, r28	; 61
     52a:	2a 96       	adiw	r28, 0x0a	; 10
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	ef 90       	pop	r14
     542:	df 90       	pop	r13
     544:	cf 90       	pop	r12
     546:	bf 90       	pop	r11
     548:	af 90       	pop	r10
     54a:	9f 90       	pop	r9
     54c:	8f 90       	pop	r8
     54e:	7f 90       	pop	r7
     550:	6f 90       	pop	r6
     552:	5f 90       	pop	r5
     554:	4f 90       	pop	r4
     556:	08 95       	ret

00000558 <panelUp>:
     558:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <__data_end>
     55c:	90 91 b7 02 	lds	r25, 0x02B7	; 0x8002b7 <__data_end+0x1>
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	e1 f4       	brne	.+56     	; 0x59c <panelUp+0x44>
     564:	28 98       	cbi	0x05, 0	; 5
     566:	29 9a       	sbi	0x05, 1	; 5
     568:	25 e0       	ldi	r18, 0x05	; 5
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	94 e0       	ldi	r25, 0x04	; 4
     56e:	85 b1       	in	r24, 0x05	; 5
     570:	89 27       	eor	r24, r25
     572:	85 b9       	out	0x05, r24	; 5
     574:	4f ef       	ldi	r20, 0xFF	; 255
     576:	53 ed       	ldi	r21, 0xD3	; 211
     578:	80 e3       	ldi	r24, 0x30	; 48
     57a:	41 50       	subi	r20, 0x01	; 1
     57c:	50 40       	sbci	r21, 0x00	; 0
     57e:	80 40       	sbci	r24, 0x00	; 0
     580:	e1 f7       	brne	.-8      	; 0x57a <panelUp+0x22>
     582:	00 c0       	rjmp	.+0      	; 0x584 <panelUp+0x2c>
     584:	00 00       	nop
     586:	21 50       	subi	r18, 0x01	; 1
     588:	31 09       	sbc	r19, r1
     58a:	89 f7       	brne	.-30     	; 0x56e <panelUp+0x16>
     58c:	2a 98       	cbi	0x05, 2	; 5
     58e:	10 92 b7 02 	sts	0x02B7, r1	; 0x8002b7 <__data_end+0x1>
     592:	10 92 b6 02 	sts	0x02B6, r1	; 0x8002b6 <__data_end>
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	08 95       	ret
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	08 95       	ret

000005a2 <panelDown>:
     5a2:	60 91 b6 02 	lds	r22, 0x02B6	; 0x8002b6 <__data_end>
     5a6:	70 91 b7 02 	lds	r23, 0x02B7	; 0x8002b7 <__data_end+0x1>
     5aa:	61 15       	cp	r22, r1
     5ac:	71 05       	cpc	r23, r1
     5ae:	e1 f4       	brne	.+56     	; 0x5e8 <panelDown+0x46>
     5b0:	29 98       	cbi	0x05, 1	; 5
     5b2:	28 9a       	sbi	0x05, 0	; 5
     5b4:	25 e0       	ldi	r18, 0x05	; 5
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	44 e0       	ldi	r20, 0x04	; 4
     5ba:	95 b1       	in	r25, 0x05	; 5
     5bc:	94 27       	eor	r25, r20
     5be:	95 b9       	out	0x05, r25	; 5
     5c0:	5f ef       	ldi	r21, 0xFF	; 255
     5c2:	83 ed       	ldi	r24, 0xD3	; 211
     5c4:	90 e3       	ldi	r25, 0x30	; 48
     5c6:	51 50       	subi	r21, 0x01	; 1
     5c8:	80 40       	sbci	r24, 0x00	; 0
     5ca:	90 40       	sbci	r25, 0x00	; 0
     5cc:	e1 f7       	brne	.-8      	; 0x5c6 <panelDown+0x24>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <panelDown+0x2e>
     5d0:	00 00       	nop
     5d2:	21 50       	subi	r18, 0x01	; 1
     5d4:	31 09       	sbc	r19, r1
     5d6:	89 f7       	brne	.-30     	; 0x5ba <panelDown+0x18>
     5d8:	2a 98       	cbi	0x05, 2	; 5
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <__data_end+0x1>
     5e2:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <__data_end>
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <panelDown+0x4a>
     5e8:	61 e0       	ldi	r22, 0x01	; 1
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	cb 01       	movw	r24, r22
     5ee:	08 95       	ret

000005f0 <initPanel>:
     5f0:	87 e0       	ldi	r24, 0x07	; 7
     5f2:	84 b9       	out	0x04, r24	; 4
     5f4:	85 b9       	out	0x05, r24	; 5
     5f6:	2f ef       	ldi	r18, 0xFF	; 255
     5f8:	83 ec       	ldi	r24, 0xC3	; 195
     5fa:	99 e0       	ldi	r25, 0x09	; 9
     5fc:	21 50       	subi	r18, 0x01	; 1
     5fe:	80 40       	sbci	r24, 0x00	; 0
     600:	90 40       	sbci	r25, 0x00	; 0
     602:	e1 f7       	brne	.-8      	; 0x5fc <initPanel+0xc>
     604:	00 c0       	rjmp	.+0      	; 0x606 <initPanel+0x16>
     606:	00 00       	nop
     608:	81 e0       	ldi	r24, 0x01	; 1
     60a:	85 b9       	out	0x05, r24	; 5
     60c:	08 95       	ret

0000060e <adc_init>:
     60e:	ec e7       	ldi	r30, 0x7C	; 124
     610:	f0 e0       	ldi	r31, 0x00	; 0
     612:	80 81       	ld	r24, Z
     614:	80 66       	ori	r24, 0x60	; 96
     616:	80 83       	st	Z, r24
     618:	87 e8       	ldi	r24, 0x87	; 135
     61a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     61e:	08 95       	ret

00000620 <adc_read>:
     620:	ea e7       	ldi	r30, 0x7A	; 122
     622:	f0 e0       	ldi	r31, 0x00	; 0
     624:	80 81       	ld	r24, Z
     626:	80 64       	ori	r24, 0x40	; 64
     628:	80 83       	st	Z, r24
     62a:	80 81       	ld	r24, Z
     62c:	86 fd       	sbrc	r24, 6
     62e:	fd cf       	rjmp	.-6      	; 0x62a <adc_read+0xa>
     630:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	08 95       	ret

00000638 <readLight>:
     638:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     63c:	80 36       	cpi	r24, 0x60	; 96
     63e:	31 f0       	breq	.+12     	; 0x64c <readLight+0x14>
     640:	ec e7       	ldi	r30, 0x7C	; 124
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	10 82       	st	Z, r1
     646:	80 81       	ld	r24, Z
     648:	80 66       	ori	r24, 0x60	; 96
     64a:	80 83       	st	Z, r24
     64c:	0e 94 10 03 	call	0x620	; 0x620 <adc_read>
     650:	9c 01       	movw	r18, r24
     652:	ad ec       	ldi	r26, 0xCD	; 205
     654:	bc ec       	ldi	r27, 0xCC	; 204
     656:	0e 94 ba 04 	call	0x974	; 0x974 <__umulhisi3>
     65a:	96 95       	lsr	r25
     65c:	87 95       	ror	r24
     65e:	96 95       	lsr	r25
     660:	87 95       	ror	r24
     662:	96 95       	lsr	r25
     664:	87 95       	ror	r24
     666:	08 95       	ret

00000668 <getLight>:
     668:	0e 94 1c 03 	call	0x638	; 0x638 <readLight>
     66c:	0e 94 1c 03 	call	0x638	; 0x638 <readLight>
     670:	9f 93       	push	r25
     672:	8f 93       	push	r24
     674:	82 e5       	ldi	r24, 0x52	; 82
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	9f 93       	push	r25
     67a:	8f 93       	push	r24
     67c:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     680:	0f 90       	pop	r0
     682:	0f 90       	pop	r0
     684:	0f 90       	pop	r0
     686:	0f 90       	pop	r0
     688:	08 95       	ret

0000068a <init_timer>:
     68a:	81 e8       	ldi	r24, 0x81	; 129
     68c:	84 bd       	out	0x24, r24	; 36
     68e:	83 e0       	ldi	r24, 0x03	; 3
     690:	85 bd       	out	0x25, r24	; 37
     692:	17 bc       	out	0x27, r1	; 39
     694:	08 95       	ret

00000696 <readTemperature>:
     696:	ec e7       	ldi	r30, 0x7C	; 124
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	10 82       	st	Z, r1
     69c:	80 81       	ld	r24, Z
     69e:	83 66       	ori	r24, 0x63	; 99
     6a0:	80 83       	st	Z, r24
     6a2:	0e 94 10 03 	call	0x620	; 0x620 <adc_read>
     6a6:	42 97       	sbiw	r24, 0x12	; 18
     6a8:	08 95       	ret

000006aa <getTemperature>:
     6aa:	0e 94 4b 03 	call	0x696	; 0x696 <readTemperature>
     6ae:	9f 93       	push	r25
     6b0:	8f 93       	push	r24
     6b2:	86 e6       	ldi	r24, 0x66	; 102
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	9f 93       	push	r25
     6b8:	8f 93       	push	r24
     6ba:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     6be:	0f 90       	pop	r0
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	0f 90       	pop	r0
     6c6:	08 95       	ret

000006c8 <deleteEnd>:
	ADMUX = 0;
	ADMUX |= (1 << REFS0) | (1 << ADLAR) | (1 << MUX1) | (1 << MUX0);
	
	return adc_read() - 18;
}
void deleteEnd (char* myStr){
     6c8:	dc 01       	movw	r26, r24
	char *del = &myStr[strlen(myStr)];
     6ca:	fc 01       	movw	r30, r24
     6cc:	01 90       	ld	r0, Z+
     6ce:	00 20       	and	r0, r0
     6d0:	e9 f7       	brne	.-6      	; 0x6cc <deleteEnd+0x4>
     6d2:	31 97       	sbiw	r30, 0x01	; 1

	while (del > myStr && *del != '/') {
     6d4:	8e 17       	cp	r24, r30
     6d6:	9f 07       	cpc	r25, r31
     6d8:	80 f4       	brcc	.+32     	; 0x6fa <deleteEnd+0x32>
     6da:	80 81       	ld	r24, Z
     6dc:	8f 32       	cpi	r24, 0x2F	; 47
     6de:	69 f0       	breq	.+26     	; 0x6fa <deleteEnd+0x32>
		del--;
		
		if (*del== ':') {
     6e0:	92 91       	ld	r25, -Z
     6e2:	9a 33       	cpi	r25, 0x3A	; 58
     6e4:	29 f4       	brne	.+10     	; 0x6f0 <deleteEnd+0x28>
			*del= '\0';
     6e6:	10 82       	st	Z, r1
	return adc_read() - 18;
}
void deleteEnd (char* myStr){
	char *del = &myStr[strlen(myStr)];

	while (del > myStr && *del != '/') {
     6e8:	ae 17       	cp	r26, r30
     6ea:	bf 07       	cpc	r27, r31
     6ec:	c8 f3       	brcs	.-14     	; 0x6e0 <deleteEnd+0x18>
     6ee:	08 95       	ret
     6f0:	ae 17       	cp	r26, r30
     6f2:	bf 07       	cpc	r27, r31
     6f4:	10 f4       	brcc	.+4      	; 0x6fa <deleteEnd+0x32>
     6f6:	9f 32       	cpi	r25, 0x2F	; 47
     6f8:	99 f7       	brne	.-26     	; 0x6e0 <deleteEnd+0x18>
     6fa:	08 95       	ret

000006fc <listen>:
	return;
}


void listen()
{
     6fc:	cf 92       	push	r12
     6fe:	df 92       	push	r13
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	a8 97       	sbiw	r28, 0x28	; 40
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
	char input[40];

	ser_readln(input, sizeof(input), 1);
     71c:	41 e0       	ldi	r20, 0x01	; 1
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	68 e2       	ldi	r22, 0x28	; 40
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	ce 01       	movw	r24, r28
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	0e 94 24 01 	call	0x248	; 0x248 <ser_readln>

	const char delimiter = ':';
	char *value;
	
	value = strchr(input, delimiter);
     72c:	6a e3       	ldi	r22, 0x3A	; 58
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	ce 01       	movw	r24, r28
     732:	01 96       	adiw	r24, 0x01	; 1
     734:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <strchr>
	value++; //remove spacer from string
     738:	8c 01       	movw	r16, r24
     73a:	0f 5f       	subi	r16, 0xFF	; 255
     73c:	1f 4f       	sbci	r17, 0xFF	; 255
	deleteEnd(input);
     73e:	ce 01       	movw	r24, r28
     740:	01 96       	adiw	r24, 0x01	; 1
     742:	0e 94 64 03 	call	0x6c8	; 0x6c8 <deleteEnd>
	int newValue;
	newValue = strtol(value, NULL, 10);
     746:	4a e0       	ldi	r20, 0x0A	; 10
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	c8 01       	movw	r24, r16
     750:	0e 94 c9 04 	call	0x992	; 0x992 <strtol>
     754:	6b 01       	movw	r12, r22
     756:	7c 01       	movw	r14, r24

	if(strcmp(&input, 			"get_temperature") == 0) {
     758:	62 eb       	ldi	r22, 0xB2	; 178
     75a:	71 e0       	ldi	r23, 0x01	; 1
     75c:	ce 01       	movw	r24, r28
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     764:	89 2b       	or	r24, r25
     766:	19 f4       	brne	.+6      	; 0x76e <listen+0x72>
		getTemperature();
     768:	0e 94 55 03 	call	0x6aa	; 0x6aa <getTemperature>
     76c:	e7 c0       	rjmp	.+462    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"get_light") == 0) {
     76e:	62 ec       	ldi	r22, 0xC2	; 194
     770:	71 e0       	ldi	r23, 0x01	; 1
     772:	ce 01       	movw	r24, r28
     774:	01 96       	adiw	r24, 0x01	; 1
     776:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     77a:	89 2b       	or	r24, r25
     77c:	19 f4       	brne	.+6      	; 0x784 <listen+0x88>
		getLight();
     77e:	0e 94 34 03 	call	0x668	; 0x668 <getLight>
     782:	dc c0       	rjmp	.+440    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"get_distance") == 0) {
     784:	6c ec       	ldi	r22, 0xCC	; 204
     786:	71 e0       	ldi	r23, 0x01	; 1
     788:	ce 01       	movw	r24, r28
     78a:	01 96       	adiw	r24, 0x01	; 1
     78c:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     790:	89 2b       	or	r24, r25
     792:	09 f4       	brne	.+2      	; 0x796 <listen+0x9a>
     794:	d3 c0       	rjmp	.+422    	; 0x93c <__stack+0x3d>
		//distance = getDistance();
		//printf("2 %i\n\r", distance);
	} else if (strcmp(&input, 	"panel_out") == 0) {
     796:	69 ed       	ldi	r22, 0xD9	; 217
     798:	71 e0       	ldi	r23, 0x01	; 1
     79a:	ce 01       	movw	r24, r28
     79c:	01 96       	adiw	r24, 0x01	; 1
     79e:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     7a2:	89 2b       	or	r24, r25
     7a4:	59 f4       	brne	.+22     	; 0x7bc <listen+0xc0>
		panelDown();
     7a6:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <panelDown>
		printf("2 \n\r\0");
     7aa:	86 e2       	ldi	r24, 0x26	; 38
     7ac:	91 e0       	ldi	r25, 0x01	; 1
     7ae:	9f 93       	push	r25
     7b0:	8f 93       	push	r24
     7b2:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	c0 c0       	rjmp	.+384    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"panel_in") == 0) {
     7bc:	63 ee       	ldi	r22, 0xE3	; 227
     7be:	71 e0       	ldi	r23, 0x01	; 1
     7c0:	ce 01       	movw	r24, r28
     7c2:	01 96       	adiw	r24, 0x01	; 1
     7c4:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     7c8:	89 2b       	or	r24, r25
     7ca:	59 f4       	brne	.+22     	; 0x7e2 <listen+0xe6>
		panelUp();
     7cc:	0e 94 ac 02 	call	0x558	; 0x558 <panelUp>
		printf("2 \n\r\0");
     7d0:	86 e2       	ldi	r24, 0x26	; 38
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	9f 93       	push	r25
     7d6:	8f 93       	push	r24
     7d8:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     7dc:	0f 90       	pop	r0
     7de:	0f 90       	pop	r0
     7e0:	ad c0       	rjmp	.+346    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_light_threshold_minimum") == 0) {
     7e2:	6c ee       	ldi	r22, 0xEC	; 236
     7e4:	71 e0       	ldi	r23, 0x01	; 1
     7e6:	ce 01       	movw	r24, r28
     7e8:	01 96       	adiw	r24, 0x01	; 1
     7ea:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     7ee:	89 2b       	or	r24, r25
     7f0:	61 f4       	brne	.+24     	; 0x80a <listen+0x10e>
		setLightMin(newValue);
     7f2:	c6 01       	movw	r24, r12
     7f4:	0e 94 ca 01 	call	0x394	; 0x394 <setLightMin>
		printf("2 \n\r\0");
     7f8:	86 e2       	ldi	r24, 0x26	; 38
     7fa:	91 e0       	ldi	r25, 0x01	; 1
     7fc:	9f 93       	push	r25
     7fe:	8f 93       	push	r24
     800:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     804:	0f 90       	pop	r0
     806:	0f 90       	pop	r0
     808:	99 c0       	rjmp	.+306    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_light_threshold_maximum") == 0) {
     80a:	68 e0       	ldi	r22, 0x08	; 8
     80c:	72 e0       	ldi	r23, 0x02	; 2
     80e:	ce 01       	movw	r24, r28
     810:	01 96       	adiw	r24, 0x01	; 1
     812:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     816:	89 2b       	or	r24, r25
     818:	61 f4       	brne	.+24     	; 0x832 <listen+0x136>
		setLightMax(newValue);
     81a:	c6 01       	movw	r24, r12
     81c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <setLightMax>
		printf("2 \n\r\0");
     820:	86 e2       	ldi	r24, 0x26	; 38
     822:	91 e0       	ldi	r25, 0x01	; 1
     824:	9f 93       	push	r25
     826:	8f 93       	push	r24
     828:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     82c:	0f 90       	pop	r0
     82e:	0f 90       	pop	r0
     830:	85 c0       	rjmp	.+266    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_temperature_threshold_minimum") == 0) {
     832:	64 e2       	ldi	r22, 0x24	; 36
     834:	72 e0       	ldi	r23, 0x02	; 2
     836:	ce 01       	movw	r24, r28
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     83e:	89 2b       	or	r24, r25
     840:	61 f4       	brne	.+24     	; 0x85a <listen+0x15e>
		setTempMin(newValue);
     842:	c6 01       	movw	r24, r12
     844:	0e 94 be 01 	call	0x37c	; 0x37c <setTempMin>
		printf("2 \n\r\0");
     848:	86 e2       	ldi	r24, 0x26	; 38
     84a:	91 e0       	ldi	r25, 0x01	; 1
     84c:	9f 93       	push	r25
     84e:	8f 93       	push	r24
     850:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     854:	0f 90       	pop	r0
     856:	0f 90       	pop	r0
     858:	71 c0       	rjmp	.+226    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_temperature_threshold_maximum") == 0) {
     85a:	66 e4       	ldi	r22, 0x46	; 70
     85c:	72 e0       	ldi	r23, 0x02	; 2
     85e:	ce 01       	movw	r24, r28
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     866:	89 2b       	or	r24, r25
     868:	21 f4       	brne	.+8      	; 0x872 <listen+0x176>
		setTempMax(newValue);
     86a:	c6 01       	movw	r24, r12
     86c:	0e 94 c4 01 	call	0x388	; 0x388 <setTempMax>
     870:	65 c0       	rjmp	.+202    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_max_distance") == 0) {
     872:	68 e6       	ldi	r22, 0x68	; 104
     874:	72 e0       	ldi	r23, 0x02	; 2
     876:	ce 01       	movw	r24, r28
     878:	01 96       	adiw	r24, 0x01	; 1
     87a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     87e:	89 2b       	or	r24, r25
     880:	61 f4       	brne	.+24     	; 0x89a <listen+0x19e>
		setDistanceMax(newValue);
     882:	c6 01       	movw	r24, r12
     884:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setDistanceMax>
		printf("2 \n\r\0");
     888:	86 e2       	ldi	r24, 0x26	; 38
     88a:	91 e0       	ldi	r25, 0x01	; 1
     88c:	9f 93       	push	r25
     88e:	8f 93       	push	r24
     890:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     894:	0f 90       	pop	r0
     896:	0f 90       	pop	r0
     898:	51 c0       	rjmp	.+162    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"handshake") == 0) {
     89a:	69 e7       	ldi	r22, 0x79	; 121
     89c:	72 e0       	ldi	r23, 0x02	; 2
     89e:	ce 01       	movw	r24, r28
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     8a6:	89 2b       	or	r24, r25
     8a8:	19 f4       	brne	.+6      	; 0x8b0 <listen+0x1b4>
		get_config();
     8aa:	0e 94 30 02 	call	0x460	; 0x460 <get_config>
     8ae:	46 c0       	rjmp	.+140    	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_mode_automatic") == 0) {
     8b0:	63 e8       	ldi	r22, 0x83	; 131
     8b2:	72 e0       	ldi	r23, 0x02	; 2
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     8bc:	89 2b       	or	r24, r25
     8be:	69 f4       	brne	.+26     	; 0x8da <listen+0x1de>
		setMode(0);
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	0e 94 b8 01 	call	0x370	; 0x370 <setMode>
		printf("2 \n\r\0");
     8c8:	86 e2       	ldi	r24, 0x26	; 38
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	9f 93       	push	r25
     8ce:	8f 93       	push	r24
     8d0:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	31 c0       	rjmp	.+98     	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, 	"set_mode_manual") == 0) {
     8da:	66 e9       	ldi	r22, 0x96	; 150
     8dc:	72 e0       	ldi	r23, 0x02	; 2
     8de:	ce 01       	movw	r24, r28
     8e0:	01 96       	adiw	r24, 0x01	; 1
     8e2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     8e6:	89 2b       	or	r24, r25
     8e8:	69 f4       	brne	.+26     	; 0x904 <__stack+0x5>
		setMode(1);
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 b8 01 	call	0x370	; 0x370 <setMode>
		printf("2 \n\r\0");
     8f2:	86 e2       	ldi	r24, 0x26	; 38
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	9f 93       	push	r25
     8f8:	8f 93       	push	r24
     8fa:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	1c c0       	rjmp	.+56     	; 0x93c <__stack+0x3d>
	} else if (strcmp(&input, "set_device_name") == 0) {
     904:	66 ea       	ldi	r22, 0xA6	; 166
     906:	72 e0       	ldi	r23, 0x02	; 2
     908:	ce 01       	movw	r24, r28
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <strcmp>
     910:	89 2b       	or	r24, r25
     912:	61 f4       	brne	.+24     	; 0x92c <__stack+0x2d>
		setDeviceName(value);
     914:	c8 01       	movw	r24, r16
     916:	0e 94 d6 01 	call	0x3ac	; 0x3ac <setDeviceName>
		printf("2 \n\r\0");
     91a:	86 e2       	ldi	r24, 0x26	; 38
     91c:	91 e0       	ldi	r25, 0x01	; 1
     91e:	9f 93       	push	r25
     920:	8f 93       	push	r24
     922:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     926:	0f 90       	pop	r0
     928:	0f 90       	pop	r0
     92a:	08 c0       	rjmp	.+16     	; 0x93c <__stack+0x3d>
	} else {
		printf("4 unkown_command \n\r\0");
     92c:	85 e9       	ldi	r24, 0x95	; 149
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	0e 94 0b 06 	call	0xc16	; 0xc16 <printf>
     938:	0f 90       	pop	r0
     93a:	0f 90       	pop	r0
	}
}
     93c:	a8 96       	adiw	r28, 0x28	; 40
     93e:	0f b6       	in	r0, 0x3f	; 63
     940:	f8 94       	cli
     942:	de bf       	out	0x3e, r29	; 62
     944:	0f be       	out	0x3f, r0	; 63
     946:	cd bf       	out	0x3d, r28	; 61
     948:	df 91       	pop	r29
     94a:	cf 91       	pop	r28
     94c:	1f 91       	pop	r17
     94e:	0f 91       	pop	r16
     950:	ff 90       	pop	r15
     952:	ef 90       	pop	r14
     954:	df 90       	pop	r13
     956:	cf 90       	pop	r12
     958:	08 95       	ret

0000095a <main>:
#include "distance_sensor.h"

int main() {
	//https://www.avrfreaks.net/forum/tut-c-using-eeprom-memory-avr-gcc?page=all
	
	ser_init();
     95a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <ser_init>
	adc_init();
     95e:	0e 94 07 03 	call	0x60e	; 0x60e <adc_init>
	init_timer();
     962:	0e 94 45 03 	call	0x68a	; 0x68a <init_timer>
	initPanel();
     966:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <initPanel>
	initEEPROM();
     96a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <initEEPROM>
	
	while (1) {
		//printf("%i\0", distance_cm);
		//Send_signal();
		//SCH_Dispatch_Tasks();
		listen();
     96e:	0e 94 7e 03 	call	0x6fc	; 0x6fc <listen>
     972:	fd cf       	rjmp	.-6      	; 0x96e <main+0x14>

00000974 <__umulhisi3>:
     974:	a2 9f       	mul	r26, r18
     976:	b0 01       	movw	r22, r0
     978:	b3 9f       	mul	r27, r19
     97a:	c0 01       	movw	r24, r0
     97c:	a3 9f       	mul	r26, r19
     97e:	70 0d       	add	r23, r0
     980:	81 1d       	adc	r24, r1
     982:	11 24       	eor	r1, r1
     984:	91 1d       	adc	r25, r1
     986:	b2 9f       	mul	r27, r18
     988:	70 0d       	add	r23, r0
     98a:	81 1d       	adc	r24, r1
     98c:	11 24       	eor	r1, r1
     98e:	91 1d       	adc	r25, r1
     990:	08 95       	ret

00000992 <strtol>:
     992:	a0 e0       	ldi	r26, 0x00	; 0
     994:	b0 e0       	ldi	r27, 0x00	; 0
     996:	ef ec       	ldi	r30, 0xCF	; 207
     998:	f4 e0       	ldi	r31, 0x04	; 4
     99a:	0c 94 2d 09 	jmp	0x125a	; 0x125a <__prologue_saves__+0x2>
     99e:	5c 01       	movw	r10, r24
     9a0:	6b 01       	movw	r12, r22
     9a2:	7a 01       	movw	r14, r20
     9a4:	61 15       	cp	r22, r1
     9a6:	71 05       	cpc	r23, r1
     9a8:	19 f0       	breq	.+6      	; 0x9b0 <strtol+0x1e>
     9aa:	fb 01       	movw	r30, r22
     9ac:	91 83       	std	Z+1, r25	; 0x01
     9ae:	80 83       	st	Z, r24
     9b0:	e1 14       	cp	r14, r1
     9b2:	f1 04       	cpc	r15, r1
     9b4:	29 f0       	breq	.+10     	; 0x9c0 <strtol+0x2e>
     9b6:	c7 01       	movw	r24, r14
     9b8:	02 97       	sbiw	r24, 0x02	; 2
     9ba:	83 97       	sbiw	r24, 0x23	; 35
     9bc:	08 f0       	brcs	.+2      	; 0x9c0 <strtol+0x2e>
     9be:	e5 c0       	rjmp	.+458    	; 0xb8a <strtol+0x1f8>
     9c0:	e5 01       	movw	r28, r10
     9c2:	21 96       	adiw	r28, 0x01	; 1
     9c4:	f5 01       	movw	r30, r10
     9c6:	10 81       	ld	r17, Z
     9c8:	81 2f       	mov	r24, r17
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	0e 94 df 05 	call	0xbbe	; 0xbbe <isspace>
     9d0:	89 2b       	or	r24, r25
     9d2:	11 f0       	breq	.+4      	; 0x9d8 <strtol+0x46>
     9d4:	5e 01       	movw	r10, r28
     9d6:	f4 cf       	rjmp	.-24     	; 0x9c0 <strtol+0x2e>
     9d8:	1d 32       	cpi	r17, 0x2D	; 45
     9da:	29 f4       	brne	.+10     	; 0x9e6 <strtol+0x54>
     9dc:	21 96       	adiw	r28, 0x01	; 1
     9de:	f5 01       	movw	r30, r10
     9e0:	11 81       	ldd	r17, Z+1	; 0x01
     9e2:	01 e0       	ldi	r16, 0x01	; 1
     9e4:	07 c0       	rjmp	.+14     	; 0x9f4 <strtol+0x62>
     9e6:	1b 32       	cpi	r17, 0x2B	; 43
     9e8:	21 f4       	brne	.+8      	; 0x9f2 <strtol+0x60>
     9ea:	e5 01       	movw	r28, r10
     9ec:	22 96       	adiw	r28, 0x02	; 2
     9ee:	f5 01       	movw	r30, r10
     9f0:	11 81       	ldd	r17, Z+1	; 0x01
     9f2:	00 e0       	ldi	r16, 0x00	; 0
     9f4:	e1 14       	cp	r14, r1
     9f6:	f1 04       	cpc	r15, r1
     9f8:	09 f1       	breq	.+66     	; 0xa3c <strtol+0xaa>
     9fa:	f0 e1       	ldi	r31, 0x10	; 16
     9fc:	ef 16       	cp	r14, r31
     9fe:	f1 04       	cpc	r15, r1
     a00:	29 f4       	brne	.+10     	; 0xa0c <strtol+0x7a>
     a02:	3f c0       	rjmp	.+126    	; 0xa82 <strtol+0xf0>
     a04:	10 e3       	ldi	r17, 0x30	; 48
     a06:	e1 14       	cp	r14, r1
     a08:	f1 04       	cpc	r15, r1
     a0a:	21 f1       	breq	.+72     	; 0xa54 <strtol+0xc2>
     a0c:	28 e0       	ldi	r18, 0x08	; 8
     a0e:	e2 16       	cp	r14, r18
     a10:	f1 04       	cpc	r15, r1
     a12:	01 f1       	breq	.+64     	; 0xa54 <strtol+0xc2>
     a14:	54 f4       	brge	.+20     	; 0xa2a <strtol+0x98>
     a16:	e2 e0       	ldi	r30, 0x02	; 2
     a18:	ee 16       	cp	r14, r30
     a1a:	f1 04       	cpc	r15, r1
     a1c:	21 f5       	brne	.+72     	; 0xa66 <strtol+0xd4>
     a1e:	81 2c       	mov	r8, r1
     a20:	91 2c       	mov	r9, r1
     a22:	a1 2c       	mov	r10, r1
     a24:	b0 e4       	ldi	r27, 0x40	; 64
     a26:	bb 2e       	mov	r11, r27
     a28:	3e c0       	rjmp	.+124    	; 0xaa6 <strtol+0x114>
     a2a:	fa e0       	ldi	r31, 0x0A	; 10
     a2c:	ef 16       	cp	r14, r31
     a2e:	f1 04       	cpc	r15, r1
     a30:	39 f0       	breq	.+14     	; 0xa40 <strtol+0xae>
     a32:	20 e1       	ldi	r18, 0x10	; 16
     a34:	e2 16       	cp	r14, r18
     a36:	f1 04       	cpc	r15, r1
     a38:	b1 f4       	brne	.+44     	; 0xa66 <strtol+0xd4>
     a3a:	30 c0       	rjmp	.+96     	; 0xa9c <strtol+0x10a>
     a3c:	10 33       	cpi	r17, 0x30	; 48
     a3e:	19 f1       	breq	.+70     	; 0xa86 <strtol+0xf4>
     a40:	fa e0       	ldi	r31, 0x0A	; 10
     a42:	ef 2e       	mov	r14, r31
     a44:	f1 2c       	mov	r15, r1
     a46:	ac ec       	ldi	r26, 0xCC	; 204
     a48:	8a 2e       	mov	r8, r26
     a4a:	98 2c       	mov	r9, r8
     a4c:	a8 2c       	mov	r10, r8
     a4e:	ac e0       	ldi	r26, 0x0C	; 12
     a50:	ba 2e       	mov	r11, r26
     a52:	29 c0       	rjmp	.+82     	; 0xaa6 <strtol+0x114>
     a54:	78 e0       	ldi	r23, 0x08	; 8
     a56:	e7 2e       	mov	r14, r23
     a58:	f1 2c       	mov	r15, r1
     a5a:	81 2c       	mov	r8, r1
     a5c:	91 2c       	mov	r9, r1
     a5e:	a1 2c       	mov	r10, r1
     a60:	e0 e1       	ldi	r30, 0x10	; 16
     a62:	be 2e       	mov	r11, r30
     a64:	20 c0       	rjmp	.+64     	; 0xaa6 <strtol+0x114>
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e8       	ldi	r25, 0x80	; 128
     a6e:	97 01       	movw	r18, r14
     a70:	0f 2c       	mov	r0, r15
     a72:	00 0c       	add	r0, r0
     a74:	44 0b       	sbc	r20, r20
     a76:	55 0b       	sbc	r21, r21
     a78:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__udivmodsi4>
     a7c:	49 01       	movw	r8, r18
     a7e:	5a 01       	movw	r10, r20
     a80:	12 c0       	rjmp	.+36     	; 0xaa6 <strtol+0x114>
     a82:	10 33       	cpi	r17, 0x30	; 48
     a84:	59 f4       	brne	.+22     	; 0xa9c <strtol+0x10a>
     a86:	88 81       	ld	r24, Y
     a88:	8f 7d       	andi	r24, 0xDF	; 223
     a8a:	88 35       	cpi	r24, 0x58	; 88
     a8c:	09 f0       	breq	.+2      	; 0xa90 <strtol+0xfe>
     a8e:	ba cf       	rjmp	.-140    	; 0xa04 <strtol+0x72>
     a90:	19 81       	ldd	r17, Y+1	; 0x01
     a92:	22 96       	adiw	r28, 0x02	; 2
     a94:	02 60       	ori	r16, 0x02	; 2
     a96:	80 e1       	ldi	r24, 0x10	; 16
     a98:	e8 2e       	mov	r14, r24
     a9a:	f1 2c       	mov	r15, r1
     a9c:	81 2c       	mov	r8, r1
     a9e:	91 2c       	mov	r9, r1
     aa0:	a1 2c       	mov	r10, r1
     aa2:	68 e0       	ldi	r22, 0x08	; 8
     aa4:	b6 2e       	mov	r11, r22
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	cb 01       	movw	r24, r22
     aae:	27 01       	movw	r4, r14
     ab0:	0f 2c       	mov	r0, r15
     ab2:	00 0c       	add	r0, r0
     ab4:	66 08       	sbc	r6, r6
     ab6:	77 08       	sbc	r7, r7
     ab8:	fe 01       	movw	r30, r28
     aba:	50 ed       	ldi	r21, 0xD0	; 208
     abc:	35 2e       	mov	r3, r21
     abe:	31 0e       	add	r3, r17
     ac0:	29 e0       	ldi	r18, 0x09	; 9
     ac2:	23 15       	cp	r18, r3
     ac4:	70 f4       	brcc	.+28     	; 0xae2 <strtol+0x150>
     ac6:	2f eb       	ldi	r18, 0xBF	; 191
     ac8:	21 0f       	add	r18, r17
     aca:	2a 31       	cpi	r18, 0x1A	; 26
     acc:	18 f4       	brcc	.+6      	; 0xad4 <strtol+0x142>
     ace:	39 ec       	ldi	r19, 0xC9	; 201
     ad0:	33 2e       	mov	r3, r19
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <strtol+0x14e>
     ad4:	2f e9       	ldi	r18, 0x9F	; 159
     ad6:	21 0f       	add	r18, r17
     ad8:	2a 31       	cpi	r18, 0x1A	; 26
     ada:	18 f5       	brcc	.+70     	; 0xb22 <strtol+0x190>
     adc:	29 ea       	ldi	r18, 0xA9	; 169
     ade:	32 2e       	mov	r3, r18
     ae0:	31 0e       	add	r3, r17
     ae2:	23 2d       	mov	r18, r3
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	2e 15       	cp	r18, r14
     ae8:	3f 05       	cpc	r19, r15
     aea:	dc f4       	brge	.+54     	; 0xb22 <strtol+0x190>
     aec:	47 fd       	sbrc	r20, 7
     aee:	16 c0       	rjmp	.+44     	; 0xb1c <strtol+0x18a>
     af0:	86 16       	cp	r8, r22
     af2:	97 06       	cpc	r9, r23
     af4:	a8 06       	cpc	r10, r24
     af6:	b9 06       	cpc	r11, r25
     af8:	70 f0       	brcs	.+28     	; 0xb16 <strtol+0x184>
     afa:	a3 01       	movw	r20, r6
     afc:	92 01       	movw	r18, r4
     afe:	0e 94 ef 08 	call	0x11de	; 0x11de <__mulsi3>
     b02:	63 0d       	add	r22, r3
     b04:	71 1d       	adc	r23, r1
     b06:	81 1d       	adc	r24, r1
     b08:	91 1d       	adc	r25, r1
     b0a:	61 30       	cpi	r22, 0x01	; 1
     b0c:	71 05       	cpc	r23, r1
     b0e:	81 05       	cpc	r24, r1
     b10:	20 e8       	ldi	r18, 0x80	; 128
     b12:	92 07       	cpc	r25, r18
     b14:	10 f0       	brcs	.+4      	; 0xb1a <strtol+0x188>
     b16:	4f ef       	ldi	r20, 0xFF	; 255
     b18:	01 c0       	rjmp	.+2      	; 0xb1c <strtol+0x18a>
     b1a:	41 e0       	ldi	r20, 0x01	; 1
     b1c:	21 96       	adiw	r28, 0x01	; 1
     b1e:	10 81       	ld	r17, Z
     b20:	cb cf       	rjmp	.-106    	; 0xab8 <strtol+0x126>
     b22:	20 2f       	mov	r18, r16
     b24:	21 70       	andi	r18, 0x01	; 1
     b26:	c1 14       	cp	r12, r1
     b28:	d1 04       	cpc	r13, r1
     b2a:	71 f0       	breq	.+28     	; 0xb48 <strtol+0x1b6>
     b2c:	44 23       	and	r20, r20
     b2e:	29 f0       	breq	.+10     	; 0xb3a <strtol+0x1a8>
     b30:	21 97       	sbiw	r28, 0x01	; 1
     b32:	f6 01       	movw	r30, r12
     b34:	d1 83       	std	Z+1, r29	; 0x01
     b36:	c0 83       	st	Z, r28
     b38:	07 c0       	rjmp	.+14     	; 0xb48 <strtol+0x1b6>
     b3a:	01 ff       	sbrs	r16, 1
     b3c:	19 c0       	rjmp	.+50     	; 0xb70 <strtol+0x1de>
     b3e:	22 97       	sbiw	r28, 0x02	; 2
     b40:	f6 01       	movw	r30, r12
     b42:	d1 83       	std	Z+1, r29	; 0x01
     b44:	c0 83       	st	Z, r28
     b46:	14 c0       	rjmp	.+40     	; 0xb70 <strtol+0x1de>
     b48:	47 ff       	sbrs	r20, 7
     b4a:	12 c0       	rjmp	.+36     	; 0xb70 <strtol+0x1de>
     b4c:	22 23       	and	r18, r18
     b4e:	29 f0       	breq	.+10     	; 0xb5a <strtol+0x1c8>
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e8       	ldi	r25, 0x80	; 128
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <strtol+0x1d0>
     b5a:	6f ef       	ldi	r22, 0xFF	; 255
     b5c:	7f ef       	ldi	r23, 0xFF	; 255
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	9f e7       	ldi	r25, 0x7F	; 127
     b62:	22 e2       	ldi	r18, 0x22	; 34
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	30 93 e9 02 	sts	0x02E9, r19	; 0x8002e9 <errno+0x1>
     b6a:	20 93 e8 02 	sts	0x02E8, r18	; 0x8002e8 <errno>
     b6e:	09 c0       	rjmp	.+18     	; 0xb82 <strtol+0x1f0>
     b70:	22 23       	and	r18, r18
     b72:	81 f0       	breq	.+32     	; 0xb94 <strtol+0x202>
     b74:	90 95       	com	r25
     b76:	80 95       	com	r24
     b78:	70 95       	com	r23
     b7a:	61 95       	neg	r22
     b7c:	7f 4f       	sbci	r23, 0xFF	; 255
     b7e:	8f 4f       	sbci	r24, 0xFF	; 255
     b80:	9f 4f       	sbci	r25, 0xFF	; 255
     b82:	46 2f       	mov	r20, r22
     b84:	37 2f       	mov	r19, r23
     b86:	28 2f       	mov	r18, r24
     b88:	12 c0       	rjmp	.+36     	; 0xbae <strtol+0x21c>
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	20 e0       	ldi	r18, 0x00	; 0
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	0d c0       	rjmp	.+26     	; 0xbae <strtol+0x21c>
     b94:	97 ff       	sbrs	r25, 7
     b96:	f5 cf       	rjmp	.-22     	; 0xb82 <strtol+0x1f0>
     b98:	82 e2       	ldi	r24, 0x22	; 34
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <errno+0x1>
     ba0:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <errno>
     ba4:	6f ef       	ldi	r22, 0xFF	; 255
     ba6:	7f ef       	ldi	r23, 0xFF	; 255
     ba8:	8f ef       	ldi	r24, 0xFF	; 255
     baa:	9f e7       	ldi	r25, 0x7F	; 127
     bac:	ea cf       	rjmp	.-44     	; 0xb82 <strtol+0x1f0>
     bae:	64 2f       	mov	r22, r20
     bb0:	73 2f       	mov	r23, r19
     bb2:	82 2f       	mov	r24, r18
     bb4:	cd b7       	in	r28, 0x3d	; 61
     bb6:	de b7       	in	r29, 0x3e	; 62
     bb8:	e1 e1       	ldi	r30, 0x11	; 17
     bba:	0c 94 49 09 	jmp	0x1292	; 0x1292 <__epilogue_restores__+0x2>

00000bbe <isspace>:
     bbe:	91 11       	cpse	r25, r1
     bc0:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__ctype_isfalse>
     bc4:	80 32       	cpi	r24, 0x20	; 32
     bc6:	19 f0       	breq	.+6      	; 0xbce <isspace+0x10>
     bc8:	89 50       	subi	r24, 0x09	; 9
     bca:	85 50       	subi	r24, 0x05	; 5
     bcc:	c8 f7       	brcc	.-14     	; 0xbc0 <isspace+0x2>
     bce:	08 95       	ret

00000bd0 <strchr>:
     bd0:	fc 01       	movw	r30, r24
     bd2:	81 91       	ld	r24, Z+
     bd4:	86 17       	cp	r24, r22
     bd6:	21 f0       	breq	.+8      	; 0xbe0 <strchr+0x10>
     bd8:	88 23       	and	r24, r24
     bda:	d9 f7       	brne	.-10     	; 0xbd2 <strchr+0x2>
     bdc:	99 27       	eor	r25, r25
     bde:	08 95       	ret
     be0:	31 97       	sbiw	r30, 0x01	; 1
     be2:	cf 01       	movw	r24, r30
     be4:	08 95       	ret

00000be6 <strcmp>:
     be6:	fb 01       	movw	r30, r22
     be8:	dc 01       	movw	r26, r24
     bea:	8d 91       	ld	r24, X+
     bec:	01 90       	ld	r0, Z+
     bee:	80 19       	sub	r24, r0
     bf0:	01 10       	cpse	r0, r1
     bf2:	d9 f3       	breq	.-10     	; 0xbea <strcmp+0x4>
     bf4:	99 0b       	sbc	r25, r25
     bf6:	08 95       	ret

00000bf8 <strncpy>:
     bf8:	fb 01       	movw	r30, r22
     bfa:	dc 01       	movw	r26, r24
     bfc:	41 50       	subi	r20, 0x01	; 1
     bfe:	50 40       	sbci	r21, 0x00	; 0
     c00:	48 f0       	brcs	.+18     	; 0xc14 <strncpy+0x1c>
     c02:	01 90       	ld	r0, Z+
     c04:	0d 92       	st	X+, r0
     c06:	00 20       	and	r0, r0
     c08:	c9 f7       	brne	.-14     	; 0xbfc <strncpy+0x4>
     c0a:	01 c0       	rjmp	.+2      	; 0xc0e <strncpy+0x16>
     c0c:	1d 92       	st	X+, r1
     c0e:	41 50       	subi	r20, 0x01	; 1
     c10:	50 40       	sbci	r21, 0x00	; 0
     c12:	e0 f7       	brcc	.-8      	; 0xc0c <strncpy+0x14>
     c14:	08 95       	ret

00000c16 <printf>:
     c16:	a0 e0       	ldi	r26, 0x00	; 0
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	e1 e1       	ldi	r30, 0x11	; 17
     c1c:	f6 e0       	ldi	r31, 0x06	; 6
     c1e:	0c 94 3c 09 	jmp	0x1278	; 0x1278 <__prologue_saves__+0x20>
     c22:	ae 01       	movw	r20, r28
     c24:	4b 5f       	subi	r20, 0xFB	; 251
     c26:	5f 4f       	sbci	r21, 0xFF	; 255
     c28:	fa 01       	movw	r30, r20
     c2a:	61 91       	ld	r22, Z+
     c2c:	71 91       	ld	r23, Z+
     c2e:	af 01       	movw	r20, r30
     c30:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <__iob+0x2>
     c34:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <__iob+0x3>
     c38:	0e 94 28 06 	call	0xc50	; 0xc50 <vfprintf>
     c3c:	e2 e0       	ldi	r30, 0x02	; 2
     c3e:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__epilogue_restores__+0x20>

00000c42 <putchar>:
     c42:	60 91 e4 02 	lds	r22, 0x02E4	; 0x8002e4 <__iob+0x2>
     c46:	70 91 e5 02 	lds	r23, 0x02E5	; 0x8002e5 <__iob+0x3>
     c4a:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     c4e:	08 95       	ret

00000c50 <vfprintf>:
     c50:	ab e0       	ldi	r26, 0x0B	; 11
     c52:	b0 e0       	ldi	r27, 0x00	; 0
     c54:	ee e2       	ldi	r30, 0x2E	; 46
     c56:	f6 e0       	ldi	r31, 0x06	; 6
     c58:	0c 94 2c 09 	jmp	0x1258	; 0x1258 <__prologue_saves__>
     c5c:	6c 01       	movw	r12, r24
     c5e:	7b 01       	movw	r14, r22
     c60:	8a 01       	movw	r16, r20
     c62:	fc 01       	movw	r30, r24
     c64:	17 82       	std	Z+7, r1	; 0x07
     c66:	16 82       	std	Z+6, r1	; 0x06
     c68:	83 81       	ldd	r24, Z+3	; 0x03
     c6a:	81 ff       	sbrs	r24, 1
     c6c:	cc c1       	rjmp	.+920    	; 0x1006 <vfprintf+0x3b6>
     c6e:	ce 01       	movw	r24, r28
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	3c 01       	movw	r6, r24
     c74:	f6 01       	movw	r30, r12
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	f7 01       	movw	r30, r14
     c7a:	93 fd       	sbrc	r25, 3
     c7c:	85 91       	lpm	r24, Z+
     c7e:	93 ff       	sbrs	r25, 3
     c80:	81 91       	ld	r24, Z+
     c82:	7f 01       	movw	r14, r30
     c84:	88 23       	and	r24, r24
     c86:	09 f4       	brne	.+2      	; 0xc8a <vfprintf+0x3a>
     c88:	ba c1       	rjmp	.+884    	; 0xffe <vfprintf+0x3ae>
     c8a:	85 32       	cpi	r24, 0x25	; 37
     c8c:	39 f4       	brne	.+14     	; 0xc9c <vfprintf+0x4c>
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	7f 01       	movw	r14, r30
     c98:	85 32       	cpi	r24, 0x25	; 37
     c9a:	29 f4       	brne	.+10     	; 0xca6 <vfprintf+0x56>
     c9c:	b6 01       	movw	r22, r12
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     ca4:	e7 cf       	rjmp	.-50     	; 0xc74 <vfprintf+0x24>
     ca6:	91 2c       	mov	r9, r1
     ca8:	21 2c       	mov	r2, r1
     caa:	31 2c       	mov	r3, r1
     cac:	ff e1       	ldi	r31, 0x1F	; 31
     cae:	f3 15       	cp	r31, r3
     cb0:	d8 f0       	brcs	.+54     	; 0xce8 <vfprintf+0x98>
     cb2:	8b 32       	cpi	r24, 0x2B	; 43
     cb4:	79 f0       	breq	.+30     	; 0xcd4 <vfprintf+0x84>
     cb6:	38 f4       	brcc	.+14     	; 0xcc6 <vfprintf+0x76>
     cb8:	80 32       	cpi	r24, 0x20	; 32
     cba:	79 f0       	breq	.+30     	; 0xcda <vfprintf+0x8a>
     cbc:	83 32       	cpi	r24, 0x23	; 35
     cbe:	a1 f4       	brne	.+40     	; 0xce8 <vfprintf+0x98>
     cc0:	23 2d       	mov	r18, r3
     cc2:	20 61       	ori	r18, 0x10	; 16
     cc4:	1d c0       	rjmp	.+58     	; 0xd00 <vfprintf+0xb0>
     cc6:	8d 32       	cpi	r24, 0x2D	; 45
     cc8:	61 f0       	breq	.+24     	; 0xce2 <vfprintf+0x92>
     cca:	80 33       	cpi	r24, 0x30	; 48
     ccc:	69 f4       	brne	.+26     	; 0xce8 <vfprintf+0x98>
     cce:	23 2d       	mov	r18, r3
     cd0:	21 60       	ori	r18, 0x01	; 1
     cd2:	16 c0       	rjmp	.+44     	; 0xd00 <vfprintf+0xb0>
     cd4:	83 2d       	mov	r24, r3
     cd6:	82 60       	ori	r24, 0x02	; 2
     cd8:	38 2e       	mov	r3, r24
     cda:	e3 2d       	mov	r30, r3
     cdc:	e4 60       	ori	r30, 0x04	; 4
     cde:	3e 2e       	mov	r3, r30
     ce0:	2a c0       	rjmp	.+84     	; 0xd36 <vfprintf+0xe6>
     ce2:	f3 2d       	mov	r31, r3
     ce4:	f8 60       	ori	r31, 0x08	; 8
     ce6:	1d c0       	rjmp	.+58     	; 0xd22 <vfprintf+0xd2>
     ce8:	37 fc       	sbrc	r3, 7
     cea:	2d c0       	rjmp	.+90     	; 0xd46 <vfprintf+0xf6>
     cec:	20 ed       	ldi	r18, 0xD0	; 208
     cee:	28 0f       	add	r18, r24
     cf0:	2a 30       	cpi	r18, 0x0A	; 10
     cf2:	40 f0       	brcs	.+16     	; 0xd04 <vfprintf+0xb4>
     cf4:	8e 32       	cpi	r24, 0x2E	; 46
     cf6:	b9 f4       	brne	.+46     	; 0xd26 <vfprintf+0xd6>
     cf8:	36 fc       	sbrc	r3, 6
     cfa:	81 c1       	rjmp	.+770    	; 0xffe <vfprintf+0x3ae>
     cfc:	23 2d       	mov	r18, r3
     cfe:	20 64       	ori	r18, 0x40	; 64
     d00:	32 2e       	mov	r3, r18
     d02:	19 c0       	rjmp	.+50     	; 0xd36 <vfprintf+0xe6>
     d04:	36 fe       	sbrs	r3, 6
     d06:	06 c0       	rjmp	.+12     	; 0xd14 <vfprintf+0xc4>
     d08:	8a e0       	ldi	r24, 0x0A	; 10
     d0a:	98 9e       	mul	r9, r24
     d0c:	20 0d       	add	r18, r0
     d0e:	11 24       	eor	r1, r1
     d10:	92 2e       	mov	r9, r18
     d12:	11 c0       	rjmp	.+34     	; 0xd36 <vfprintf+0xe6>
     d14:	ea e0       	ldi	r30, 0x0A	; 10
     d16:	2e 9e       	mul	r2, r30
     d18:	20 0d       	add	r18, r0
     d1a:	11 24       	eor	r1, r1
     d1c:	22 2e       	mov	r2, r18
     d1e:	f3 2d       	mov	r31, r3
     d20:	f0 62       	ori	r31, 0x20	; 32
     d22:	3f 2e       	mov	r3, r31
     d24:	08 c0       	rjmp	.+16     	; 0xd36 <vfprintf+0xe6>
     d26:	8c 36       	cpi	r24, 0x6C	; 108
     d28:	21 f4       	brne	.+8      	; 0xd32 <vfprintf+0xe2>
     d2a:	83 2d       	mov	r24, r3
     d2c:	80 68       	ori	r24, 0x80	; 128
     d2e:	38 2e       	mov	r3, r24
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <vfprintf+0xe6>
     d32:	88 36       	cpi	r24, 0x68	; 104
     d34:	41 f4       	brne	.+16     	; 0xd46 <vfprintf+0xf6>
     d36:	f7 01       	movw	r30, r14
     d38:	93 fd       	sbrc	r25, 3
     d3a:	85 91       	lpm	r24, Z+
     d3c:	93 ff       	sbrs	r25, 3
     d3e:	81 91       	ld	r24, Z+
     d40:	7f 01       	movw	r14, r30
     d42:	81 11       	cpse	r24, r1
     d44:	b3 cf       	rjmp	.-154    	; 0xcac <vfprintf+0x5c>
     d46:	98 2f       	mov	r25, r24
     d48:	9f 7d       	andi	r25, 0xDF	; 223
     d4a:	95 54       	subi	r25, 0x45	; 69
     d4c:	93 30       	cpi	r25, 0x03	; 3
     d4e:	28 f4       	brcc	.+10     	; 0xd5a <vfprintf+0x10a>
     d50:	0c 5f       	subi	r16, 0xFC	; 252
     d52:	1f 4f       	sbci	r17, 0xFF	; 255
     d54:	9f e3       	ldi	r25, 0x3F	; 63
     d56:	99 83       	std	Y+1, r25	; 0x01
     d58:	0d c0       	rjmp	.+26     	; 0xd74 <vfprintf+0x124>
     d5a:	83 36       	cpi	r24, 0x63	; 99
     d5c:	31 f0       	breq	.+12     	; 0xd6a <vfprintf+0x11a>
     d5e:	83 37       	cpi	r24, 0x73	; 115
     d60:	71 f0       	breq	.+28     	; 0xd7e <vfprintf+0x12e>
     d62:	83 35       	cpi	r24, 0x53	; 83
     d64:	09 f0       	breq	.+2      	; 0xd68 <vfprintf+0x118>
     d66:	59 c0       	rjmp	.+178    	; 0xe1a <vfprintf+0x1ca>
     d68:	21 c0       	rjmp	.+66     	; 0xdac <vfprintf+0x15c>
     d6a:	f8 01       	movw	r30, r16
     d6c:	80 81       	ld	r24, Z
     d6e:	89 83       	std	Y+1, r24	; 0x01
     d70:	0e 5f       	subi	r16, 0xFE	; 254
     d72:	1f 4f       	sbci	r17, 0xFF	; 255
     d74:	88 24       	eor	r8, r8
     d76:	83 94       	inc	r8
     d78:	91 2c       	mov	r9, r1
     d7a:	53 01       	movw	r10, r6
     d7c:	13 c0       	rjmp	.+38     	; 0xda4 <vfprintf+0x154>
     d7e:	28 01       	movw	r4, r16
     d80:	f2 e0       	ldi	r31, 0x02	; 2
     d82:	4f 0e       	add	r4, r31
     d84:	51 1c       	adc	r5, r1
     d86:	f8 01       	movw	r30, r16
     d88:	a0 80       	ld	r10, Z
     d8a:	b1 80       	ldd	r11, Z+1	; 0x01
     d8c:	36 fe       	sbrs	r3, 6
     d8e:	03 c0       	rjmp	.+6      	; 0xd96 <vfprintf+0x146>
     d90:	69 2d       	mov	r22, r9
     d92:	70 e0       	ldi	r23, 0x00	; 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <vfprintf+0x14a>
     d96:	6f ef       	ldi	r22, 0xFF	; 255
     d98:	7f ef       	ldi	r23, 0xFF	; 255
     d9a:	c5 01       	movw	r24, r10
     d9c:	0e 94 17 08 	call	0x102e	; 0x102e <strnlen>
     da0:	4c 01       	movw	r8, r24
     da2:	82 01       	movw	r16, r4
     da4:	f3 2d       	mov	r31, r3
     da6:	ff 77       	andi	r31, 0x7F	; 127
     da8:	3f 2e       	mov	r3, r31
     daa:	16 c0       	rjmp	.+44     	; 0xdd8 <vfprintf+0x188>
     dac:	28 01       	movw	r4, r16
     dae:	22 e0       	ldi	r18, 0x02	; 2
     db0:	42 0e       	add	r4, r18
     db2:	51 1c       	adc	r5, r1
     db4:	f8 01       	movw	r30, r16
     db6:	a0 80       	ld	r10, Z
     db8:	b1 80       	ldd	r11, Z+1	; 0x01
     dba:	36 fe       	sbrs	r3, 6
     dbc:	03 c0       	rjmp	.+6      	; 0xdc4 <vfprintf+0x174>
     dbe:	69 2d       	mov	r22, r9
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <vfprintf+0x178>
     dc4:	6f ef       	ldi	r22, 0xFF	; 255
     dc6:	7f ef       	ldi	r23, 0xFF	; 255
     dc8:	c5 01       	movw	r24, r10
     dca:	0e 94 0c 08 	call	0x1018	; 0x1018 <strnlen_P>
     dce:	4c 01       	movw	r8, r24
     dd0:	f3 2d       	mov	r31, r3
     dd2:	f0 68       	ori	r31, 0x80	; 128
     dd4:	3f 2e       	mov	r3, r31
     dd6:	82 01       	movw	r16, r4
     dd8:	33 fc       	sbrc	r3, 3
     dda:	1b c0       	rjmp	.+54     	; 0xe12 <vfprintf+0x1c2>
     ddc:	82 2d       	mov	r24, r2
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	88 16       	cp	r8, r24
     de2:	99 06       	cpc	r9, r25
     de4:	b0 f4       	brcc	.+44     	; 0xe12 <vfprintf+0x1c2>
     de6:	b6 01       	movw	r22, r12
     de8:	80 e2       	ldi	r24, 0x20	; 32
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     df0:	2a 94       	dec	r2
     df2:	f4 cf       	rjmp	.-24     	; 0xddc <vfprintf+0x18c>
     df4:	f5 01       	movw	r30, r10
     df6:	37 fc       	sbrc	r3, 7
     df8:	85 91       	lpm	r24, Z+
     dfa:	37 fe       	sbrs	r3, 7
     dfc:	81 91       	ld	r24, Z+
     dfe:	5f 01       	movw	r10, r30
     e00:	b6 01       	movw	r22, r12
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     e08:	21 10       	cpse	r2, r1
     e0a:	2a 94       	dec	r2
     e0c:	21 e0       	ldi	r18, 0x01	; 1
     e0e:	82 1a       	sub	r8, r18
     e10:	91 08       	sbc	r9, r1
     e12:	81 14       	cp	r8, r1
     e14:	91 04       	cpc	r9, r1
     e16:	71 f7       	brne	.-36     	; 0xdf4 <vfprintf+0x1a4>
     e18:	e8 c0       	rjmp	.+464    	; 0xfea <vfprintf+0x39a>
     e1a:	84 36       	cpi	r24, 0x64	; 100
     e1c:	11 f0       	breq	.+4      	; 0xe22 <vfprintf+0x1d2>
     e1e:	89 36       	cpi	r24, 0x69	; 105
     e20:	41 f5       	brne	.+80     	; 0xe72 <vfprintf+0x222>
     e22:	f8 01       	movw	r30, r16
     e24:	37 fe       	sbrs	r3, 7
     e26:	07 c0       	rjmp	.+14     	; 0xe36 <vfprintf+0x1e6>
     e28:	60 81       	ld	r22, Z
     e2a:	71 81       	ldd	r23, Z+1	; 0x01
     e2c:	82 81       	ldd	r24, Z+2	; 0x02
     e2e:	93 81       	ldd	r25, Z+3	; 0x03
     e30:	0c 5f       	subi	r16, 0xFC	; 252
     e32:	1f 4f       	sbci	r17, 0xFF	; 255
     e34:	08 c0       	rjmp	.+16     	; 0xe46 <vfprintf+0x1f6>
     e36:	60 81       	ld	r22, Z
     e38:	71 81       	ldd	r23, Z+1	; 0x01
     e3a:	07 2e       	mov	r0, r23
     e3c:	00 0c       	add	r0, r0
     e3e:	88 0b       	sbc	r24, r24
     e40:	99 0b       	sbc	r25, r25
     e42:	0e 5f       	subi	r16, 0xFE	; 254
     e44:	1f 4f       	sbci	r17, 0xFF	; 255
     e46:	f3 2d       	mov	r31, r3
     e48:	ff 76       	andi	r31, 0x6F	; 111
     e4a:	3f 2e       	mov	r3, r31
     e4c:	97 ff       	sbrs	r25, 7
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <vfprintf+0x212>
     e50:	90 95       	com	r25
     e52:	80 95       	com	r24
     e54:	70 95       	com	r23
     e56:	61 95       	neg	r22
     e58:	7f 4f       	sbci	r23, 0xFF	; 255
     e5a:	8f 4f       	sbci	r24, 0xFF	; 255
     e5c:	9f 4f       	sbci	r25, 0xFF	; 255
     e5e:	f0 68       	ori	r31, 0x80	; 128
     e60:	3f 2e       	mov	r3, r31
     e62:	2a e0       	ldi	r18, 0x0A	; 10
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	a3 01       	movw	r20, r6
     e68:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__ultoa_invert>
     e6c:	88 2e       	mov	r8, r24
     e6e:	86 18       	sub	r8, r6
     e70:	45 c0       	rjmp	.+138    	; 0xefc <vfprintf+0x2ac>
     e72:	85 37       	cpi	r24, 0x75	; 117
     e74:	31 f4       	brne	.+12     	; 0xe82 <vfprintf+0x232>
     e76:	23 2d       	mov	r18, r3
     e78:	2f 7e       	andi	r18, 0xEF	; 239
     e7a:	b2 2e       	mov	r11, r18
     e7c:	2a e0       	ldi	r18, 0x0A	; 10
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	25 c0       	rjmp	.+74     	; 0xecc <vfprintf+0x27c>
     e82:	93 2d       	mov	r25, r3
     e84:	99 7f       	andi	r25, 0xF9	; 249
     e86:	b9 2e       	mov	r11, r25
     e88:	8f 36       	cpi	r24, 0x6F	; 111
     e8a:	c1 f0       	breq	.+48     	; 0xebc <vfprintf+0x26c>
     e8c:	18 f4       	brcc	.+6      	; 0xe94 <vfprintf+0x244>
     e8e:	88 35       	cpi	r24, 0x58	; 88
     e90:	79 f0       	breq	.+30     	; 0xeb0 <vfprintf+0x260>
     e92:	b5 c0       	rjmp	.+362    	; 0xffe <vfprintf+0x3ae>
     e94:	80 37       	cpi	r24, 0x70	; 112
     e96:	19 f0       	breq	.+6      	; 0xe9e <vfprintf+0x24e>
     e98:	88 37       	cpi	r24, 0x78	; 120
     e9a:	21 f0       	breq	.+8      	; 0xea4 <vfprintf+0x254>
     e9c:	b0 c0       	rjmp	.+352    	; 0xffe <vfprintf+0x3ae>
     e9e:	e9 2f       	mov	r30, r25
     ea0:	e0 61       	ori	r30, 0x10	; 16
     ea2:	be 2e       	mov	r11, r30
     ea4:	b4 fe       	sbrs	r11, 4
     ea6:	0d c0       	rjmp	.+26     	; 0xec2 <vfprintf+0x272>
     ea8:	fb 2d       	mov	r31, r11
     eaa:	f4 60       	ori	r31, 0x04	; 4
     eac:	bf 2e       	mov	r11, r31
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <vfprintf+0x272>
     eb0:	34 fe       	sbrs	r3, 4
     eb2:	0a c0       	rjmp	.+20     	; 0xec8 <vfprintf+0x278>
     eb4:	29 2f       	mov	r18, r25
     eb6:	26 60       	ori	r18, 0x06	; 6
     eb8:	b2 2e       	mov	r11, r18
     eba:	06 c0       	rjmp	.+12     	; 0xec8 <vfprintf+0x278>
     ebc:	28 e0       	ldi	r18, 0x08	; 8
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	05 c0       	rjmp	.+10     	; 0xecc <vfprintf+0x27c>
     ec2:	20 e1       	ldi	r18, 0x10	; 16
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <vfprintf+0x27c>
     ec8:	20 e1       	ldi	r18, 0x10	; 16
     eca:	32 e0       	ldi	r19, 0x02	; 2
     ecc:	f8 01       	movw	r30, r16
     ece:	b7 fe       	sbrs	r11, 7
     ed0:	07 c0       	rjmp	.+14     	; 0xee0 <vfprintf+0x290>
     ed2:	60 81       	ld	r22, Z
     ed4:	71 81       	ldd	r23, Z+1	; 0x01
     ed6:	82 81       	ldd	r24, Z+2	; 0x02
     ed8:	93 81       	ldd	r25, Z+3	; 0x03
     eda:	0c 5f       	subi	r16, 0xFC	; 252
     edc:	1f 4f       	sbci	r17, 0xFF	; 255
     ede:	06 c0       	rjmp	.+12     	; 0xeec <vfprintf+0x29c>
     ee0:	60 81       	ld	r22, Z
     ee2:	71 81       	ldd	r23, Z+1	; 0x01
     ee4:	80 e0       	ldi	r24, 0x00	; 0
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 5f       	subi	r16, 0xFE	; 254
     eea:	1f 4f       	sbci	r17, 0xFF	; 255
     eec:	a3 01       	movw	r20, r6
     eee:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__ultoa_invert>
     ef2:	88 2e       	mov	r8, r24
     ef4:	86 18       	sub	r8, r6
     ef6:	fb 2d       	mov	r31, r11
     ef8:	ff 77       	andi	r31, 0x7F	; 127
     efa:	3f 2e       	mov	r3, r31
     efc:	36 fe       	sbrs	r3, 6
     efe:	0d c0       	rjmp	.+26     	; 0xf1a <vfprintf+0x2ca>
     f00:	23 2d       	mov	r18, r3
     f02:	2e 7f       	andi	r18, 0xFE	; 254
     f04:	a2 2e       	mov	r10, r18
     f06:	89 14       	cp	r8, r9
     f08:	58 f4       	brcc	.+22     	; 0xf20 <vfprintf+0x2d0>
     f0a:	34 fe       	sbrs	r3, 4
     f0c:	0b c0       	rjmp	.+22     	; 0xf24 <vfprintf+0x2d4>
     f0e:	32 fc       	sbrc	r3, 2
     f10:	09 c0       	rjmp	.+18     	; 0xf24 <vfprintf+0x2d4>
     f12:	83 2d       	mov	r24, r3
     f14:	8e 7e       	andi	r24, 0xEE	; 238
     f16:	a8 2e       	mov	r10, r24
     f18:	05 c0       	rjmp	.+10     	; 0xf24 <vfprintf+0x2d4>
     f1a:	b8 2c       	mov	r11, r8
     f1c:	a3 2c       	mov	r10, r3
     f1e:	03 c0       	rjmp	.+6      	; 0xf26 <vfprintf+0x2d6>
     f20:	b8 2c       	mov	r11, r8
     f22:	01 c0       	rjmp	.+2      	; 0xf26 <vfprintf+0x2d6>
     f24:	b9 2c       	mov	r11, r9
     f26:	a4 fe       	sbrs	r10, 4
     f28:	0f c0       	rjmp	.+30     	; 0xf48 <vfprintf+0x2f8>
     f2a:	fe 01       	movw	r30, r28
     f2c:	e8 0d       	add	r30, r8
     f2e:	f1 1d       	adc	r31, r1
     f30:	80 81       	ld	r24, Z
     f32:	80 33       	cpi	r24, 0x30	; 48
     f34:	21 f4       	brne	.+8      	; 0xf3e <vfprintf+0x2ee>
     f36:	9a 2d       	mov	r25, r10
     f38:	99 7e       	andi	r25, 0xE9	; 233
     f3a:	a9 2e       	mov	r10, r25
     f3c:	09 c0       	rjmp	.+18     	; 0xf50 <vfprintf+0x300>
     f3e:	a2 fe       	sbrs	r10, 2
     f40:	06 c0       	rjmp	.+12     	; 0xf4e <vfprintf+0x2fe>
     f42:	b3 94       	inc	r11
     f44:	b3 94       	inc	r11
     f46:	04 c0       	rjmp	.+8      	; 0xf50 <vfprintf+0x300>
     f48:	8a 2d       	mov	r24, r10
     f4a:	86 78       	andi	r24, 0x86	; 134
     f4c:	09 f0       	breq	.+2      	; 0xf50 <vfprintf+0x300>
     f4e:	b3 94       	inc	r11
     f50:	a3 fc       	sbrc	r10, 3
     f52:	11 c0       	rjmp	.+34     	; 0xf76 <vfprintf+0x326>
     f54:	a0 fe       	sbrs	r10, 0
     f56:	06 c0       	rjmp	.+12     	; 0xf64 <vfprintf+0x314>
     f58:	b2 14       	cp	r11, r2
     f5a:	88 f4       	brcc	.+34     	; 0xf7e <vfprintf+0x32e>
     f5c:	28 0c       	add	r2, r8
     f5e:	92 2c       	mov	r9, r2
     f60:	9b 18       	sub	r9, r11
     f62:	0e c0       	rjmp	.+28     	; 0xf80 <vfprintf+0x330>
     f64:	b2 14       	cp	r11, r2
     f66:	60 f4       	brcc	.+24     	; 0xf80 <vfprintf+0x330>
     f68:	b6 01       	movw	r22, r12
     f6a:	80 e2       	ldi	r24, 0x20	; 32
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     f72:	b3 94       	inc	r11
     f74:	f7 cf       	rjmp	.-18     	; 0xf64 <vfprintf+0x314>
     f76:	b2 14       	cp	r11, r2
     f78:	18 f4       	brcc	.+6      	; 0xf80 <vfprintf+0x330>
     f7a:	2b 18       	sub	r2, r11
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <vfprintf+0x332>
     f7e:	98 2c       	mov	r9, r8
     f80:	21 2c       	mov	r2, r1
     f82:	a4 fe       	sbrs	r10, 4
     f84:	10 c0       	rjmp	.+32     	; 0xfa6 <vfprintf+0x356>
     f86:	b6 01       	movw	r22, r12
     f88:	80 e3       	ldi	r24, 0x30	; 48
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     f90:	a2 fe       	sbrs	r10, 2
     f92:	17 c0       	rjmp	.+46     	; 0xfc2 <vfprintf+0x372>
     f94:	a1 fc       	sbrc	r10, 1
     f96:	03 c0       	rjmp	.+6      	; 0xf9e <vfprintf+0x34e>
     f98:	88 e7       	ldi	r24, 0x78	; 120
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <vfprintf+0x352>
     f9e:	88 e5       	ldi	r24, 0x58	; 88
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	b6 01       	movw	r22, r12
     fa4:	0c c0       	rjmp	.+24     	; 0xfbe <vfprintf+0x36e>
     fa6:	8a 2d       	mov	r24, r10
     fa8:	86 78       	andi	r24, 0x86	; 134
     faa:	59 f0       	breq	.+22     	; 0xfc2 <vfprintf+0x372>
     fac:	a1 fe       	sbrs	r10, 1
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <vfprintf+0x364>
     fb0:	8b e2       	ldi	r24, 0x2B	; 43
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <vfprintf+0x366>
     fb4:	80 e2       	ldi	r24, 0x20	; 32
     fb6:	a7 fc       	sbrc	r10, 7
     fb8:	8d e2       	ldi	r24, 0x2D	; 45
     fba:	b6 01       	movw	r22, r12
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     fc2:	89 14       	cp	r8, r9
     fc4:	38 f4       	brcc	.+14     	; 0xfd4 <vfprintf+0x384>
     fc6:	b6 01       	movw	r22, r12
     fc8:	80 e3       	ldi	r24, 0x30	; 48
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     fd0:	9a 94       	dec	r9
     fd2:	f7 cf       	rjmp	.-18     	; 0xfc2 <vfprintf+0x372>
     fd4:	8a 94       	dec	r8
     fd6:	f3 01       	movw	r30, r6
     fd8:	e8 0d       	add	r30, r8
     fda:	f1 1d       	adc	r31, r1
     fdc:	80 81       	ld	r24, Z
     fde:	b6 01       	movw	r22, r12
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     fe6:	81 10       	cpse	r8, r1
     fe8:	f5 cf       	rjmp	.-22     	; 0xfd4 <vfprintf+0x384>
     fea:	22 20       	and	r2, r2
     fec:	09 f4       	brne	.+2      	; 0xff0 <vfprintf+0x3a0>
     fee:	42 ce       	rjmp	.-892    	; 0xc74 <vfprintf+0x24>
     ff0:	b6 01       	movw	r22, r12
     ff2:	80 e2       	ldi	r24, 0x20	; 32
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	0e 94 22 08 	call	0x1044	; 0x1044 <fputc>
     ffa:	2a 94       	dec	r2
     ffc:	f6 cf       	rjmp	.-20     	; 0xfea <vfprintf+0x39a>
     ffe:	f6 01       	movw	r30, r12
    1000:	86 81       	ldd	r24, Z+6	; 0x06
    1002:	97 81       	ldd	r25, Z+7	; 0x07
    1004:	02 c0       	rjmp	.+4      	; 0x100a <vfprintf+0x3ba>
    1006:	8f ef       	ldi	r24, 0xFF	; 255
    1008:	9f ef       	ldi	r25, 0xFF	; 255
    100a:	2b 96       	adiw	r28, 0x0b	; 11
    100c:	e2 e1       	ldi	r30, 0x12	; 18
    100e:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__epilogue_restores__>

00001012 <__ctype_isfalse>:
    1012:	99 27       	eor	r25, r25
    1014:	88 27       	eor	r24, r24

00001016 <__ctype_istrue>:
    1016:	08 95       	ret

00001018 <strnlen_P>:
    1018:	fc 01       	movw	r30, r24
    101a:	05 90       	lpm	r0, Z+
    101c:	61 50       	subi	r22, 0x01	; 1
    101e:	70 40       	sbci	r23, 0x00	; 0
    1020:	01 10       	cpse	r0, r1
    1022:	d8 f7       	brcc	.-10     	; 0x101a <strnlen_P+0x2>
    1024:	80 95       	com	r24
    1026:	90 95       	com	r25
    1028:	8e 0f       	add	r24, r30
    102a:	9f 1f       	adc	r25, r31
    102c:	08 95       	ret

0000102e <strnlen>:
    102e:	fc 01       	movw	r30, r24
    1030:	61 50       	subi	r22, 0x01	; 1
    1032:	70 40       	sbci	r23, 0x00	; 0
    1034:	01 90       	ld	r0, Z+
    1036:	01 10       	cpse	r0, r1
    1038:	d8 f7       	brcc	.-10     	; 0x1030 <strnlen+0x2>
    103a:	80 95       	com	r24
    103c:	90 95       	com	r25
    103e:	8e 0f       	add	r24, r30
    1040:	9f 1f       	adc	r25, r31
    1042:	08 95       	ret

00001044 <fputc>:
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	fb 01       	movw	r30, r22
    104e:	23 81       	ldd	r18, Z+3	; 0x03
    1050:	21 fd       	sbrc	r18, 1
    1052:	03 c0       	rjmp	.+6      	; 0x105a <fputc+0x16>
    1054:	8f ef       	ldi	r24, 0xFF	; 255
    1056:	9f ef       	ldi	r25, 0xFF	; 255
    1058:	2c c0       	rjmp	.+88     	; 0x10b2 <fputc+0x6e>
    105a:	22 ff       	sbrs	r18, 2
    105c:	16 c0       	rjmp	.+44     	; 0x108a <fputc+0x46>
    105e:	46 81       	ldd	r20, Z+6	; 0x06
    1060:	57 81       	ldd	r21, Z+7	; 0x07
    1062:	24 81       	ldd	r18, Z+4	; 0x04
    1064:	35 81       	ldd	r19, Z+5	; 0x05
    1066:	42 17       	cp	r20, r18
    1068:	53 07       	cpc	r21, r19
    106a:	44 f4       	brge	.+16     	; 0x107c <fputc+0x38>
    106c:	a0 81       	ld	r26, Z
    106e:	b1 81       	ldd	r27, Z+1	; 0x01
    1070:	9d 01       	movw	r18, r26
    1072:	2f 5f       	subi	r18, 0xFF	; 255
    1074:	3f 4f       	sbci	r19, 0xFF	; 255
    1076:	31 83       	std	Z+1, r19	; 0x01
    1078:	20 83       	st	Z, r18
    107a:	8c 93       	st	X, r24
    107c:	26 81       	ldd	r18, Z+6	; 0x06
    107e:	37 81       	ldd	r19, Z+7	; 0x07
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	37 83       	std	Z+7, r19	; 0x07
    1086:	26 83       	std	Z+6, r18	; 0x06
    1088:	14 c0       	rjmp	.+40     	; 0x10b2 <fputc+0x6e>
    108a:	8b 01       	movw	r16, r22
    108c:	ec 01       	movw	r28, r24
    108e:	fb 01       	movw	r30, r22
    1090:	00 84       	ldd	r0, Z+8	; 0x08
    1092:	f1 85       	ldd	r31, Z+9	; 0x09
    1094:	e0 2d       	mov	r30, r0
    1096:	09 95       	icall
    1098:	89 2b       	or	r24, r25
    109a:	e1 f6       	brne	.-72     	; 0x1054 <fputc+0x10>
    109c:	d8 01       	movw	r26, r16
    109e:	16 96       	adiw	r26, 0x06	; 6
    10a0:	8d 91       	ld	r24, X+
    10a2:	9c 91       	ld	r25, X
    10a4:	17 97       	sbiw	r26, 0x07	; 7
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	17 96       	adiw	r26, 0x07	; 7
    10aa:	9c 93       	st	X, r25
    10ac:	8e 93       	st	-X, r24
    10ae:	16 97       	sbiw	r26, 0x06	; 6
    10b0:	ce 01       	movw	r24, r28
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	0f 91       	pop	r16
    10ba:	08 95       	ret

000010bc <__ultoa_invert>:
    10bc:	fa 01       	movw	r30, r20
    10be:	aa 27       	eor	r26, r26
    10c0:	28 30       	cpi	r18, 0x08	; 8
    10c2:	51 f1       	breq	.+84     	; 0x1118 <__ultoa_invert+0x5c>
    10c4:	20 31       	cpi	r18, 0x10	; 16
    10c6:	81 f1       	breq	.+96     	; 0x1128 <__ultoa_invert+0x6c>
    10c8:	e8 94       	clt
    10ca:	6f 93       	push	r22
    10cc:	6e 7f       	andi	r22, 0xFE	; 254
    10ce:	6e 5f       	subi	r22, 0xFE	; 254
    10d0:	7f 4f       	sbci	r23, 0xFF	; 255
    10d2:	8f 4f       	sbci	r24, 0xFF	; 255
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	af 4f       	sbci	r26, 0xFF	; 255
    10d8:	b1 e0       	ldi	r27, 0x01	; 1
    10da:	3e d0       	rcall	.+124    	; 0x1158 <__ultoa_invert+0x9c>
    10dc:	b4 e0       	ldi	r27, 0x04	; 4
    10de:	3c d0       	rcall	.+120    	; 0x1158 <__ultoa_invert+0x9c>
    10e0:	67 0f       	add	r22, r23
    10e2:	78 1f       	adc	r23, r24
    10e4:	89 1f       	adc	r24, r25
    10e6:	9a 1f       	adc	r25, r26
    10e8:	a1 1d       	adc	r26, r1
    10ea:	68 0f       	add	r22, r24
    10ec:	79 1f       	adc	r23, r25
    10ee:	8a 1f       	adc	r24, r26
    10f0:	91 1d       	adc	r25, r1
    10f2:	a1 1d       	adc	r26, r1
    10f4:	6a 0f       	add	r22, r26
    10f6:	71 1d       	adc	r23, r1
    10f8:	81 1d       	adc	r24, r1
    10fa:	91 1d       	adc	r25, r1
    10fc:	a1 1d       	adc	r26, r1
    10fe:	20 d0       	rcall	.+64     	; 0x1140 <__ultoa_invert+0x84>
    1100:	09 f4       	brne	.+2      	; 0x1104 <__ultoa_invert+0x48>
    1102:	68 94       	set
    1104:	3f 91       	pop	r19
    1106:	2a e0       	ldi	r18, 0x0A	; 10
    1108:	26 9f       	mul	r18, r22
    110a:	11 24       	eor	r1, r1
    110c:	30 19       	sub	r19, r0
    110e:	30 5d       	subi	r19, 0xD0	; 208
    1110:	31 93       	st	Z+, r19
    1112:	de f6       	brtc	.-74     	; 0x10ca <__ultoa_invert+0xe>
    1114:	cf 01       	movw	r24, r30
    1116:	08 95       	ret
    1118:	46 2f       	mov	r20, r22
    111a:	47 70       	andi	r20, 0x07	; 7
    111c:	40 5d       	subi	r20, 0xD0	; 208
    111e:	41 93       	st	Z+, r20
    1120:	b3 e0       	ldi	r27, 0x03	; 3
    1122:	0f d0       	rcall	.+30     	; 0x1142 <__ultoa_invert+0x86>
    1124:	c9 f7       	brne	.-14     	; 0x1118 <__ultoa_invert+0x5c>
    1126:	f6 cf       	rjmp	.-20     	; 0x1114 <__ultoa_invert+0x58>
    1128:	46 2f       	mov	r20, r22
    112a:	4f 70       	andi	r20, 0x0F	; 15
    112c:	40 5d       	subi	r20, 0xD0	; 208
    112e:	4a 33       	cpi	r20, 0x3A	; 58
    1130:	18 f0       	brcs	.+6      	; 0x1138 <__ultoa_invert+0x7c>
    1132:	49 5d       	subi	r20, 0xD9	; 217
    1134:	31 fd       	sbrc	r19, 1
    1136:	40 52       	subi	r20, 0x20	; 32
    1138:	41 93       	st	Z+, r20
    113a:	02 d0       	rcall	.+4      	; 0x1140 <__ultoa_invert+0x84>
    113c:	a9 f7       	brne	.-22     	; 0x1128 <__ultoa_invert+0x6c>
    113e:	ea cf       	rjmp	.-44     	; 0x1114 <__ultoa_invert+0x58>
    1140:	b4 e0       	ldi	r27, 0x04	; 4
    1142:	a6 95       	lsr	r26
    1144:	97 95       	ror	r25
    1146:	87 95       	ror	r24
    1148:	77 95       	ror	r23
    114a:	67 95       	ror	r22
    114c:	ba 95       	dec	r27
    114e:	c9 f7       	brne	.-14     	; 0x1142 <__ultoa_invert+0x86>
    1150:	00 97       	sbiw	r24, 0x00	; 0
    1152:	61 05       	cpc	r22, r1
    1154:	71 05       	cpc	r23, r1
    1156:	08 95       	ret
    1158:	9b 01       	movw	r18, r22
    115a:	ac 01       	movw	r20, r24
    115c:	0a 2e       	mov	r0, r26
    115e:	06 94       	lsr	r0
    1160:	57 95       	ror	r21
    1162:	47 95       	ror	r20
    1164:	37 95       	ror	r19
    1166:	27 95       	ror	r18
    1168:	ba 95       	dec	r27
    116a:	c9 f7       	brne	.-14     	; 0x115e <__ultoa_invert+0xa2>
    116c:	62 0f       	add	r22, r18
    116e:	73 1f       	adc	r23, r19
    1170:	84 1f       	adc	r24, r20
    1172:	95 1f       	adc	r25, r21
    1174:	a0 1d       	adc	r26, r0
    1176:	08 95       	ret

00001178 <eeprom_read_block>:
    1178:	dc 01       	movw	r26, r24
    117a:	cb 01       	movw	r24, r22

0000117c <eeprom_read_blraw>:
    117c:	fc 01       	movw	r30, r24
    117e:	f9 99       	sbic	0x1f, 1	; 31
    1180:	fe cf       	rjmp	.-4      	; 0x117e <eeprom_read_blraw+0x2>
    1182:	06 c0       	rjmp	.+12     	; 0x1190 <eeprom_read_blraw+0x14>
    1184:	f2 bd       	out	0x22, r31	; 34
    1186:	e1 bd       	out	0x21, r30	; 33
    1188:	f8 9a       	sbi	0x1f, 0	; 31
    118a:	31 96       	adiw	r30, 0x01	; 1
    118c:	00 b4       	in	r0, 0x20	; 32
    118e:	0d 92       	st	X+, r0
    1190:	41 50       	subi	r20, 0x01	; 1
    1192:	50 40       	sbci	r21, 0x00	; 0
    1194:	b8 f7       	brcc	.-18     	; 0x1184 <eeprom_read_blraw+0x8>
    1196:	08 95       	ret

00001198 <eeprom_read_word>:
    1198:	a8 e1       	ldi	r26, 0x18	; 24
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	42 e0       	ldi	r20, 0x02	; 2
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	0c 94 be 08 	jmp	0x117c	; 0x117c <eeprom_read_blraw>

000011a4 <eeprom_write_block>:
    11a4:	dc 01       	movw	r26, r24
    11a6:	cb 01       	movw	r24, r22
    11a8:	03 c0       	rjmp	.+6      	; 0x11b0 <eeprom_write_block+0xc>
    11aa:	2d 91       	ld	r18, X+
    11ac:	0e 94 dd 08 	call	0x11ba	; 0x11ba <eeprom_write_r18>
    11b0:	41 50       	subi	r20, 0x01	; 1
    11b2:	50 40       	sbci	r21, 0x00	; 0
    11b4:	d0 f7       	brcc	.-12     	; 0x11aa <eeprom_write_block+0x6>
    11b6:	08 95       	ret

000011b8 <eeprom_write_byte>:
    11b8:	26 2f       	mov	r18, r22

000011ba <eeprom_write_r18>:
    11ba:	f9 99       	sbic	0x1f, 1	; 31
    11bc:	fe cf       	rjmp	.-4      	; 0x11ba <eeprom_write_r18>
    11be:	1f ba       	out	0x1f, r1	; 31
    11c0:	92 bd       	out	0x22, r25	; 34
    11c2:	81 bd       	out	0x21, r24	; 33
    11c4:	20 bd       	out	0x20, r18	; 32
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	f8 94       	cli
    11ca:	fa 9a       	sbi	0x1f, 2	; 31
    11cc:	f9 9a       	sbi	0x1f, 1	; 31
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	01 96       	adiw	r24, 0x01	; 1
    11d2:	08 95       	ret

000011d4 <eeprom_write_word>:
    11d4:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <eeprom_write_byte>
    11d8:	27 2f       	mov	r18, r23
    11da:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <eeprom_write_r18>

000011de <__mulsi3>:
    11de:	db 01       	movw	r26, r22
    11e0:	8f 93       	push	r24
    11e2:	9f 93       	push	r25
    11e4:	0e 94 21 09 	call	0x1242	; 0x1242 <__muluhisi3>
    11e8:	bf 91       	pop	r27
    11ea:	af 91       	pop	r26
    11ec:	a2 9f       	mul	r26, r18
    11ee:	80 0d       	add	r24, r0
    11f0:	91 1d       	adc	r25, r1
    11f2:	a3 9f       	mul	r26, r19
    11f4:	90 0d       	add	r25, r0
    11f6:	b2 9f       	mul	r27, r18
    11f8:	90 0d       	add	r25, r0
    11fa:	11 24       	eor	r1, r1
    11fc:	08 95       	ret

000011fe <__udivmodsi4>:
    11fe:	a1 e2       	ldi	r26, 0x21	; 33
    1200:	1a 2e       	mov	r1, r26
    1202:	aa 1b       	sub	r26, r26
    1204:	bb 1b       	sub	r27, r27
    1206:	fd 01       	movw	r30, r26
    1208:	0d c0       	rjmp	.+26     	; 0x1224 <__udivmodsi4_ep>

0000120a <__udivmodsi4_loop>:
    120a:	aa 1f       	adc	r26, r26
    120c:	bb 1f       	adc	r27, r27
    120e:	ee 1f       	adc	r30, r30
    1210:	ff 1f       	adc	r31, r31
    1212:	a2 17       	cp	r26, r18
    1214:	b3 07       	cpc	r27, r19
    1216:	e4 07       	cpc	r30, r20
    1218:	f5 07       	cpc	r31, r21
    121a:	20 f0       	brcs	.+8      	; 0x1224 <__udivmodsi4_ep>
    121c:	a2 1b       	sub	r26, r18
    121e:	b3 0b       	sbc	r27, r19
    1220:	e4 0b       	sbc	r30, r20
    1222:	f5 0b       	sbc	r31, r21

00001224 <__udivmodsi4_ep>:
    1224:	66 1f       	adc	r22, r22
    1226:	77 1f       	adc	r23, r23
    1228:	88 1f       	adc	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	1a 94       	dec	r1
    122e:	69 f7       	brne	.-38     	; 0x120a <__udivmodsi4_loop>
    1230:	60 95       	com	r22
    1232:	70 95       	com	r23
    1234:	80 95       	com	r24
    1236:	90 95       	com	r25
    1238:	9b 01       	movw	r18, r22
    123a:	ac 01       	movw	r20, r24
    123c:	bd 01       	movw	r22, r26
    123e:	cf 01       	movw	r24, r30
    1240:	08 95       	ret

00001242 <__muluhisi3>:
    1242:	0e 94 ba 04 	call	0x974	; 0x974 <__umulhisi3>
    1246:	a5 9f       	mul	r26, r21
    1248:	90 0d       	add	r25, r0
    124a:	b4 9f       	mul	r27, r20
    124c:	90 0d       	add	r25, r0
    124e:	a4 9f       	mul	r26, r20
    1250:	80 0d       	add	r24, r0
    1252:	91 1d       	adc	r25, r1
    1254:	11 24       	eor	r1, r1
    1256:	08 95       	ret

00001258 <__prologue_saves__>:
    1258:	2f 92       	push	r2
    125a:	3f 92       	push	r3
    125c:	4f 92       	push	r4
    125e:	5f 92       	push	r5
    1260:	6f 92       	push	r6
    1262:	7f 92       	push	r7
    1264:	8f 92       	push	r8
    1266:	9f 92       	push	r9
    1268:	af 92       	push	r10
    126a:	bf 92       	push	r11
    126c:	cf 92       	push	r12
    126e:	df 92       	push	r13
    1270:	ef 92       	push	r14
    1272:	ff 92       	push	r15
    1274:	0f 93       	push	r16
    1276:	1f 93       	push	r17
    1278:	cf 93       	push	r28
    127a:	df 93       	push	r29
    127c:	cd b7       	in	r28, 0x3d	; 61
    127e:	de b7       	in	r29, 0x3e	; 62
    1280:	ca 1b       	sub	r28, r26
    1282:	db 0b       	sbc	r29, r27
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	f8 94       	cli
    1288:	de bf       	out	0x3e, r29	; 62
    128a:	0f be       	out	0x3f, r0	; 63
    128c:	cd bf       	out	0x3d, r28	; 61
    128e:	09 94       	ijmp

00001290 <__epilogue_restores__>:
    1290:	2a 88       	ldd	r2, Y+18	; 0x12
    1292:	39 88       	ldd	r3, Y+17	; 0x11
    1294:	48 88       	ldd	r4, Y+16	; 0x10
    1296:	5f 84       	ldd	r5, Y+15	; 0x0f
    1298:	6e 84       	ldd	r6, Y+14	; 0x0e
    129a:	7d 84       	ldd	r7, Y+13	; 0x0d
    129c:	8c 84       	ldd	r8, Y+12	; 0x0c
    129e:	9b 84       	ldd	r9, Y+11	; 0x0b
    12a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    12a2:	b9 84       	ldd	r11, Y+9	; 0x09
    12a4:	c8 84       	ldd	r12, Y+8	; 0x08
    12a6:	df 80       	ldd	r13, Y+7	; 0x07
    12a8:	ee 80       	ldd	r14, Y+6	; 0x06
    12aa:	fd 80       	ldd	r15, Y+5	; 0x05
    12ac:	0c 81       	ldd	r16, Y+4	; 0x04
    12ae:	1b 81       	ldd	r17, Y+3	; 0x03
    12b0:	aa 81       	ldd	r26, Y+2	; 0x02
    12b2:	b9 81       	ldd	r27, Y+1	; 0x01
    12b4:	ce 0f       	add	r28, r30
    12b6:	d1 1d       	adc	r29, r1
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	de bf       	out	0x3e, r29	; 62
    12be:	0f be       	out	0x3f, r0	; 63
    12c0:	cd bf       	out	0x3d, r28	; 61
    12c2:	ed 01       	movw	r28, r26
    12c4:	08 95       	ret

000012c6 <_exit>:
    12c6:	f8 94       	cli

000012c8 <__stop_program>:
    12c8:	ff cf       	rjmp	.-2      	; 0x12c8 <__stop_program>
