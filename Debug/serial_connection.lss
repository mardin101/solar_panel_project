
serial_connection.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000172  00800100  0000137a  0000142e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000137a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800272  00800272  000015a0  2**0
                  ALLOC
  3 .eeprom       00000017  00810000  00810000  000015a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000015b7  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001614  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000268  00000000  00000000  00001658  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002556  00000000  00000000  000018c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000dd9  00000000  00000000  00003e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000118a  00000000  00000000  00004bef  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000544  00000000  00000000  00005d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000892  00000000  00000000  000062c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001178  00000000  00000000  00006b52  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000188  00000000  00000000  00007cca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e7       	ldi	r30, 0x7A	; 122
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 37       	cpi	r26, 0x72	; 114
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a2 e7       	ldi	r26, 0x72	; 114
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a6 3a       	cpi	r26, 0xA6	; 166
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 da 04 	call	0x9b4	; 0x9b4 <main>
      9e:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_16>:
uint16_t timer_value;
int distance_cm;
uint8_t error;

ISR (TIMER0_OVF_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	8f 93       	push	r24
      b2:	9f 93       	push	r25
	if(rising_edge==1) //Check if there was echo
      b4:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <rising_edge>
      b8:	81 30       	cpi	r24, 0x01	; 1
      ba:	99 f4       	brne	.+38     	; 0xe2 <__vector_16+0x3c>
	{
		timer_value++;
      bc:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <timer_value>
      c0:	90 91 76 02 	lds	r25, 0x0276	; 0x800276 <timer_value+0x1>
      c4:	01 96       	adiw	r24, 0x01	; 1
      c6:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <timer_value+0x1>
      ca:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <timer_value>
		/*Check if isnt out of range*/
		if(timer_value > 91)
      ce:	8c 35       	cpi	r24, 0x5C	; 92
      d0:	91 05       	cpc	r25, r1
      d2:	38 f0       	brcs	.+14     	; 0xe2 <__vector_16+0x3c>
		{
			working = 0;
      d4:	10 92 74 02 	sts	0x0274, r1	; 0x800274 <working>
			rising_edge = 0;
      d8:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <rising_edge>
			error = 1;
      dc:	81 e0       	ldi	r24, 0x01	; 1
      de:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <error>
		}
	}
}
      e2:	9f 91       	pop	r25
      e4:	8f 91       	pop	r24
      e6:	0f 90       	pop	r0
      e8:	0f be       	out	0x3f, r0	; 63
      ea:	0f 90       	pop	r0
      ec:	1f 90       	pop	r1
      ee:	18 95       	reti

000000f0 <__vector_2>:
ISR (INT1_vect)
{
      f0:	1f 92       	push	r1
      f2:	0f 92       	push	r0
      f4:	0f b6       	in	r0, 0x3f	; 63
      f6:	0f 92       	push	r0
      f8:	11 24       	eor	r1, r1
      fa:	2f 93       	push	r18
      fc:	3f 93       	push	r19
      fe:	6f 93       	push	r22
     100:	7f 93       	push	r23
     102:	8f 93       	push	r24
     104:	9f 93       	push	r25
     106:	af 93       	push	r26
     108:	bf 93       	push	r27
	if(working==1) //Check if echo is high, start timer
     10a:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <working>
     10e:	81 30       	cpi	r24, 0x01	; 1
     110:	31 f5       	brne	.+76     	; 0x15e <__vector_2+0x6e>
	{
		if(rising_edge==0)
     112:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <rising_edge>
     116:	81 11       	cpse	r24, r1
     118:	09 c0       	rjmp	.+18     	; 0x12c <__vector_2+0x3c>
		{
			rising_edge=1;
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <rising_edge>
			TCNT0 = 0;
     120:	16 bc       	out	0x26, r1	; 38
			timer_value = 0;
     122:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <timer_value+0x1>
     126:	10 92 75 02 	sts	0x0275, r1	; 0x800275 <timer_value>
     12a:	19 c0       	rjmp	.+50     	; 0x15e <__vector_2+0x6e>
		}
		else //Check if echo turned low, calculate distance
		{
			rising_edge = 0;
     12c:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <rising_edge>
			distance_cm = (timer_value*256 + TCNT0)/58;
     130:	86 b5       	in	r24, 0x26	; 38
     132:	20 e0       	ldi	r18, 0x00	; 0
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <timer_value>
     13a:	28 0f       	add	r18, r24
     13c:	31 1d       	adc	r19, r1
     13e:	af e9       	ldi	r26, 0x9F	; 159
     140:	b6 e4       	ldi	r27, 0x46	; 70
     142:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__umulhisi3>
     146:	92 95       	swap	r25
     148:	82 95       	swap	r24
     14a:	8f 70       	andi	r24, 0x0F	; 15
     14c:	89 27       	eor	r24, r25
     14e:	9f 70       	andi	r25, 0x0F	; 15
     150:	89 27       	eor	r24, r25
     152:	90 93 7a 02 	sts	0x027A, r25	; 0x80027a <distance_cm+0x1>
     156:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <distance_cm>
			working = 0;
     15a:	10 92 74 02 	sts	0x0274, r1	; 0x800274 <working>
		}
	}
}
     15e:	bf 91       	pop	r27
     160:	af 91       	pop	r26
     162:	9f 91       	pop	r25
     164:	8f 91       	pop	r24
     166:	7f 91       	pop	r23
     168:	6f 91       	pop	r22
     16a:	3f 91       	pop	r19
     16c:	2f 91       	pop	r18
     16e:	0f 90       	pop	r0
     170:	0f be       	out	0x3f, r0	; 63
     172:	0f 90       	pop	r0
     174:	1f 90       	pop	r1
     176:	18 95       	reti

00000178 <__vector_11>:
  determined by the timer settings in SCH_Init_T1().

-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
     178:	1f 92       	push	r1
     17a:	0f 92       	push	r0
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	0f 92       	push	r0
     180:	11 24       	eor	r1, r1
     182:	2f 93       	push	r18
     184:	3f 93       	push	r19
     186:	8f 93       	push	r24
     188:	9f 93       	push	r25
     18a:	af 93       	push	r26
     18c:	bf 93       	push	r27
     18e:	ef 93       	push	r30
     190:	ff 93       	push	r31
     192:	eb e7       	ldi	r30, 0x7B	; 123
     194:	f2 e0       	ldi	r31, 0x02	; 2
     196:	2e e9       	ldi	r18, 0x9E	; 158
     198:	32 e0       	ldi	r19, 0x02	; 2
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
   {
      // Check if there is a task at this location
      if(SCH_tasks_G[Index].pTask)
     19a:	80 81       	ld	r24, Z
     19c:	91 81       	ldd	r25, Z+1	; 0x01
     19e:	89 2b       	or	r24, r25
     1a0:	91 f0       	breq	.+36     	; 0x1c6 <__vector_11+0x4e>
      {
         if(SCH_tasks_G[Index].Delay == 0)
     1a2:	82 81       	ldd	r24, Z+2	; 0x02
     1a4:	93 81       	ldd	r25, Z+3	; 0x03
     1a6:	00 97       	sbiw	r24, 0x00	; 0
     1a8:	59 f4       	brne	.+22     	; 0x1c0 <__vector_11+0x48>
         {
            // The task is due to run, Inc. the 'RunMe' flag
            SCH_tasks_G[Index].RunMe += 1;
     1aa:	86 81       	ldd	r24, Z+6	; 0x06
     1ac:	8f 5f       	subi	r24, 0xFF	; 255
     1ae:	86 83       	std	Z+6, r24	; 0x06

            if(SCH_tasks_G[Index].Period)
     1b0:	84 81       	ldd	r24, Z+4	; 0x04
     1b2:	95 81       	ldd	r25, Z+5	; 0x05
     1b4:	00 97       	sbiw	r24, 0x00	; 0
     1b6:	39 f0       	breq	.+14     	; 0x1c6 <__vector_11+0x4e>
            {
               // Schedule periodic tasks to run again
               SCH_tasks_G[Index].Delay = SCH_tasks_G[Index].Period;
               SCH_tasks_G[Index].Delay -= 1;
     1b8:	01 97       	sbiw	r24, 0x01	; 1
     1ba:	93 83       	std	Z+3, r25	; 0x03
     1bc:	82 83       	std	Z+2, r24	; 0x02
     1be:	03 c0       	rjmp	.+6      	; 0x1c6 <__vector_11+0x4e>
            }
         }
         else
         {
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	93 83       	std	Z+3, r25	; 0x03
     1c4:	82 83       	std	Z+2, r24	; 0x02
     1c6:	37 96       	adiw	r30, 0x07	; 7
-*------------------------------------------------------------------*/

ISR(TIMER1_COMPA_vect)
{
   unsigned char Index;
   for(Index = 0; Index < SCH_MAX_TASKS; Index++)
     1c8:	e2 17       	cp	r30, r18
     1ca:	f3 07       	cpc	r31, r19
     1cc:	31 f7       	brne	.-52     	; 0x19a <__vector_11+0x22>
            // Not yet ready to run: just decrement the delay
            SCH_tasks_G[Index].Delay -= 1;
         }
      }
   }
}
     1ce:	ff 91       	pop	r31
     1d0:	ef 91       	pop	r30
     1d2:	bf 91       	pop	r27
     1d4:	af 91       	pop	r26
     1d6:	9f 91       	pop	r25
     1d8:	8f 91       	pop	r24
     1da:	3f 91       	pop	r19
     1dc:	2f 91       	pop	r18
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <ser_init>:
}

void ser_writeln(char* s) {
	ser_write(s);
	ser_transmit('\r');
	ser_transmit('\n');
     1e8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     1ec:	87 e6       	ldi	r24, 0x67	; 103
     1ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     1f2:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     1f6:	88 e1       	ldi	r24, 0x18	; 24
     1f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     1fc:	86 e0       	ldi	r24, 0x06	; 6
     1fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	91 e0       	ldi	r25, 0x01	; 1
     206:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <__iob+0x3>
     20a:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <__iob+0x2>
     20e:	08 95       	ret

00000210 <ser_transmit>:
     210:	e0 ec       	ldi	r30, 0xC0	; 192
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	90 81       	ld	r25, Z
     216:	95 ff       	sbrs	r25, 5
     218:	fd cf       	rjmp	.-6      	; 0x214 <ser_transmit+0x4>
     21a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     21e:	08 95       	ret

00000220 <ser_stdio_putchar>:
     220:	cf 93       	push	r28
     222:	c8 2f       	mov	r28, r24
     224:	8a 30       	cpi	r24, 0x0A	; 10
     226:	19 f4       	brne	.+6      	; 0x22e <ser_stdio_putchar+0xe>
     228:	8d e0       	ldi	r24, 0x0D	; 13
     22a:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     22e:	8c 2f       	mov	r24, r28
     230:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <ser_receive>:
     238:	e0 ec       	ldi	r30, 0xC0	; 192
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	80 81       	ld	r24, Z
     23e:	88 23       	and	r24, r24
     240:	ec f7       	brge	.-6      	; 0x23c <ser_receive+0x4>
     242:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     246:	08 95       	ret

00000248 <ser_readln>:
}

// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
     248:	af 92       	push	r10
     24a:	bf 92       	push	r11
     24c:	cf 92       	push	r12
     24e:	df 92       	push	r13
     250:	ef 92       	push	r14
     252:	ff 92       	push	r15
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	6c 01       	movw	r12, r24
     25e:	d4 2f       	mov	r29, r20
     260:	5c 01       	movw	r10, r24
	int i=0;
     262:	00 e0       	ldi	r16, 0x00	; 0
     264:	10 e0       	ldi	r17, 0x00	; 0
		if (echo) ser_transmit(c);
		if (c=='\r') {
			if (echo) ser_transmit('\n');
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     266:	7b 01       	movw	r14, r22
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	e8 1a       	sub	r14, r24
     26c:	f1 08       	sbc	r15, r1
// Hele regel lezen
void ser_readln(char* buf, int maxlength, uint8_t echo) {
	int i=0;

	while(1) {
		uint8_t c = ser_receive();
     26e:	0e 94 1c 01 	call	0x238	; 0x238 <ser_receive>
     272:	c8 2f       	mov	r28, r24
		if (echo) ser_transmit(c);
     274:	d1 11       	cpse	r29, r1
     276:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
		if (c=='\r') {
     27a:	cd 30       	cpi	r28, 0x0D	; 13
     27c:	31 f4       	brne	.+12     	; 0x28a <ser_readln+0x42>
			if (echo) ser_transmit('\n');
     27e:	dd 23       	and	r29, r29
     280:	69 f0       	breq	.+26     	; 0x29c <ser_readln+0x54>
     282:	8a e0       	ldi	r24, 0x0A	; 10
     284:	0e 94 08 01 	call	0x210	; 0x210 <ser_transmit>
     288:	09 c0       	rjmp	.+18     	; 0x29c <ser_readln+0x54>
			break; // ENTER ontvangen
		}
		if (i<maxlength-1) {
     28a:	0e 15       	cp	r16, r14
     28c:	1f 05       	cpc	r17, r15
     28e:	7c f7       	brge	.-34     	; 0x26e <ser_readln+0x26>
			buf[i++]=c;
     290:	0f 5f       	subi	r16, 0xFF	; 255
     292:	1f 4f       	sbci	r17, 0xFF	; 255
     294:	f5 01       	movw	r30, r10
     296:	c1 93       	st	Z+, r28
     298:	5f 01       	movw	r10, r30
     29a:	e9 cf       	rjmp	.-46     	; 0x26e <ser_readln+0x26>
		}
	}
	buf[i]='\0';
     29c:	f6 01       	movw	r30, r12
     29e:	e0 0f       	add	r30, r16
     2a0:	f1 1f       	adc	r31, r17
     2a2:	10 82       	st	Z, r1
}
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	1f 91       	pop	r17
     2aa:	0f 91       	pop	r16
     2ac:	ff 90       	pop	r15
     2ae:	ef 90       	pop	r14
     2b0:	df 90       	pop	r13
     2b2:	cf 90       	pop	r12
     2b4:	bf 90       	pop	r11
     2b6:	af 90       	pop	r10
     2b8:	08 95       	ret

000002ba <initEEPROM>:
	char *result = malloc(strlen(s1) + strlen(s2) + 1); // +1 for the null-terminator
	// in real code you would check for errors in malloc here
	strcpy(result, s1);
	strcat(result, s2);
	return result;
}
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	28 97       	sbiw	r28, 0x08	; 8
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
     2ce:	84 e0       	ldi	r24, 0x04	; 4
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     2d6:	88 23       	and	r24, r24
     2d8:	09 f4       	brne	.+2      	; 0x2dc <initEEPROM+0x22>
     2da:	41 c0       	rjmp	.+130    	; 0x35e <initEEPROM+0xa4>
     2dc:	88 e0       	ldi	r24, 0x08	; 8
     2de:	ee e0       	ldi	r30, 0x0E	; 14
     2e0:	f1 e0       	ldi	r31, 0x01	; 1
     2e2:	de 01       	movw	r26, r28
     2e4:	11 96       	adiw	r26, 0x01	; 1
     2e6:	01 90       	ld	r0, Z+
     2e8:	0d 92       	st	X+, r0
     2ea:	8a 95       	dec	r24
     2ec:	e1 f7       	brne	.-8      	; 0x2e6 <initEEPROM+0x2c>
     2ee:	4a e0       	ldi	r20, 0x0A	; 10
     2f0:	50 e0       	ldi	r21, 0x00	; 0
     2f2:	6d e0       	ldi	r22, 0x0D	; 13
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	ce 01       	movw	r24, r28
     2f8:	01 96       	adiw	r24, 0x01	; 1
     2fa:	0e 94 2a 09 	call	0x1254	; 0x1254 <eeprom_write_block>
     2fe:	61 e0       	ldi	r22, 0x01	; 1
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	82 e0       	ldi	r24, 0x02	; 2
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     30a:	60 e0       	ldi	r22, 0x00	; 0
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	89 e0       	ldi	r24, 0x09	; 9
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     316:	60 e5       	ldi	r22, 0x50	; 80
     318:	70 e0       	ldi	r23, 0x00	; 0
     31a:	8b e0       	ldi	r24, 0x0B	; 11
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     322:	6f ed       	ldi	r22, 0xDF	; 223
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	87 e0       	ldi	r24, 0x07	; 7
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     32e:	6f ee       	ldi	r22, 0xEF	; 239
     330:	70 e0       	ldi	r23, 0x00	; 0
     332:	85 e0       	ldi	r24, 0x05	; 5
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     33a:	6f ee       	ldi	r22, 0xEF	; 239
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	85 e0       	ldi	r24, 0x05	; 5
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     346:	66 e9       	ldi	r22, 0x96	; 150
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     352:	60 e0       	ldi	r22, 0x00	; 0
     354:	70 e0       	ldi	r23, 0x00	; 0
     356:	84 e0       	ldi	r24, 0x04	; 4
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     35e:	28 96       	adiw	r28, 0x08	; 8
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <setMode>:
     370:	bc 01       	movw	r22, r24
     372:	82 e0       	ldi	r24, 0x02	; 2
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     37a:	08 95       	ret

0000037c <setTempMin>:
     37c:	bc 01       	movw	r22, r24
     37e:	89 e0       	ldi	r24, 0x09	; 9
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     386:	08 95       	ret

00000388 <setTempMax>:
     388:	bc 01       	movw	r22, r24
     38a:	8b e0       	ldi	r24, 0x0B	; 11
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     392:	08 95       	ret

00000394 <setLightMin>:
     394:	bc 01       	movw	r22, r24
     396:	87 e0       	ldi	r24, 0x07	; 7
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     39e:	08 95       	ret

000003a0 <setLightMax>:
     3a0:	bc 01       	movw	r22, r24
     3a2:	85 e0       	ldi	r24, 0x05	; 5
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     3aa:	08 95       	ret

000003ac <setDeviceName>:
     3ac:	fc 01       	movw	r30, r24
     3ae:	01 90       	ld	r0, Z+
     3b0:	00 20       	and	r0, r0
     3b2:	e9 f7       	brne	.-6      	; 0x3ae <setDeviceName+0x2>
     3b4:	31 97       	sbiw	r30, 0x01	; 1
     3b6:	e8 1b       	sub	r30, r24
     3b8:	f9 0b       	sbc	r31, r25
     3ba:	3b 97       	sbiw	r30, 0x0b	; 11
     3bc:	4c f0       	brlt	.+18     	; 0x3d0 <setDeviceName+0x24>
     3be:	86 e1       	ldi	r24, 0x16	; 22
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	9f 93       	push	r25
     3c4:	8f 93       	push	r24
     3c6:	0e 94 3a 06 	call	0xc74	; 0xc74 <printf>
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	08 95       	ret
     3d0:	4a e0       	ldi	r20, 0x0A	; 10
     3d2:	50 e0       	ldi	r21, 0x00	; 0
     3d4:	6d e0       	ldi	r22, 0x0D	; 13
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	0e 94 2a 09 	call	0x1254	; 0x1254 <eeprom_write_block>
     3dc:	88 e2       	ldi	r24, 0x28	; 40
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     3e4:	08 95       	ret

000003e6 <setDistanceMax>:
     3e6:	bc 01       	movw	r22, r24
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 42 09 	call	0x1284	; 0x1284 <eeprom_write_word>
     3f0:	08 95       	ret

000003f2 <getDeviceName>:
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	2a 97       	sbiw	r28, 0x0a	; 10
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
     40e:	7c 01       	movw	r14, r24
     410:	8b 01       	movw	r16, r22
     412:	4a e0       	ldi	r20, 0x0A	; 10
     414:	50 e0       	ldi	r21, 0x00	; 0
     416:	6d e0       	ldi	r22, 0x0D	; 13
     418:	70 e0       	ldi	r23, 0x00	; 0
     41a:	ce 01       	movw	r24, r28
     41c:	01 96       	adiw	r24, 0x01	; 1
     41e:	0e 94 14 09 	call	0x1228	; 0x1228 <eeprom_read_block>
     422:	a8 01       	movw	r20, r16
     424:	41 50       	subi	r20, 0x01	; 1
     426:	51 09       	sbc	r21, r1
     428:	be 01       	movw	r22, r28
     42a:	6f 5f       	subi	r22, 0xFF	; 255
     42c:	7f 4f       	sbci	r23, 0xFF	; 255
     42e:	c7 01       	movw	r24, r14
     430:	0e 94 2b 06 	call	0xc56	; 0xc56 <strncpy>
     434:	0e 0d       	add	r16, r14
     436:	1f 1d       	adc	r17, r15
     438:	f8 01       	movw	r30, r16
     43a:	31 97       	sbiw	r30, 0x01	; 1
     43c:	10 82       	st	Z, r1
     43e:	2a 96       	adiw	r28, 0x0a	; 10
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
     44a:	df 91       	pop	r29
     44c:	cf 91       	pop	r28
     44e:	1f 91       	pop	r17
     450:	0f 91       	pop	r16
     452:	ff 90       	pop	r15
     454:	ef 90       	pop	r14
     456:	08 95       	ret

00000458 <get_config>:
     458:	4f 92       	push	r4
     45a:	5f 92       	push	r5
     45c:	6f 92       	push	r6
     45e:	7f 92       	push	r7
     460:	8f 92       	push	r8
     462:	9f 92       	push	r9
     464:	af 92       	push	r10
     466:	bf 92       	push	r11
     468:	cf 92       	push	r12
     46a:	df 92       	push	r13
     46c:	ef 92       	push	r14
     46e:	ff 92       	push	r15
     470:	0f 93       	push	r16
     472:	1f 93       	push	r17
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	cd b7       	in	r28, 0x3d	; 61
     47a:	de b7       	in	r29, 0x3e	; 62
     47c:	2a 97       	sbiw	r28, 0x0a	; 10
     47e:	0f b6       	in	r0, 0x3f	; 63
     480:	f8 94       	cli
     482:	de bf       	out	0x3e, r29	; 62
     484:	0f be       	out	0x3f, r0	; 63
     486:	cd bf       	out	0x3d, r28	; 61
     488:	82 e0       	ldi	r24, 0x02	; 2
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     490:	f8 2e       	mov	r15, r24
     492:	e9 2e       	mov	r14, r25
     494:	8b e0       	ldi	r24, 0x0B	; 11
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     49c:	b8 2e       	mov	r11, r24
     49e:	a9 2e       	mov	r10, r25
     4a0:	89 e0       	ldi	r24, 0x09	; 9
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     4a8:	d8 2e       	mov	r13, r24
     4aa:	c9 2e       	mov	r12, r25
     4ac:	85 e0       	ldi	r24, 0x05	; 5
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     4b4:	78 2e       	mov	r7, r24
     4b6:	69 2e       	mov	r6, r25
     4b8:	87 e0       	ldi	r24, 0x07	; 7
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     4c0:	98 2e       	mov	r9, r24
     4c2:	89 2e       	mov	r8, r25
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     4cc:	58 2e       	mov	r5, r24
     4ce:	49 2e       	mov	r4, r25
     4d0:	6a e0       	ldi	r22, 0x0A	; 10
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	8e 01       	movw	r16, r28
     4d6:	0f 5f       	subi	r16, 0xFF	; 255
     4d8:	1f 4f       	sbci	r17, 0xFF	; 255
     4da:	c8 01       	movw	r24, r16
     4dc:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <getDeviceName>
     4e0:	4f 92       	push	r4
     4e2:	5f 92       	push	r5
     4e4:	6f 92       	push	r6
     4e6:	7f 92       	push	r7
     4e8:	8f 92       	push	r8
     4ea:	9f 92       	push	r9
     4ec:	af 92       	push	r10
     4ee:	bf 92       	push	r11
     4f0:	cf 92       	push	r12
     4f2:	df 92       	push	r13
     4f4:	ef 92       	push	r14
     4f6:	ff 92       	push	r15
     4f8:	1f 93       	push	r17
     4fa:	0f 93       	push	r16
     4fc:	85 e0       	ldi	r24, 0x05	; 5
     4fe:	8f 93       	push	r24
     500:	89 e3       	ldi	r24, 0x39	; 57
     502:	8f 93       	push	r24
     504:	8b e2       	ldi	r24, 0x2B	; 43
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	9f 93       	push	r25
     50a:	8f 93       	push	r24
     50c:	0e 94 3a 06 	call	0xc74	; 0xc74 <printf>
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	f8 94       	cli
     514:	de bf       	out	0x3e, r29	; 62
     516:	0f be       	out	0x3f, r0	; 63
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	2a 96       	adiw	r28, 0x0a	; 10
     51c:	0f b6       	in	r0, 0x3f	; 63
     51e:	f8 94       	cli
     520:	de bf       	out	0x3e, r29	; 62
     522:	0f be       	out	0x3f, r0	; 63
     524:	cd bf       	out	0x3d, r28	; 61
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	0f 91       	pop	r16
     52e:	ff 90       	pop	r15
     530:	ef 90       	pop	r14
     532:	df 90       	pop	r13
     534:	cf 90       	pop	r12
     536:	bf 90       	pop	r11
     538:	af 90       	pop	r10
     53a:	9f 90       	pop	r9
     53c:	8f 90       	pop	r8
     53e:	7f 90       	pop	r7
     540:	6f 90       	pop	r6
     542:	5f 90       	pop	r5
     544:	4f 90       	pop	r4
     546:	08 95       	ret

00000548 <panelUp>:
     548:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <__data_end>
     54c:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <__data_end+0x1>
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	e1 f4       	brne	.+56     	; 0x58c <panelUp+0x44>
     554:	28 98       	cbi	0x05, 0	; 5
     556:	29 9a       	sbi	0x05, 1	; 5
     558:	25 e0       	ldi	r18, 0x05	; 5
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	94 e0       	ldi	r25, 0x04	; 4
     55e:	85 b1       	in	r24, 0x05	; 5
     560:	89 27       	eor	r24, r25
     562:	85 b9       	out	0x05, r24	; 5
     564:	4f ef       	ldi	r20, 0xFF	; 255
     566:	53 ed       	ldi	r21, 0xD3	; 211
     568:	80 e3       	ldi	r24, 0x30	; 48
     56a:	41 50       	subi	r20, 0x01	; 1
     56c:	50 40       	sbci	r21, 0x00	; 0
     56e:	80 40       	sbci	r24, 0x00	; 0
     570:	e1 f7       	brne	.-8      	; 0x56a <panelUp+0x22>
     572:	00 c0       	rjmp	.+0      	; 0x574 <panelUp+0x2c>
     574:	00 00       	nop
     576:	21 50       	subi	r18, 0x01	; 1
     578:	31 09       	sbc	r19, r1
     57a:	89 f7       	brne	.-30     	; 0x55e <panelUp+0x16>
     57c:	2a 98       	cbi	0x05, 2	; 5
     57e:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <__data_end+0x1>
     582:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <__data_end>
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	08 95       	ret
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	08 95       	ret

00000592 <panelDown>:
     592:	60 91 72 02 	lds	r22, 0x0272	; 0x800272 <__data_end>
     596:	70 91 73 02 	lds	r23, 0x0273	; 0x800273 <__data_end+0x1>
     59a:	61 15       	cp	r22, r1
     59c:	71 05       	cpc	r23, r1
     59e:	e1 f4       	brne	.+56     	; 0x5d8 <panelDown+0x46>
     5a0:	29 98       	cbi	0x05, 1	; 5
     5a2:	28 9a       	sbi	0x05, 0	; 5
     5a4:	25 e0       	ldi	r18, 0x05	; 5
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	44 e0       	ldi	r20, 0x04	; 4
     5aa:	95 b1       	in	r25, 0x05	; 5
     5ac:	94 27       	eor	r25, r20
     5ae:	95 b9       	out	0x05, r25	; 5
     5b0:	5f ef       	ldi	r21, 0xFF	; 255
     5b2:	83 ed       	ldi	r24, 0xD3	; 211
     5b4:	90 e3       	ldi	r25, 0x30	; 48
     5b6:	51 50       	subi	r21, 0x01	; 1
     5b8:	80 40       	sbci	r24, 0x00	; 0
     5ba:	90 40       	sbci	r25, 0x00	; 0
     5bc:	e1 f7       	brne	.-8      	; 0x5b6 <panelDown+0x24>
     5be:	00 c0       	rjmp	.+0      	; 0x5c0 <panelDown+0x2e>
     5c0:	00 00       	nop
     5c2:	21 50       	subi	r18, 0x01	; 1
     5c4:	31 09       	sbc	r19, r1
     5c6:	89 f7       	brne	.-30     	; 0x5aa <panelDown+0x18>
     5c8:	2a 98       	cbi	0x05, 2	; 5
     5ca:	81 e0       	ldi	r24, 0x01	; 1
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <__data_end+0x1>
     5d2:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <__data_end>
     5d6:	02 c0       	rjmp	.+4      	; 0x5dc <panelDown+0x4a>
     5d8:	61 e0       	ldi	r22, 0x01	; 1
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	cb 01       	movw	r24, r22
     5de:	08 95       	ret

000005e0 <initPanel>:
     5e0:	87 e0       	ldi	r24, 0x07	; 7
     5e2:	84 b9       	out	0x04, r24	; 4
     5e4:	85 b9       	out	0x05, r24	; 5
     5e6:	2f ef       	ldi	r18, 0xFF	; 255
     5e8:	83 ec       	ldi	r24, 0xC3	; 195
     5ea:	99 e0       	ldi	r25, 0x09	; 9
     5ec:	21 50       	subi	r18, 0x01	; 1
     5ee:	80 40       	sbci	r24, 0x00	; 0
     5f0:	90 40       	sbci	r25, 0x00	; 0
     5f2:	e1 f7       	brne	.-8      	; 0x5ec <initPanel+0xc>
     5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <initPanel+0x16>
     5f6:	00 00       	nop
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	85 b9       	out	0x05, r24	; 5
     5fc:	08 95       	ret

000005fe <adc_init>:
     5fe:	ec e7       	ldi	r30, 0x7C	; 124
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	80 81       	ld	r24, Z
     604:	80 66       	ori	r24, 0x60	; 96
     606:	80 83       	st	Z, r24
     608:	87 e8       	ldi	r24, 0x87	; 135
     60a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     60e:	08 95       	ret

00000610 <adc_read>:
     610:	ea e7       	ldi	r30, 0x7A	; 122
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	80 81       	ld	r24, Z
     616:	80 64       	ori	r24, 0x40	; 64
     618:	80 83       	st	Z, r24
     61a:	80 81       	ld	r24, Z
     61c:	86 fd       	sbrc	r24, 6
     61e:	fd cf       	rjmp	.-6      	; 0x61a <adc_read+0xa>
     620:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	08 95       	ret

00000628 <readLight>:
     628:	ec e7       	ldi	r30, 0x7C	; 124
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	10 82       	st	Z, r1
     62e:	80 81       	ld	r24, Z
     630:	80 66       	ori	r24, 0x60	; 96
     632:	80 83       	st	Z, r24
     634:	0e 94 08 03 	call	0x610	; 0x610 <adc_read>
     638:	9c 01       	movw	r18, r24
     63a:	ad ec       	ldi	r26, 0xCD	; 205
     63c:	bc ec       	ldi	r27, 0xCC	; 204
     63e:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__umulhisi3>
     642:	96 95       	lsr	r25
     644:	87 95       	ror	r24
     646:	96 95       	lsr	r25
     648:	87 95       	ror	r24
     64a:	96 95       	lsr	r25
     64c:	87 95       	ror	r24
     64e:	08 95       	ret

00000650 <getLight>:
     650:	0e 94 14 03 	call	0x628	; 0x628 <readLight>
     654:	9f 93       	push	r25
     656:	8f 93       	push	r24
     658:	8f e4       	ldi	r24, 0x4F	; 79
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	9f 93       	push	r25
     65e:	8f 93       	push	r24
     660:	0e 94 3a 06 	call	0xc74	; 0xc74 <printf>
     664:	0f 90       	pop	r0
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	0f 90       	pop	r0
     66c:	08 95       	ret

0000066e <init_timer>:
     66e:	81 e8       	ldi	r24, 0x81	; 129
     670:	84 bd       	out	0x24, r24	; 36
     672:	83 e0       	ldi	r24, 0x03	; 3
     674:	85 bd       	out	0x25, r24	; 37
     676:	17 bc       	out	0x27, r1	; 39
     678:	08 95       	ret

0000067a <readTemperature>:
     67a:	ec e7       	ldi	r30, 0x7C	; 124
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	10 82       	st	Z, r1
     680:	80 81       	ld	r24, Z
     682:	83 66       	ori	r24, 0x63	; 99
     684:	80 83       	st	Z, r24
     686:	0e 94 08 03 	call	0x610	; 0x610 <adc_read>
     68a:	42 97       	sbiw	r24, 0x12	; 18
     68c:	08 95       	ret

0000068e <run>:
     68e:	0f 93       	push	r16
     690:	1f 93       	push	r17
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	0e 94 3d 03 	call	0x67a	; 0x67a <readTemperature>
     69a:	ec 01       	movw	r28, r24
     69c:	89 e0       	ldi	r24, 0x09	; 9
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     6a4:	8c 01       	movw	r16, r24
     6a6:	8b e0       	ldi	r24, 0x0B	; 11
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     6ae:	9e 01       	movw	r18, r28
     6b0:	33 27       	eor	r19, r19
     6b2:	82 17       	cp	r24, r18
     6b4:	93 07       	cpc	r25, r19
     6b6:	18 f4       	brcc	.+6      	; 0x6be <run+0x30>
     6b8:	0e 94 a4 02 	call	0x548	; 0x548 <panelUp>
     6bc:	05 c0       	rjmp	.+10     	; 0x6c8 <run+0x3a>
     6be:	20 17       	cp	r18, r16
     6c0:	31 07       	cpc	r19, r17
     6c2:	10 f4       	brcc	.+4      	; 0x6c8 <run+0x3a>
     6c4:	0e 94 c9 02 	call	0x592	; 0x592 <panelDown>
     6c8:	85 e0       	ldi	r24, 0x05	; 5
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     6d0:	8c 01       	movw	r16, r24
     6d2:	87 e0       	ldi	r24, 0x07	; 7
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     6da:	ec 01       	movw	r28, r24
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 24 09 	call	0x1248	; 0x1248 <eeprom_read_word>
     6e4:	01 97       	sbiw	r24, 0x01	; 1
     6e6:	29 f1       	breq	.+74     	; 0x732 <run+0xa4>
     6e8:	0e 94 14 03 	call	0x628	; 0x628 <readLight>
     6ec:	9c 01       	movw	r18, r24
     6ee:	22 0f       	add	r18, r18
     6f0:	33 1f       	adc	r19, r19
     6f2:	88 0f       	add	r24, r24
     6f4:	99 1f       	adc	r25, r25
     6f6:	88 0f       	add	r24, r24
     6f8:	99 1f       	adc	r25, r25
     6fa:	88 0f       	add	r24, r24
     6fc:	99 1f       	adc	r25, r25
     6fe:	82 0f       	add	r24, r18
     700:	93 1f       	adc	r25, r19
     702:	08 17       	cp	r16, r24
     704:	19 07       	cpc	r17, r25
     706:	18 f4       	brcc	.+6      	; 0x70e <run+0x80>
     708:	0e 94 c9 02 	call	0x592	; 0x592 <panelDown>
     70c:	12 c0       	rjmp	.+36     	; 0x732 <run+0xa4>
     70e:	0e 94 14 03 	call	0x628	; 0x628 <readLight>
     712:	9c 01       	movw	r18, r24
     714:	22 0f       	add	r18, r18
     716:	33 1f       	adc	r19, r19
     718:	88 0f       	add	r24, r24
     71a:	99 1f       	adc	r25, r25
     71c:	88 0f       	add	r24, r24
     71e:	99 1f       	adc	r25, r25
     720:	88 0f       	add	r24, r24
     722:	99 1f       	adc	r25, r25
     724:	82 0f       	add	r24, r18
     726:	93 1f       	adc	r25, r19
     728:	8c 17       	cp	r24, r28
     72a:	9d 07       	cpc	r25, r29
     72c:	10 f4       	brcc	.+4      	; 0x732 <run+0xa4>
     72e:	0e 94 a4 02 	call	0x548	; 0x548 <panelUp>
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	1f 91       	pop	r17
     738:	0f 91       	pop	r16
     73a:	08 95       	ret

0000073c <getTemperature>:
     73c:	0e 94 3d 03 	call	0x67a	; 0x67a <readTemperature>
     740:	9f 93       	push	r25
     742:	8f 93       	push	r24
     744:	88 e4       	ldi	r24, 0x48	; 72
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	9f 93       	push	r25
     74a:	8f 93       	push	r24
     74c:	0e 94 3a 06 	call	0xc74	; 0xc74 <printf>
     750:	0f 90       	pop	r0
     752:	0f 90       	pop	r0
     754:	0f 90       	pop	r0
     756:	0f 90       	pop	r0
     758:	08 95       	ret

0000075a <deleteEnd>:
     75a:	dc 01       	movw	r26, r24
     75c:	fc 01       	movw	r30, r24
     75e:	01 90       	ld	r0, Z+
     760:	00 20       	and	r0, r0
     762:	e9 f7       	brne	.-6      	; 0x75e <deleteEnd+0x4>
     764:	31 97       	sbiw	r30, 0x01	; 1
     766:	8e 17       	cp	r24, r30
     768:	9f 07       	cpc	r25, r31
     76a:	80 f4       	brcc	.+32     	; 0x78c <deleteEnd+0x32>
     76c:	80 81       	ld	r24, Z
     76e:	8f 32       	cpi	r24, 0x2F	; 47
     770:	69 f0       	breq	.+26     	; 0x78c <deleteEnd+0x32>
     772:	92 91       	ld	r25, -Z
     774:	9a 33       	cpi	r25, 0x3A	; 58
     776:	29 f4       	brne	.+10     	; 0x782 <deleteEnd+0x28>
     778:	10 82       	st	Z, r1
     77a:	ae 17       	cp	r26, r30
     77c:	bf 07       	cpc	r27, r31
     77e:	c8 f3       	brcs	.-14     	; 0x772 <deleteEnd+0x18>
     780:	08 95       	ret
     782:	ae 17       	cp	r26, r30
     784:	bf 07       	cpc	r27, r31
     786:	10 f4       	brcc	.+4      	; 0x78c <deleteEnd+0x32>
     788:	9f 32       	cpi	r25, 0x2F	; 47
     78a:	99 f7       	brne	.-26     	; 0x772 <deleteEnd+0x18>
     78c:	08 95       	ret

0000078e <listen>:

/************************************************************************/
/* Listen function. Listens to serial connection for commands
/************************************************************************/
void listen()
{
     78e:	cf 92       	push	r12
     790:	df 92       	push	r13
     792:	ef 92       	push	r14
     794:	ff 92       	push	r15
     796:	0f 93       	push	r16
     798:	1f 93       	push	r17
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	cd b7       	in	r28, 0x3d	; 61
     7a0:	de b7       	in	r29, 0x3e	; 62
     7a2:	a8 97       	sbiw	r28, 0x28	; 40
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
	char input[40];
	char* test;
	//uint8_t c = ser_receive();
	
	if (UCSR0A & (1 << RXC0)) {
     7ae:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     7b2:	88 23       	and	r24, r24
     7b4:	0c f0       	brlt	.+2      	; 0x7b8 <listen+0x2a>
     7b6:	ef c0       	rjmp	.+478    	; 0x996 <__stack+0x97>
		ser_readln(input, sizeof(input), 0);
     7b8:	40 e0       	ldi	r20, 0x00	; 0
     7ba:	68 e2       	ldi	r22, 0x28	; 40
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	ce 01       	movw	r24, r28
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	0e 94 24 01 	call	0x248	; 0x248 <ser_readln>
		//test = concat(c, input);
		//printf("%s", test);
		const char delimiter = ':';
		char *value;
		
		value = strchr(input, delimiter);
     7c6:	6a e3       	ldi	r22, 0x3A	; 58
     7c8:	70 e0       	ldi	r23, 0x00	; 0
     7ca:	ce 01       	movw	r24, r28
     7cc:	01 96       	adiw	r24, 0x01	; 1
     7ce:	0e 94 17 06 	call	0xc2e	; 0xc2e <strchr>
		value++; //remove spacer from string
     7d2:	8c 01       	movw	r16, r24
     7d4:	0f 5f       	subi	r16, 0xFF	; 255
     7d6:	1f 4f       	sbci	r17, 0xFF	; 255
		deleteEnd(input);
     7d8:	ce 01       	movw	r24, r28
     7da:	01 96       	adiw	r24, 0x01	; 1
     7dc:	0e 94 ad 03 	call	0x75a	; 0x75a <deleteEnd>
		int newValue;
		newValue = strtol(value, NULL, 10);
     7e0:	4a e0       	ldi	r20, 0x0A	; 10
     7e2:	50 e0       	ldi	r21, 0x00	; 0
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	c8 01       	movw	r24, r16
     7ea:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <strtol>
     7ee:	6b 01       	movw	r12, r22
     7f0:	7c 01       	movw	r14, r24

		if(strcmp(&input, 			"get_temperature") == 0) {
     7f2:	67 e5       	ldi	r22, 0x57	; 87
     7f4:	71 e0       	ldi	r23, 0x01	; 1
     7f6:	ce 01       	movw	r24, r28
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     7fe:	89 2b       	or	r24, r25
     800:	19 f4       	brne	.+6      	; 0x808 <listen+0x7a>
			getTemperature();
     802:	0e 94 9e 03 	call	0x73c	; 0x73c <getTemperature>
     806:	c7 c0       	rjmp	.+398    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"get_light") == 0) {
     808:	67 e6       	ldi	r22, 0x67	; 103
     80a:	71 e0       	ldi	r23, 0x01	; 1
     80c:	ce 01       	movw	r24, r28
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     814:	89 2b       	or	r24, r25
     816:	19 f4       	brne	.+6      	; 0x81e <listen+0x90>
			getLight();
     818:	0e 94 28 03 	call	0x650	; 0x650 <getLight>
     81c:	bc c0       	rjmp	.+376    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"get_distance") == 0) {
     81e:	61 e7       	ldi	r22, 0x71	; 113
     820:	71 e0       	ldi	r23, 0x01	; 1
     822:	ce 01       	movw	r24, r28
     824:	01 96       	adiw	r24, 0x01	; 1
     826:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     82a:	89 2b       	or	r24, r25
     82c:	09 f4       	brne	.+2      	; 0x830 <listen+0xa2>
     82e:	b3 c0       	rjmp	.+358    	; 0x996 <__stack+0x97>
			//distance = getDistance();
			//printf("2 %i\n\r", distance);
		} else if (strcmp(&input, 	"panel_out") == 0) {
     830:	6e e7       	ldi	r22, 0x7E	; 126
     832:	71 e0       	ldi	r23, 0x01	; 1
     834:	ce 01       	movw	r24, r28
     836:	01 96       	adiw	r24, 0x01	; 1
     838:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     83c:	89 2b       	or	r24, r25
     83e:	39 f4       	brne	.+14     	; 0x84e <listen+0xc0>
			printf("2:\r\n");
     840:	88 e8       	ldi	r24, 0x88	; 136
     842:	91 e0       	ldi	r25, 0x01	; 1
     844:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
			panelDown();
     848:	0e 94 c9 02 	call	0x592	; 0x592 <panelDown>
     84c:	a4 c0       	rjmp	.+328    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"panel_in") == 0) {
     84e:	6c e8       	ldi	r22, 0x8C	; 140
     850:	71 e0       	ldi	r23, 0x01	; 1
     852:	ce 01       	movw	r24, r28
     854:	01 96       	adiw	r24, 0x01	; 1
     856:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     85a:	89 2b       	or	r24, r25
     85c:	39 f4       	brne	.+14     	; 0x86c <listen+0xde>
			printf("2:\r\n");
     85e:	88 e8       	ldi	r24, 0x88	; 136
     860:	91 e0       	ldi	r25, 0x01	; 1
     862:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
			panelUp();
     866:	0e 94 a4 02 	call	0x548	; 0x548 <panelUp>
     86a:	95 c0       	rjmp	.+298    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_light_threshold_minimum") == 0) {
     86c:	65 e9       	ldi	r22, 0x95	; 149
     86e:	71 e0       	ldi	r23, 0x01	; 1
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     878:	89 2b       	or	r24, r25
     87a:	41 f4       	brne	.+16     	; 0x88c <listen+0xfe>
			setLightMin(newValue);
     87c:	c6 01       	movw	r24, r12
     87e:	0e 94 ca 01 	call	0x394	; 0x394 <setLightMin>
			printf("2:\r\n");
     882:	88 e8       	ldi	r24, 0x88	; 136
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     88a:	85 c0       	rjmp	.+266    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_light_threshold_maximum") == 0) {
     88c:	61 eb       	ldi	r22, 0xB1	; 177
     88e:	71 e0       	ldi	r23, 0x01	; 1
     890:	ce 01       	movw	r24, r28
     892:	01 96       	adiw	r24, 0x01	; 1
     894:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     898:	89 2b       	or	r24, r25
     89a:	41 f4       	brne	.+16     	; 0x8ac <listen+0x11e>
			setLightMax(newValue);
     89c:	c6 01       	movw	r24, r12
     89e:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <setLightMax>
			printf("2:\r\n");
     8a2:	88 e8       	ldi	r24, 0x88	; 136
     8a4:	91 e0       	ldi	r25, 0x01	; 1
     8a6:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     8aa:	75 c0       	rjmp	.+234    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_temperature_threshold_minimum") == 0) {
     8ac:	6d ec       	ldi	r22, 0xCD	; 205
     8ae:	71 e0       	ldi	r23, 0x01	; 1
     8b0:	ce 01       	movw	r24, r28
     8b2:	01 96       	adiw	r24, 0x01	; 1
     8b4:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     8b8:	89 2b       	or	r24, r25
     8ba:	41 f4       	brne	.+16     	; 0x8cc <listen+0x13e>
			setTempMin(newValue);
     8bc:	c6 01       	movw	r24, r12
     8be:	0e 94 be 01 	call	0x37c	; 0x37c <setTempMin>
			printf("2:\r\n");
     8c2:	88 e8       	ldi	r24, 0x88	; 136
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     8ca:	65 c0       	rjmp	.+202    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_temperature_threshold_maximum") == 0) {
     8cc:	6f ee       	ldi	r22, 0xEF	; 239
     8ce:	71 e0       	ldi	r23, 0x01	; 1
     8d0:	ce 01       	movw	r24, r28
     8d2:	01 96       	adiw	r24, 0x01	; 1
     8d4:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     8d8:	89 2b       	or	r24, r25
     8da:	41 f4       	brne	.+16     	; 0x8ec <listen+0x15e>
			setTempMax(newValue);
     8dc:	c6 01       	movw	r24, r12
     8de:	0e 94 c4 01 	call	0x388	; 0x388 <setTempMax>
			printf("2:\r\n");
     8e2:	88 e8       	ldi	r24, 0x88	; 136
     8e4:	91 e0       	ldi	r25, 0x01	; 1
     8e6:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     8ea:	55 c0       	rjmp	.+170    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_max_distance") == 0) {
     8ec:	61 e1       	ldi	r22, 0x11	; 17
     8ee:	72 e0       	ldi	r23, 0x02	; 2
     8f0:	ce 01       	movw	r24, r28
     8f2:	01 96       	adiw	r24, 0x01	; 1
     8f4:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     8f8:	89 2b       	or	r24, r25
     8fa:	41 f4       	brne	.+16     	; 0x90c <__stack+0xd>
			setDistanceMax(newValue);
     8fc:	c6 01       	movw	r24, r12
     8fe:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <setDistanceMax>
			printf("2:\r\n");
     902:	88 e8       	ldi	r24, 0x88	; 136
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     90a:	45 c0       	rjmp	.+138    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"handshake") == 0) {
     90c:	62 e2       	ldi	r22, 0x22	; 34
     90e:	72 e0       	ldi	r23, 0x02	; 2
     910:	ce 01       	movw	r24, r28
     912:	01 96       	adiw	r24, 0x01	; 1
     914:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     918:	89 2b       	or	r24, r25
     91a:	19 f4       	brne	.+6      	; 0x922 <__stack+0x23>
			get_config();
     91c:	0e 94 2c 02 	call	0x458	; 0x458 <get_config>
     920:	3a c0       	rjmp	.+116    	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_mode_automatic") == 0) {
     922:	6c e2       	ldi	r22, 0x2C	; 44
     924:	72 e0       	ldi	r23, 0x02	; 2
     926:	ce 01       	movw	r24, r28
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     92e:	89 2b       	or	r24, r25
     930:	49 f4       	brne	.+18     	; 0x944 <__stack+0x45>
			setMode(0);
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 b8 01 	call	0x370	; 0x370 <setMode>
			printf("2:\r\n");
     93a:	88 e8       	ldi	r24, 0x88	; 136
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     942:	29 c0       	rjmp	.+82     	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, 	"set_mode_manual") == 0) {
     944:	6f e3       	ldi	r22, 0x3F	; 63
     946:	72 e0       	ldi	r23, 0x02	; 2
     948:	ce 01       	movw	r24, r28
     94a:	01 96       	adiw	r24, 0x01	; 1
     94c:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     950:	89 2b       	or	r24, r25
     952:	49 f4       	brne	.+18     	; 0x966 <__stack+0x67>
			setMode(1);
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	0e 94 b8 01 	call	0x370	; 0x370 <setMode>
			printf("2:\r\n");
     95c:	88 e8       	ldi	r24, 0x88	; 136
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     964:	18 c0       	rjmp	.+48     	; 0x996 <__stack+0x97>
		} else if (strcmp(&input, "set_device_name") == 0) {
     966:	6f e4       	ldi	r22, 0x4F	; 79
     968:	72 e0       	ldi	r23, 0x02	; 2
     96a:	ce 01       	movw	r24, r28
     96c:	01 96       	adiw	r24, 0x01	; 1
     96e:	0e 94 22 06 	call	0xc44	; 0xc44 <strcmp>
     972:	89 2b       	or	r24, r25
     974:	41 f4       	brne	.+16     	; 0x986 <__stack+0x87>
			setDeviceName(value);
     976:	c8 01       	movw	r24, r16
     978:	0e 94 d6 01 	call	0x3ac	; 0x3ac <setDeviceName>
			printf("2:\r\n");
     97c:	88 e8       	ldi	r24, 0x88	; 136
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 50 06 	call	0xca0	; 0xca0 <puts>
     984:	08 c0       	rjmp	.+16     	; 0x996 <__stack+0x97>
		} else {
			printf("4:unkown_command \r");
     986:	8f e5       	ldi	r24, 0x5F	; 95
     988:	92 e0       	ldi	r25, 0x02	; 2
     98a:	9f 93       	push	r25
     98c:	8f 93       	push	r24
     98e:	0e 94 3a 06 	call	0xc74	; 0xc74 <printf>
     992:	0f 90       	pop	r0
     994:	0f 90       	pop	r0
		}
	}
}
     996:	a8 96       	adiw	r28, 0x28	; 40
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	f8 94       	cli
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	0f be       	out	0x3f, r0	; 63
     9a0:	cd bf       	out	0x3d, r28	; 61
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	cf 90       	pop	r12
     9b2:	08 95       	ret

000009b4 <main>:

/************************************************************************/
/* Main function. Inits all the components of the application and runs the application
/************************************************************************/
int main() {
	ser_init();
     9b4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <ser_init>
	adc_init();
     9b8:	0e 94 ff 02 	call	0x5fe	; 0x5fe <adc_init>
	init_timer();
     9bc:	0e 94 37 03 	call	0x66e	; 0x66e <init_timer>
	initPanel();
     9c0:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <initPanel>
	initEEPROM();
     9c4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <initEEPROM>
	//panelUp();
	
	while (1) {
		//Send_signal();
		//SCH_Dispatch_Tasks();
		listen();
     9c8:	0e 94 c7 03 	call	0x78e	; 0x78e <listen>
		run();
     9cc:	0e 94 47 03 	call	0x68e	; 0x68e <run>
     9d0:	fb cf       	rjmp	.-10     	; 0x9c8 <main+0x14>

000009d2 <__umulhisi3>:
     9d2:	a2 9f       	mul	r26, r18
     9d4:	b0 01       	movw	r22, r0
     9d6:	b3 9f       	mul	r27, r19
     9d8:	c0 01       	movw	r24, r0
     9da:	a3 9f       	mul	r26, r19
     9dc:	70 0d       	add	r23, r0
     9de:	81 1d       	adc	r24, r1
     9e0:	11 24       	eor	r1, r1
     9e2:	91 1d       	adc	r25, r1
     9e4:	b2 9f       	mul	r27, r18
     9e6:	70 0d       	add	r23, r0
     9e8:	81 1d       	adc	r24, r1
     9ea:	11 24       	eor	r1, r1
     9ec:	91 1d       	adc	r25, r1
     9ee:	08 95       	ret

000009f0 <strtol>:
     9f0:	a0 e0       	ldi	r26, 0x00	; 0
     9f2:	b0 e0       	ldi	r27, 0x00	; 0
     9f4:	ee ef       	ldi	r30, 0xFE	; 254
     9f6:	f4 e0       	ldi	r31, 0x04	; 4
     9f8:	0c 94 85 09 	jmp	0x130a	; 0x130a <__prologue_saves__+0x2>
     9fc:	5c 01       	movw	r10, r24
     9fe:	6b 01       	movw	r12, r22
     a00:	7a 01       	movw	r14, r20
     a02:	61 15       	cp	r22, r1
     a04:	71 05       	cpc	r23, r1
     a06:	19 f0       	breq	.+6      	; 0xa0e <strtol+0x1e>
     a08:	fb 01       	movw	r30, r22
     a0a:	91 83       	std	Z+1, r25	; 0x01
     a0c:	80 83       	st	Z, r24
     a0e:	e1 14       	cp	r14, r1
     a10:	f1 04       	cpc	r15, r1
     a12:	29 f0       	breq	.+10     	; 0xa1e <strtol+0x2e>
     a14:	c7 01       	movw	r24, r14
     a16:	02 97       	sbiw	r24, 0x02	; 2
     a18:	83 97       	sbiw	r24, 0x23	; 35
     a1a:	08 f0       	brcs	.+2      	; 0xa1e <strtol+0x2e>
     a1c:	e5 c0       	rjmp	.+458    	; 0xbe8 <strtol+0x1f8>
     a1e:	e5 01       	movw	r28, r10
     a20:	21 96       	adiw	r28, 0x01	; 1
     a22:	f5 01       	movw	r30, r10
     a24:	10 81       	ld	r17, Z
     a26:	81 2f       	mov	r24, r17
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <isspace>
     a2e:	89 2b       	or	r24, r25
     a30:	11 f0       	breq	.+4      	; 0xa36 <strtol+0x46>
     a32:	5e 01       	movw	r10, r28
     a34:	f4 cf       	rjmp	.-24     	; 0xa1e <strtol+0x2e>
     a36:	1d 32       	cpi	r17, 0x2D	; 45
     a38:	29 f4       	brne	.+10     	; 0xa44 <strtol+0x54>
     a3a:	21 96       	adiw	r28, 0x01	; 1
     a3c:	f5 01       	movw	r30, r10
     a3e:	11 81       	ldd	r17, Z+1	; 0x01
     a40:	01 e0       	ldi	r16, 0x01	; 1
     a42:	07 c0       	rjmp	.+14     	; 0xa52 <strtol+0x62>
     a44:	1b 32       	cpi	r17, 0x2B	; 43
     a46:	21 f4       	brne	.+8      	; 0xa50 <strtol+0x60>
     a48:	e5 01       	movw	r28, r10
     a4a:	22 96       	adiw	r28, 0x02	; 2
     a4c:	f5 01       	movw	r30, r10
     a4e:	11 81       	ldd	r17, Z+1	; 0x01
     a50:	00 e0       	ldi	r16, 0x00	; 0
     a52:	e1 14       	cp	r14, r1
     a54:	f1 04       	cpc	r15, r1
     a56:	09 f1       	breq	.+66     	; 0xa9a <strtol+0xaa>
     a58:	f0 e1       	ldi	r31, 0x10	; 16
     a5a:	ef 16       	cp	r14, r31
     a5c:	f1 04       	cpc	r15, r1
     a5e:	29 f4       	brne	.+10     	; 0xa6a <strtol+0x7a>
     a60:	3f c0       	rjmp	.+126    	; 0xae0 <strtol+0xf0>
     a62:	10 e3       	ldi	r17, 0x30	; 48
     a64:	e1 14       	cp	r14, r1
     a66:	f1 04       	cpc	r15, r1
     a68:	21 f1       	breq	.+72     	; 0xab2 <strtol+0xc2>
     a6a:	28 e0       	ldi	r18, 0x08	; 8
     a6c:	e2 16       	cp	r14, r18
     a6e:	f1 04       	cpc	r15, r1
     a70:	01 f1       	breq	.+64     	; 0xab2 <strtol+0xc2>
     a72:	54 f4       	brge	.+20     	; 0xa88 <strtol+0x98>
     a74:	e2 e0       	ldi	r30, 0x02	; 2
     a76:	ee 16       	cp	r14, r30
     a78:	f1 04       	cpc	r15, r1
     a7a:	21 f5       	brne	.+72     	; 0xac4 <strtol+0xd4>
     a7c:	81 2c       	mov	r8, r1
     a7e:	91 2c       	mov	r9, r1
     a80:	a1 2c       	mov	r10, r1
     a82:	b0 e4       	ldi	r27, 0x40	; 64
     a84:	bb 2e       	mov	r11, r27
     a86:	3e c0       	rjmp	.+124    	; 0xb04 <strtol+0x114>
     a88:	fa e0       	ldi	r31, 0x0A	; 10
     a8a:	ef 16       	cp	r14, r31
     a8c:	f1 04       	cpc	r15, r1
     a8e:	39 f0       	breq	.+14     	; 0xa9e <strtol+0xae>
     a90:	20 e1       	ldi	r18, 0x10	; 16
     a92:	e2 16       	cp	r14, r18
     a94:	f1 04       	cpc	r15, r1
     a96:	b1 f4       	brne	.+44     	; 0xac4 <strtol+0xd4>
     a98:	30 c0       	rjmp	.+96     	; 0xafa <strtol+0x10a>
     a9a:	10 33       	cpi	r17, 0x30	; 48
     a9c:	19 f1       	breq	.+70     	; 0xae4 <strtol+0xf4>
     a9e:	fa e0       	ldi	r31, 0x0A	; 10
     aa0:	ef 2e       	mov	r14, r31
     aa2:	f1 2c       	mov	r15, r1
     aa4:	ac ec       	ldi	r26, 0xCC	; 204
     aa6:	8a 2e       	mov	r8, r26
     aa8:	98 2c       	mov	r9, r8
     aaa:	a8 2c       	mov	r10, r8
     aac:	ac e0       	ldi	r26, 0x0C	; 12
     aae:	ba 2e       	mov	r11, r26
     ab0:	29 c0       	rjmp	.+82     	; 0xb04 <strtol+0x114>
     ab2:	78 e0       	ldi	r23, 0x08	; 8
     ab4:	e7 2e       	mov	r14, r23
     ab6:	f1 2c       	mov	r15, r1
     ab8:	81 2c       	mov	r8, r1
     aba:	91 2c       	mov	r9, r1
     abc:	a1 2c       	mov	r10, r1
     abe:	e0 e1       	ldi	r30, 0x10	; 16
     ac0:	be 2e       	mov	r11, r30
     ac2:	20 c0       	rjmp	.+64     	; 0xb04 <strtol+0x114>
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e8       	ldi	r25, 0x80	; 128
     acc:	97 01       	movw	r18, r14
     ace:	0f 2c       	mov	r0, r15
     ad0:	00 0c       	add	r0, r0
     ad2:	44 0b       	sbc	r20, r20
     ad4:	55 0b       	sbc	r21, r21
     ad6:	0e 94 57 09 	call	0x12ae	; 0x12ae <__udivmodsi4>
     ada:	49 01       	movw	r8, r18
     adc:	5a 01       	movw	r10, r20
     ade:	12 c0       	rjmp	.+36     	; 0xb04 <strtol+0x114>
     ae0:	10 33       	cpi	r17, 0x30	; 48
     ae2:	59 f4       	brne	.+22     	; 0xafa <strtol+0x10a>
     ae4:	88 81       	ld	r24, Y
     ae6:	8f 7d       	andi	r24, 0xDF	; 223
     ae8:	88 35       	cpi	r24, 0x58	; 88
     aea:	09 f0       	breq	.+2      	; 0xaee <strtol+0xfe>
     aec:	ba cf       	rjmp	.-140    	; 0xa62 <strtol+0x72>
     aee:	19 81       	ldd	r17, Y+1	; 0x01
     af0:	22 96       	adiw	r28, 0x02	; 2
     af2:	02 60       	ori	r16, 0x02	; 2
     af4:	80 e1       	ldi	r24, 0x10	; 16
     af6:	e8 2e       	mov	r14, r24
     af8:	f1 2c       	mov	r15, r1
     afa:	81 2c       	mov	r8, r1
     afc:	91 2c       	mov	r9, r1
     afe:	a1 2c       	mov	r10, r1
     b00:	68 e0       	ldi	r22, 0x08	; 8
     b02:	b6 2e       	mov	r11, r22
     b04:	40 e0       	ldi	r20, 0x00	; 0
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	cb 01       	movw	r24, r22
     b0c:	27 01       	movw	r4, r14
     b0e:	0f 2c       	mov	r0, r15
     b10:	00 0c       	add	r0, r0
     b12:	66 08       	sbc	r6, r6
     b14:	77 08       	sbc	r7, r7
     b16:	fe 01       	movw	r30, r28
     b18:	50 ed       	ldi	r21, 0xD0	; 208
     b1a:	35 2e       	mov	r3, r21
     b1c:	31 0e       	add	r3, r17
     b1e:	29 e0       	ldi	r18, 0x09	; 9
     b20:	23 15       	cp	r18, r3
     b22:	70 f4       	brcc	.+28     	; 0xb40 <strtol+0x150>
     b24:	2f eb       	ldi	r18, 0xBF	; 191
     b26:	21 0f       	add	r18, r17
     b28:	2a 31       	cpi	r18, 0x1A	; 26
     b2a:	18 f4       	brcc	.+6      	; 0xb32 <strtol+0x142>
     b2c:	39 ec       	ldi	r19, 0xC9	; 201
     b2e:	33 2e       	mov	r3, r19
     b30:	06 c0       	rjmp	.+12     	; 0xb3e <strtol+0x14e>
     b32:	2f e9       	ldi	r18, 0x9F	; 159
     b34:	21 0f       	add	r18, r17
     b36:	2a 31       	cpi	r18, 0x1A	; 26
     b38:	18 f5       	brcc	.+70     	; 0xb80 <strtol+0x190>
     b3a:	29 ea       	ldi	r18, 0xA9	; 169
     b3c:	32 2e       	mov	r3, r18
     b3e:	31 0e       	add	r3, r17
     b40:	23 2d       	mov	r18, r3
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	2e 15       	cp	r18, r14
     b46:	3f 05       	cpc	r19, r15
     b48:	dc f4       	brge	.+54     	; 0xb80 <strtol+0x190>
     b4a:	47 fd       	sbrc	r20, 7
     b4c:	16 c0       	rjmp	.+44     	; 0xb7a <strtol+0x18a>
     b4e:	86 16       	cp	r8, r22
     b50:	97 06       	cpc	r9, r23
     b52:	a8 06       	cpc	r10, r24
     b54:	b9 06       	cpc	r11, r25
     b56:	70 f0       	brcs	.+28     	; 0xb74 <strtol+0x184>
     b58:	a3 01       	movw	r20, r6
     b5a:	92 01       	movw	r18, r4
     b5c:	0e 94 47 09 	call	0x128e	; 0x128e <__mulsi3>
     b60:	63 0d       	add	r22, r3
     b62:	71 1d       	adc	r23, r1
     b64:	81 1d       	adc	r24, r1
     b66:	91 1d       	adc	r25, r1
     b68:	61 30       	cpi	r22, 0x01	; 1
     b6a:	71 05       	cpc	r23, r1
     b6c:	81 05       	cpc	r24, r1
     b6e:	20 e8       	ldi	r18, 0x80	; 128
     b70:	92 07       	cpc	r25, r18
     b72:	10 f0       	brcs	.+4      	; 0xb78 <strtol+0x188>
     b74:	4f ef       	ldi	r20, 0xFF	; 255
     b76:	01 c0       	rjmp	.+2      	; 0xb7a <strtol+0x18a>
     b78:	41 e0       	ldi	r20, 0x01	; 1
     b7a:	21 96       	adiw	r28, 0x01	; 1
     b7c:	10 81       	ld	r17, Z
     b7e:	cb cf       	rjmp	.-106    	; 0xb16 <strtol+0x126>
     b80:	20 2f       	mov	r18, r16
     b82:	21 70       	andi	r18, 0x01	; 1
     b84:	c1 14       	cp	r12, r1
     b86:	d1 04       	cpc	r13, r1
     b88:	71 f0       	breq	.+28     	; 0xba6 <strtol+0x1b6>
     b8a:	44 23       	and	r20, r20
     b8c:	29 f0       	breq	.+10     	; 0xb98 <strtol+0x1a8>
     b8e:	21 97       	sbiw	r28, 0x01	; 1
     b90:	f6 01       	movw	r30, r12
     b92:	d1 83       	std	Z+1, r29	; 0x01
     b94:	c0 83       	st	Z, r28
     b96:	07 c0       	rjmp	.+14     	; 0xba6 <strtol+0x1b6>
     b98:	01 ff       	sbrs	r16, 1
     b9a:	19 c0       	rjmp	.+50     	; 0xbce <strtol+0x1de>
     b9c:	22 97       	sbiw	r28, 0x02	; 2
     b9e:	f6 01       	movw	r30, r12
     ba0:	d1 83       	std	Z+1, r29	; 0x01
     ba2:	c0 83       	st	Z, r28
     ba4:	14 c0       	rjmp	.+40     	; 0xbce <strtol+0x1de>
     ba6:	47 ff       	sbrs	r20, 7
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <strtol+0x1de>
     baa:	22 23       	and	r18, r18
     bac:	29 f0       	breq	.+10     	; 0xbb8 <strtol+0x1c8>
     bae:	60 e0       	ldi	r22, 0x00	; 0
     bb0:	70 e0       	ldi	r23, 0x00	; 0
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e8       	ldi	r25, 0x80	; 128
     bb6:	04 c0       	rjmp	.+8      	; 0xbc0 <strtol+0x1d0>
     bb8:	6f ef       	ldi	r22, 0xFF	; 255
     bba:	7f ef       	ldi	r23, 0xFF	; 255
     bbc:	8f ef       	ldi	r24, 0xFF	; 255
     bbe:	9f e7       	ldi	r25, 0x7F	; 127
     bc0:	22 e2       	ldi	r18, 0x22	; 34
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	30 93 a5 02 	sts	0x02A5, r19	; 0x8002a5 <errno+0x1>
     bc8:	20 93 a4 02 	sts	0x02A4, r18	; 0x8002a4 <errno>
     bcc:	09 c0       	rjmp	.+18     	; 0xbe0 <strtol+0x1f0>
     bce:	22 23       	and	r18, r18
     bd0:	81 f0       	breq	.+32     	; 0xbf2 <strtol+0x202>
     bd2:	90 95       	com	r25
     bd4:	80 95       	com	r24
     bd6:	70 95       	com	r23
     bd8:	61 95       	neg	r22
     bda:	7f 4f       	sbci	r23, 0xFF	; 255
     bdc:	8f 4f       	sbci	r24, 0xFF	; 255
     bde:	9f 4f       	sbci	r25, 0xFF	; 255
     be0:	46 2f       	mov	r20, r22
     be2:	37 2f       	mov	r19, r23
     be4:	28 2f       	mov	r18, r24
     be6:	12 c0       	rjmp	.+36     	; 0xc0c <strtol+0x21c>
     be8:	40 e0       	ldi	r20, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0d c0       	rjmp	.+26     	; 0xc0c <strtol+0x21c>
     bf2:	97 ff       	sbrs	r25, 7
     bf4:	f5 cf       	rjmp	.-22     	; 0xbe0 <strtol+0x1f0>
     bf6:	82 e2       	ldi	r24, 0x22	; 34
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <errno+0x1>
     bfe:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <errno>
     c02:	6f ef       	ldi	r22, 0xFF	; 255
     c04:	7f ef       	ldi	r23, 0xFF	; 255
     c06:	8f ef       	ldi	r24, 0xFF	; 255
     c08:	9f e7       	ldi	r25, 0x7F	; 127
     c0a:	ea cf       	rjmp	.-44     	; 0xbe0 <strtol+0x1f0>
     c0c:	64 2f       	mov	r22, r20
     c0e:	73 2f       	mov	r23, r19
     c10:	82 2f       	mov	r24, r18
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62
     c16:	e1 e1       	ldi	r30, 0x11	; 17
     c18:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__epilogue_restores__+0x2>

00000c1c <isspace>:
     c1c:	91 11       	cpse	r25, r1
     c1e:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__ctype_isfalse>
     c22:	80 32       	cpi	r24, 0x20	; 32
     c24:	19 f0       	breq	.+6      	; 0xc2c <isspace+0x10>
     c26:	89 50       	subi	r24, 0x09	; 9
     c28:	85 50       	subi	r24, 0x05	; 5
     c2a:	c8 f7       	brcc	.-14     	; 0xc1e <isspace+0x2>
     c2c:	08 95       	ret

00000c2e <strchr>:
     c2e:	fc 01       	movw	r30, r24
     c30:	81 91       	ld	r24, Z+
     c32:	86 17       	cp	r24, r22
     c34:	21 f0       	breq	.+8      	; 0xc3e <strchr+0x10>
     c36:	88 23       	and	r24, r24
     c38:	d9 f7       	brne	.-10     	; 0xc30 <strchr+0x2>
     c3a:	99 27       	eor	r25, r25
     c3c:	08 95       	ret
     c3e:	31 97       	sbiw	r30, 0x01	; 1
     c40:	cf 01       	movw	r24, r30
     c42:	08 95       	ret

00000c44 <strcmp>:
     c44:	fb 01       	movw	r30, r22
     c46:	dc 01       	movw	r26, r24
     c48:	8d 91       	ld	r24, X+
     c4a:	01 90       	ld	r0, Z+
     c4c:	80 19       	sub	r24, r0
     c4e:	01 10       	cpse	r0, r1
     c50:	d9 f3       	breq	.-10     	; 0xc48 <strcmp+0x4>
     c52:	99 0b       	sbc	r25, r25
     c54:	08 95       	ret

00000c56 <strncpy>:
     c56:	fb 01       	movw	r30, r22
     c58:	dc 01       	movw	r26, r24
     c5a:	41 50       	subi	r20, 0x01	; 1
     c5c:	50 40       	sbci	r21, 0x00	; 0
     c5e:	48 f0       	brcs	.+18     	; 0xc72 <strncpy+0x1c>
     c60:	01 90       	ld	r0, Z+
     c62:	0d 92       	st	X+, r0
     c64:	00 20       	and	r0, r0
     c66:	c9 f7       	brne	.-14     	; 0xc5a <strncpy+0x4>
     c68:	01 c0       	rjmp	.+2      	; 0xc6c <strncpy+0x16>
     c6a:	1d 92       	st	X+, r1
     c6c:	41 50       	subi	r20, 0x01	; 1
     c6e:	50 40       	sbci	r21, 0x00	; 0
     c70:	e0 f7       	brcc	.-8      	; 0xc6a <strncpy+0x14>
     c72:	08 95       	ret

00000c74 <printf>:
     c74:	a0 e0       	ldi	r26, 0x00	; 0
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	e0 e4       	ldi	r30, 0x40	; 64
     c7a:	f6 e0       	ldi	r31, 0x06	; 6
     c7c:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__prologue_saves__+0x20>
     c80:	ae 01       	movw	r20, r28
     c82:	4b 5f       	subi	r20, 0xFB	; 251
     c84:	5f 4f       	sbci	r21, 0xFF	; 255
     c86:	fa 01       	movw	r30, r20
     c88:	61 91       	ld	r22, Z+
     c8a:	71 91       	ld	r23, Z+
     c8c:	af 01       	movw	r20, r30
     c8e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__iob+0x2>
     c92:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <__iob+0x3>
     c96:	0e 94 80 06 	call	0xd00	; 0xd00 <vfprintf>
     c9a:	e2 e0       	ldi	r30, 0x02	; 2
     c9c:	0c 94 b0 09 	jmp	0x1360	; 0x1360 <__epilogue_restores__+0x20>

00000ca0 <puts>:
     ca0:	0f 93       	push	r16
     ca2:	1f 93       	push	r17
     ca4:	cf 93       	push	r28
     ca6:	df 93       	push	r29
     ca8:	e0 91 a0 02 	lds	r30, 0x02A0	; 0x8002a0 <__iob+0x2>
     cac:	f0 91 a1 02 	lds	r31, 0x02A1	; 0x8002a1 <__iob+0x3>
     cb0:	23 81       	ldd	r18, Z+3	; 0x03
     cb2:	21 ff       	sbrs	r18, 1
     cb4:	1b c0       	rjmp	.+54     	; 0xcec <puts+0x4c>
     cb6:	8c 01       	movw	r16, r24
     cb8:	d0 e0       	ldi	r29, 0x00	; 0
     cba:	c0 e0       	ldi	r28, 0x00	; 0
     cbc:	f8 01       	movw	r30, r16
     cbe:	81 91       	ld	r24, Z+
     cc0:	8f 01       	movw	r16, r30
     cc2:	60 91 a0 02 	lds	r22, 0x02A0	; 0x8002a0 <__iob+0x2>
     cc6:	70 91 a1 02 	lds	r23, 0x02A1	; 0x8002a1 <__iob+0x3>
     cca:	db 01       	movw	r26, r22
     ccc:	18 96       	adiw	r26, 0x08	; 8
     cce:	ed 91       	ld	r30, X+
     cd0:	fc 91       	ld	r31, X
     cd2:	19 97       	sbiw	r26, 0x09	; 9
     cd4:	88 23       	and	r24, r24
     cd6:	31 f0       	breq	.+12     	; 0xce4 <puts+0x44>
     cd8:	09 95       	icall
     cda:	89 2b       	or	r24, r25
     cdc:	79 f3       	breq	.-34     	; 0xcbc <puts+0x1c>
     cde:	df ef       	ldi	r29, 0xFF	; 255
     ce0:	cf ef       	ldi	r28, 0xFF	; 255
     ce2:	ec cf       	rjmp	.-40     	; 0xcbc <puts+0x1c>
     ce4:	8a e0       	ldi	r24, 0x0A	; 10
     ce6:	09 95       	icall
     ce8:	89 2b       	or	r24, r25
     cea:	19 f0       	breq	.+6      	; 0xcf2 <puts+0x52>
     cec:	8f ef       	ldi	r24, 0xFF	; 255
     cee:	9f ef       	ldi	r25, 0xFF	; 255
     cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <puts+0x56>
     cf2:	8d 2f       	mov	r24, r29
     cf4:	9c 2f       	mov	r25, r28
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	1f 91       	pop	r17
     cfc:	0f 91       	pop	r16
     cfe:	08 95       	ret

00000d00 <vfprintf>:
     d00:	ab e0       	ldi	r26, 0x0B	; 11
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	e6 e8       	ldi	r30, 0x86	; 134
     d06:	f6 e0       	ldi	r31, 0x06	; 6
     d08:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__prologue_saves__>
     d0c:	6c 01       	movw	r12, r24
     d0e:	7b 01       	movw	r14, r22
     d10:	8a 01       	movw	r16, r20
     d12:	fc 01       	movw	r30, r24
     d14:	17 82       	std	Z+7, r1	; 0x07
     d16:	16 82       	std	Z+6, r1	; 0x06
     d18:	83 81       	ldd	r24, Z+3	; 0x03
     d1a:	81 ff       	sbrs	r24, 1
     d1c:	cc c1       	rjmp	.+920    	; 0x10b6 <vfprintf+0x3b6>
     d1e:	ce 01       	movw	r24, r28
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	3c 01       	movw	r6, r24
     d24:	f6 01       	movw	r30, r12
     d26:	93 81       	ldd	r25, Z+3	; 0x03
     d28:	f7 01       	movw	r30, r14
     d2a:	93 fd       	sbrc	r25, 3
     d2c:	85 91       	lpm	r24, Z+
     d2e:	93 ff       	sbrs	r25, 3
     d30:	81 91       	ld	r24, Z+
     d32:	7f 01       	movw	r14, r30
     d34:	88 23       	and	r24, r24
     d36:	09 f4       	brne	.+2      	; 0xd3a <vfprintf+0x3a>
     d38:	ba c1       	rjmp	.+884    	; 0x10ae <vfprintf+0x3ae>
     d3a:	85 32       	cpi	r24, 0x25	; 37
     d3c:	39 f4       	brne	.+14     	; 0xd4c <vfprintf+0x4c>
     d3e:	93 fd       	sbrc	r25, 3
     d40:	85 91       	lpm	r24, Z+
     d42:	93 ff       	sbrs	r25, 3
     d44:	81 91       	ld	r24, Z+
     d46:	7f 01       	movw	r14, r30
     d48:	85 32       	cpi	r24, 0x25	; 37
     d4a:	29 f4       	brne	.+10     	; 0xd56 <vfprintf+0x56>
     d4c:	b6 01       	movw	r22, r12
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
     d54:	e7 cf       	rjmp	.-50     	; 0xd24 <vfprintf+0x24>
     d56:	91 2c       	mov	r9, r1
     d58:	21 2c       	mov	r2, r1
     d5a:	31 2c       	mov	r3, r1
     d5c:	ff e1       	ldi	r31, 0x1F	; 31
     d5e:	f3 15       	cp	r31, r3
     d60:	d8 f0       	brcs	.+54     	; 0xd98 <vfprintf+0x98>
     d62:	8b 32       	cpi	r24, 0x2B	; 43
     d64:	79 f0       	breq	.+30     	; 0xd84 <vfprintf+0x84>
     d66:	38 f4       	brcc	.+14     	; 0xd76 <vfprintf+0x76>
     d68:	80 32       	cpi	r24, 0x20	; 32
     d6a:	79 f0       	breq	.+30     	; 0xd8a <vfprintf+0x8a>
     d6c:	83 32       	cpi	r24, 0x23	; 35
     d6e:	a1 f4       	brne	.+40     	; 0xd98 <vfprintf+0x98>
     d70:	23 2d       	mov	r18, r3
     d72:	20 61       	ori	r18, 0x10	; 16
     d74:	1d c0       	rjmp	.+58     	; 0xdb0 <vfprintf+0xb0>
     d76:	8d 32       	cpi	r24, 0x2D	; 45
     d78:	61 f0       	breq	.+24     	; 0xd92 <vfprintf+0x92>
     d7a:	80 33       	cpi	r24, 0x30	; 48
     d7c:	69 f4       	brne	.+26     	; 0xd98 <vfprintf+0x98>
     d7e:	23 2d       	mov	r18, r3
     d80:	21 60       	ori	r18, 0x01	; 1
     d82:	16 c0       	rjmp	.+44     	; 0xdb0 <vfprintf+0xb0>
     d84:	83 2d       	mov	r24, r3
     d86:	82 60       	ori	r24, 0x02	; 2
     d88:	38 2e       	mov	r3, r24
     d8a:	e3 2d       	mov	r30, r3
     d8c:	e4 60       	ori	r30, 0x04	; 4
     d8e:	3e 2e       	mov	r3, r30
     d90:	2a c0       	rjmp	.+84     	; 0xde6 <vfprintf+0xe6>
     d92:	f3 2d       	mov	r31, r3
     d94:	f8 60       	ori	r31, 0x08	; 8
     d96:	1d c0       	rjmp	.+58     	; 0xdd2 <vfprintf+0xd2>
     d98:	37 fc       	sbrc	r3, 7
     d9a:	2d c0       	rjmp	.+90     	; 0xdf6 <vfprintf+0xf6>
     d9c:	20 ed       	ldi	r18, 0xD0	; 208
     d9e:	28 0f       	add	r18, r24
     da0:	2a 30       	cpi	r18, 0x0A	; 10
     da2:	40 f0       	brcs	.+16     	; 0xdb4 <vfprintf+0xb4>
     da4:	8e 32       	cpi	r24, 0x2E	; 46
     da6:	b9 f4       	brne	.+46     	; 0xdd6 <vfprintf+0xd6>
     da8:	36 fc       	sbrc	r3, 6
     daa:	81 c1       	rjmp	.+770    	; 0x10ae <vfprintf+0x3ae>
     dac:	23 2d       	mov	r18, r3
     dae:	20 64       	ori	r18, 0x40	; 64
     db0:	32 2e       	mov	r3, r18
     db2:	19 c0       	rjmp	.+50     	; 0xde6 <vfprintf+0xe6>
     db4:	36 fe       	sbrs	r3, 6
     db6:	06 c0       	rjmp	.+12     	; 0xdc4 <vfprintf+0xc4>
     db8:	8a e0       	ldi	r24, 0x0A	; 10
     dba:	98 9e       	mul	r9, r24
     dbc:	20 0d       	add	r18, r0
     dbe:	11 24       	eor	r1, r1
     dc0:	92 2e       	mov	r9, r18
     dc2:	11 c0       	rjmp	.+34     	; 0xde6 <vfprintf+0xe6>
     dc4:	ea e0       	ldi	r30, 0x0A	; 10
     dc6:	2e 9e       	mul	r2, r30
     dc8:	20 0d       	add	r18, r0
     dca:	11 24       	eor	r1, r1
     dcc:	22 2e       	mov	r2, r18
     dce:	f3 2d       	mov	r31, r3
     dd0:	f0 62       	ori	r31, 0x20	; 32
     dd2:	3f 2e       	mov	r3, r31
     dd4:	08 c0       	rjmp	.+16     	; 0xde6 <vfprintf+0xe6>
     dd6:	8c 36       	cpi	r24, 0x6C	; 108
     dd8:	21 f4       	brne	.+8      	; 0xde2 <vfprintf+0xe2>
     dda:	83 2d       	mov	r24, r3
     ddc:	80 68       	ori	r24, 0x80	; 128
     dde:	38 2e       	mov	r3, r24
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <vfprintf+0xe6>
     de2:	88 36       	cpi	r24, 0x68	; 104
     de4:	41 f4       	brne	.+16     	; 0xdf6 <vfprintf+0xf6>
     de6:	f7 01       	movw	r30, r14
     de8:	93 fd       	sbrc	r25, 3
     dea:	85 91       	lpm	r24, Z+
     dec:	93 ff       	sbrs	r25, 3
     dee:	81 91       	ld	r24, Z+
     df0:	7f 01       	movw	r14, r30
     df2:	81 11       	cpse	r24, r1
     df4:	b3 cf       	rjmp	.-154    	; 0xd5c <vfprintf+0x5c>
     df6:	98 2f       	mov	r25, r24
     df8:	9f 7d       	andi	r25, 0xDF	; 223
     dfa:	95 54       	subi	r25, 0x45	; 69
     dfc:	93 30       	cpi	r25, 0x03	; 3
     dfe:	28 f4       	brcc	.+10     	; 0xe0a <vfprintf+0x10a>
     e00:	0c 5f       	subi	r16, 0xFC	; 252
     e02:	1f 4f       	sbci	r17, 0xFF	; 255
     e04:	9f e3       	ldi	r25, 0x3F	; 63
     e06:	99 83       	std	Y+1, r25	; 0x01
     e08:	0d c0       	rjmp	.+26     	; 0xe24 <vfprintf+0x124>
     e0a:	83 36       	cpi	r24, 0x63	; 99
     e0c:	31 f0       	breq	.+12     	; 0xe1a <vfprintf+0x11a>
     e0e:	83 37       	cpi	r24, 0x73	; 115
     e10:	71 f0       	breq	.+28     	; 0xe2e <vfprintf+0x12e>
     e12:	83 35       	cpi	r24, 0x53	; 83
     e14:	09 f0       	breq	.+2      	; 0xe18 <vfprintf+0x118>
     e16:	59 c0       	rjmp	.+178    	; 0xeca <vfprintf+0x1ca>
     e18:	21 c0       	rjmp	.+66     	; 0xe5c <vfprintf+0x15c>
     e1a:	f8 01       	movw	r30, r16
     e1c:	80 81       	ld	r24, Z
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	0e 5f       	subi	r16, 0xFE	; 254
     e22:	1f 4f       	sbci	r17, 0xFF	; 255
     e24:	88 24       	eor	r8, r8
     e26:	83 94       	inc	r8
     e28:	91 2c       	mov	r9, r1
     e2a:	53 01       	movw	r10, r6
     e2c:	13 c0       	rjmp	.+38     	; 0xe54 <vfprintf+0x154>
     e2e:	28 01       	movw	r4, r16
     e30:	f2 e0       	ldi	r31, 0x02	; 2
     e32:	4f 0e       	add	r4, r31
     e34:	51 1c       	adc	r5, r1
     e36:	f8 01       	movw	r30, r16
     e38:	a0 80       	ld	r10, Z
     e3a:	b1 80       	ldd	r11, Z+1	; 0x01
     e3c:	36 fe       	sbrs	r3, 6
     e3e:	03 c0       	rjmp	.+6      	; 0xe46 <vfprintf+0x146>
     e40:	69 2d       	mov	r22, r9
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <vfprintf+0x14a>
     e46:	6f ef       	ldi	r22, 0xFF	; 255
     e48:	7f ef       	ldi	r23, 0xFF	; 255
     e4a:	c5 01       	movw	r24, r10
     e4c:	0e 94 6f 08 	call	0x10de	; 0x10de <strnlen>
     e50:	4c 01       	movw	r8, r24
     e52:	82 01       	movw	r16, r4
     e54:	f3 2d       	mov	r31, r3
     e56:	ff 77       	andi	r31, 0x7F	; 127
     e58:	3f 2e       	mov	r3, r31
     e5a:	16 c0       	rjmp	.+44     	; 0xe88 <vfprintf+0x188>
     e5c:	28 01       	movw	r4, r16
     e5e:	22 e0       	ldi	r18, 0x02	; 2
     e60:	42 0e       	add	r4, r18
     e62:	51 1c       	adc	r5, r1
     e64:	f8 01       	movw	r30, r16
     e66:	a0 80       	ld	r10, Z
     e68:	b1 80       	ldd	r11, Z+1	; 0x01
     e6a:	36 fe       	sbrs	r3, 6
     e6c:	03 c0       	rjmp	.+6      	; 0xe74 <vfprintf+0x174>
     e6e:	69 2d       	mov	r22, r9
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x178>
     e74:	6f ef       	ldi	r22, 0xFF	; 255
     e76:	7f ef       	ldi	r23, 0xFF	; 255
     e78:	c5 01       	movw	r24, r10
     e7a:	0e 94 64 08 	call	0x10c8	; 0x10c8 <strnlen_P>
     e7e:	4c 01       	movw	r8, r24
     e80:	f3 2d       	mov	r31, r3
     e82:	f0 68       	ori	r31, 0x80	; 128
     e84:	3f 2e       	mov	r3, r31
     e86:	82 01       	movw	r16, r4
     e88:	33 fc       	sbrc	r3, 3
     e8a:	1b c0       	rjmp	.+54     	; 0xec2 <vfprintf+0x1c2>
     e8c:	82 2d       	mov	r24, r2
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	88 16       	cp	r8, r24
     e92:	99 06       	cpc	r9, r25
     e94:	b0 f4       	brcc	.+44     	; 0xec2 <vfprintf+0x1c2>
     e96:	b6 01       	movw	r22, r12
     e98:	80 e2       	ldi	r24, 0x20	; 32
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
     ea0:	2a 94       	dec	r2
     ea2:	f4 cf       	rjmp	.-24     	; 0xe8c <vfprintf+0x18c>
     ea4:	f5 01       	movw	r30, r10
     ea6:	37 fc       	sbrc	r3, 7
     ea8:	85 91       	lpm	r24, Z+
     eaa:	37 fe       	sbrs	r3, 7
     eac:	81 91       	ld	r24, Z+
     eae:	5f 01       	movw	r10, r30
     eb0:	b6 01       	movw	r22, r12
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
     eb8:	21 10       	cpse	r2, r1
     eba:	2a 94       	dec	r2
     ebc:	21 e0       	ldi	r18, 0x01	; 1
     ebe:	82 1a       	sub	r8, r18
     ec0:	91 08       	sbc	r9, r1
     ec2:	81 14       	cp	r8, r1
     ec4:	91 04       	cpc	r9, r1
     ec6:	71 f7       	brne	.-36     	; 0xea4 <vfprintf+0x1a4>
     ec8:	e8 c0       	rjmp	.+464    	; 0x109a <vfprintf+0x39a>
     eca:	84 36       	cpi	r24, 0x64	; 100
     ecc:	11 f0       	breq	.+4      	; 0xed2 <vfprintf+0x1d2>
     ece:	89 36       	cpi	r24, 0x69	; 105
     ed0:	41 f5       	brne	.+80     	; 0xf22 <vfprintf+0x222>
     ed2:	f8 01       	movw	r30, r16
     ed4:	37 fe       	sbrs	r3, 7
     ed6:	07 c0       	rjmp	.+14     	; 0xee6 <vfprintf+0x1e6>
     ed8:	60 81       	ld	r22, Z
     eda:	71 81       	ldd	r23, Z+1	; 0x01
     edc:	82 81       	ldd	r24, Z+2	; 0x02
     ede:	93 81       	ldd	r25, Z+3	; 0x03
     ee0:	0c 5f       	subi	r16, 0xFC	; 252
     ee2:	1f 4f       	sbci	r17, 0xFF	; 255
     ee4:	08 c0       	rjmp	.+16     	; 0xef6 <vfprintf+0x1f6>
     ee6:	60 81       	ld	r22, Z
     ee8:	71 81       	ldd	r23, Z+1	; 0x01
     eea:	07 2e       	mov	r0, r23
     eec:	00 0c       	add	r0, r0
     eee:	88 0b       	sbc	r24, r24
     ef0:	99 0b       	sbc	r25, r25
     ef2:	0e 5f       	subi	r16, 0xFE	; 254
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	f3 2d       	mov	r31, r3
     ef8:	ff 76       	andi	r31, 0x6F	; 111
     efa:	3f 2e       	mov	r3, r31
     efc:	97 ff       	sbrs	r25, 7
     efe:	09 c0       	rjmp	.+18     	; 0xf12 <vfprintf+0x212>
     f00:	90 95       	com	r25
     f02:	80 95       	com	r24
     f04:	70 95       	com	r23
     f06:	61 95       	neg	r22
     f08:	7f 4f       	sbci	r23, 0xFF	; 255
     f0a:	8f 4f       	sbci	r24, 0xFF	; 255
     f0c:	9f 4f       	sbci	r25, 0xFF	; 255
     f0e:	f0 68       	ori	r31, 0x80	; 128
     f10:	3f 2e       	mov	r3, r31
     f12:	2a e0       	ldi	r18, 0x0A	; 10
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	a3 01       	movw	r20, r6
     f18:	0e 94 b6 08 	call	0x116c	; 0x116c <__ultoa_invert>
     f1c:	88 2e       	mov	r8, r24
     f1e:	86 18       	sub	r8, r6
     f20:	45 c0       	rjmp	.+138    	; 0xfac <vfprintf+0x2ac>
     f22:	85 37       	cpi	r24, 0x75	; 117
     f24:	31 f4       	brne	.+12     	; 0xf32 <vfprintf+0x232>
     f26:	23 2d       	mov	r18, r3
     f28:	2f 7e       	andi	r18, 0xEF	; 239
     f2a:	b2 2e       	mov	r11, r18
     f2c:	2a e0       	ldi	r18, 0x0A	; 10
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	25 c0       	rjmp	.+74     	; 0xf7c <vfprintf+0x27c>
     f32:	93 2d       	mov	r25, r3
     f34:	99 7f       	andi	r25, 0xF9	; 249
     f36:	b9 2e       	mov	r11, r25
     f38:	8f 36       	cpi	r24, 0x6F	; 111
     f3a:	c1 f0       	breq	.+48     	; 0xf6c <vfprintf+0x26c>
     f3c:	18 f4       	brcc	.+6      	; 0xf44 <vfprintf+0x244>
     f3e:	88 35       	cpi	r24, 0x58	; 88
     f40:	79 f0       	breq	.+30     	; 0xf60 <vfprintf+0x260>
     f42:	b5 c0       	rjmp	.+362    	; 0x10ae <vfprintf+0x3ae>
     f44:	80 37       	cpi	r24, 0x70	; 112
     f46:	19 f0       	breq	.+6      	; 0xf4e <vfprintf+0x24e>
     f48:	88 37       	cpi	r24, 0x78	; 120
     f4a:	21 f0       	breq	.+8      	; 0xf54 <vfprintf+0x254>
     f4c:	b0 c0       	rjmp	.+352    	; 0x10ae <vfprintf+0x3ae>
     f4e:	e9 2f       	mov	r30, r25
     f50:	e0 61       	ori	r30, 0x10	; 16
     f52:	be 2e       	mov	r11, r30
     f54:	b4 fe       	sbrs	r11, 4
     f56:	0d c0       	rjmp	.+26     	; 0xf72 <vfprintf+0x272>
     f58:	fb 2d       	mov	r31, r11
     f5a:	f4 60       	ori	r31, 0x04	; 4
     f5c:	bf 2e       	mov	r11, r31
     f5e:	09 c0       	rjmp	.+18     	; 0xf72 <vfprintf+0x272>
     f60:	34 fe       	sbrs	r3, 4
     f62:	0a c0       	rjmp	.+20     	; 0xf78 <vfprintf+0x278>
     f64:	29 2f       	mov	r18, r25
     f66:	26 60       	ori	r18, 0x06	; 6
     f68:	b2 2e       	mov	r11, r18
     f6a:	06 c0       	rjmp	.+12     	; 0xf78 <vfprintf+0x278>
     f6c:	28 e0       	ldi	r18, 0x08	; 8
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	05 c0       	rjmp	.+10     	; 0xf7c <vfprintf+0x27c>
     f72:	20 e1       	ldi	r18, 0x10	; 16
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0x27c>
     f78:	20 e1       	ldi	r18, 0x10	; 16
     f7a:	32 e0       	ldi	r19, 0x02	; 2
     f7c:	f8 01       	movw	r30, r16
     f7e:	b7 fe       	sbrs	r11, 7
     f80:	07 c0       	rjmp	.+14     	; 0xf90 <vfprintf+0x290>
     f82:	60 81       	ld	r22, Z
     f84:	71 81       	ldd	r23, Z+1	; 0x01
     f86:	82 81       	ldd	r24, Z+2	; 0x02
     f88:	93 81       	ldd	r25, Z+3	; 0x03
     f8a:	0c 5f       	subi	r16, 0xFC	; 252
     f8c:	1f 4f       	sbci	r17, 0xFF	; 255
     f8e:	06 c0       	rjmp	.+12     	; 0xf9c <vfprintf+0x29c>
     f90:	60 81       	ld	r22, Z
     f92:	71 81       	ldd	r23, Z+1	; 0x01
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 5f       	subi	r16, 0xFE	; 254
     f9a:	1f 4f       	sbci	r17, 0xFF	; 255
     f9c:	a3 01       	movw	r20, r6
     f9e:	0e 94 b6 08 	call	0x116c	; 0x116c <__ultoa_invert>
     fa2:	88 2e       	mov	r8, r24
     fa4:	86 18       	sub	r8, r6
     fa6:	fb 2d       	mov	r31, r11
     fa8:	ff 77       	andi	r31, 0x7F	; 127
     faa:	3f 2e       	mov	r3, r31
     fac:	36 fe       	sbrs	r3, 6
     fae:	0d c0       	rjmp	.+26     	; 0xfca <vfprintf+0x2ca>
     fb0:	23 2d       	mov	r18, r3
     fb2:	2e 7f       	andi	r18, 0xFE	; 254
     fb4:	a2 2e       	mov	r10, r18
     fb6:	89 14       	cp	r8, r9
     fb8:	58 f4       	brcc	.+22     	; 0xfd0 <vfprintf+0x2d0>
     fba:	34 fe       	sbrs	r3, 4
     fbc:	0b c0       	rjmp	.+22     	; 0xfd4 <vfprintf+0x2d4>
     fbe:	32 fc       	sbrc	r3, 2
     fc0:	09 c0       	rjmp	.+18     	; 0xfd4 <vfprintf+0x2d4>
     fc2:	83 2d       	mov	r24, r3
     fc4:	8e 7e       	andi	r24, 0xEE	; 238
     fc6:	a8 2e       	mov	r10, r24
     fc8:	05 c0       	rjmp	.+10     	; 0xfd4 <vfprintf+0x2d4>
     fca:	b8 2c       	mov	r11, r8
     fcc:	a3 2c       	mov	r10, r3
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <vfprintf+0x2d6>
     fd0:	b8 2c       	mov	r11, r8
     fd2:	01 c0       	rjmp	.+2      	; 0xfd6 <vfprintf+0x2d6>
     fd4:	b9 2c       	mov	r11, r9
     fd6:	a4 fe       	sbrs	r10, 4
     fd8:	0f c0       	rjmp	.+30     	; 0xff8 <vfprintf+0x2f8>
     fda:	fe 01       	movw	r30, r28
     fdc:	e8 0d       	add	r30, r8
     fde:	f1 1d       	adc	r31, r1
     fe0:	80 81       	ld	r24, Z
     fe2:	80 33       	cpi	r24, 0x30	; 48
     fe4:	21 f4       	brne	.+8      	; 0xfee <vfprintf+0x2ee>
     fe6:	9a 2d       	mov	r25, r10
     fe8:	99 7e       	andi	r25, 0xE9	; 233
     fea:	a9 2e       	mov	r10, r25
     fec:	09 c0       	rjmp	.+18     	; 0x1000 <vfprintf+0x300>
     fee:	a2 fe       	sbrs	r10, 2
     ff0:	06 c0       	rjmp	.+12     	; 0xffe <vfprintf+0x2fe>
     ff2:	b3 94       	inc	r11
     ff4:	b3 94       	inc	r11
     ff6:	04 c0       	rjmp	.+8      	; 0x1000 <vfprintf+0x300>
     ff8:	8a 2d       	mov	r24, r10
     ffa:	86 78       	andi	r24, 0x86	; 134
     ffc:	09 f0       	breq	.+2      	; 0x1000 <vfprintf+0x300>
     ffe:	b3 94       	inc	r11
    1000:	a3 fc       	sbrc	r10, 3
    1002:	11 c0       	rjmp	.+34     	; 0x1026 <vfprintf+0x326>
    1004:	a0 fe       	sbrs	r10, 0
    1006:	06 c0       	rjmp	.+12     	; 0x1014 <vfprintf+0x314>
    1008:	b2 14       	cp	r11, r2
    100a:	88 f4       	brcc	.+34     	; 0x102e <vfprintf+0x32e>
    100c:	28 0c       	add	r2, r8
    100e:	92 2c       	mov	r9, r2
    1010:	9b 18       	sub	r9, r11
    1012:	0e c0       	rjmp	.+28     	; 0x1030 <vfprintf+0x330>
    1014:	b2 14       	cp	r11, r2
    1016:	60 f4       	brcc	.+24     	; 0x1030 <vfprintf+0x330>
    1018:	b6 01       	movw	r22, r12
    101a:	80 e2       	ldi	r24, 0x20	; 32
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    1022:	b3 94       	inc	r11
    1024:	f7 cf       	rjmp	.-18     	; 0x1014 <vfprintf+0x314>
    1026:	b2 14       	cp	r11, r2
    1028:	18 f4       	brcc	.+6      	; 0x1030 <vfprintf+0x330>
    102a:	2b 18       	sub	r2, r11
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <vfprintf+0x332>
    102e:	98 2c       	mov	r9, r8
    1030:	21 2c       	mov	r2, r1
    1032:	a4 fe       	sbrs	r10, 4
    1034:	10 c0       	rjmp	.+32     	; 0x1056 <vfprintf+0x356>
    1036:	b6 01       	movw	r22, r12
    1038:	80 e3       	ldi	r24, 0x30	; 48
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    1040:	a2 fe       	sbrs	r10, 2
    1042:	17 c0       	rjmp	.+46     	; 0x1072 <vfprintf+0x372>
    1044:	a1 fc       	sbrc	r10, 1
    1046:	03 c0       	rjmp	.+6      	; 0x104e <vfprintf+0x34e>
    1048:	88 e7       	ldi	r24, 0x78	; 120
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0x352>
    104e:	88 e5       	ldi	r24, 0x58	; 88
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	b6 01       	movw	r22, r12
    1054:	0c c0       	rjmp	.+24     	; 0x106e <vfprintf+0x36e>
    1056:	8a 2d       	mov	r24, r10
    1058:	86 78       	andi	r24, 0x86	; 134
    105a:	59 f0       	breq	.+22     	; 0x1072 <vfprintf+0x372>
    105c:	a1 fe       	sbrs	r10, 1
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <vfprintf+0x364>
    1060:	8b e2       	ldi	r24, 0x2B	; 43
    1062:	01 c0       	rjmp	.+2      	; 0x1066 <vfprintf+0x366>
    1064:	80 e2       	ldi	r24, 0x20	; 32
    1066:	a7 fc       	sbrc	r10, 7
    1068:	8d e2       	ldi	r24, 0x2D	; 45
    106a:	b6 01       	movw	r22, r12
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    1072:	89 14       	cp	r8, r9
    1074:	38 f4       	brcc	.+14     	; 0x1084 <vfprintf+0x384>
    1076:	b6 01       	movw	r22, r12
    1078:	80 e3       	ldi	r24, 0x30	; 48
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    1080:	9a 94       	dec	r9
    1082:	f7 cf       	rjmp	.-18     	; 0x1072 <vfprintf+0x372>
    1084:	8a 94       	dec	r8
    1086:	f3 01       	movw	r30, r6
    1088:	e8 0d       	add	r30, r8
    108a:	f1 1d       	adc	r31, r1
    108c:	80 81       	ld	r24, Z
    108e:	b6 01       	movw	r22, r12
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    1096:	81 10       	cpse	r8, r1
    1098:	f5 cf       	rjmp	.-22     	; 0x1084 <vfprintf+0x384>
    109a:	22 20       	and	r2, r2
    109c:	09 f4       	brne	.+2      	; 0x10a0 <vfprintf+0x3a0>
    109e:	42 ce       	rjmp	.-892    	; 0xd24 <vfprintf+0x24>
    10a0:	b6 01       	movw	r22, r12
    10a2:	80 e2       	ldi	r24, 0x20	; 32
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <fputc>
    10aa:	2a 94       	dec	r2
    10ac:	f6 cf       	rjmp	.-20     	; 0x109a <vfprintf+0x39a>
    10ae:	f6 01       	movw	r30, r12
    10b0:	86 81       	ldd	r24, Z+6	; 0x06
    10b2:	97 81       	ldd	r25, Z+7	; 0x07
    10b4:	02 c0       	rjmp	.+4      	; 0x10ba <vfprintf+0x3ba>
    10b6:	8f ef       	ldi	r24, 0xFF	; 255
    10b8:	9f ef       	ldi	r25, 0xFF	; 255
    10ba:	2b 96       	adiw	r28, 0x0b	; 11
    10bc:	e2 e1       	ldi	r30, 0x12	; 18
    10be:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__epilogue_restores__>

000010c2 <__ctype_isfalse>:
    10c2:	99 27       	eor	r25, r25
    10c4:	88 27       	eor	r24, r24

000010c6 <__ctype_istrue>:
    10c6:	08 95       	ret

000010c8 <strnlen_P>:
    10c8:	fc 01       	movw	r30, r24
    10ca:	05 90       	lpm	r0, Z+
    10cc:	61 50       	subi	r22, 0x01	; 1
    10ce:	70 40       	sbci	r23, 0x00	; 0
    10d0:	01 10       	cpse	r0, r1
    10d2:	d8 f7       	brcc	.-10     	; 0x10ca <strnlen_P+0x2>
    10d4:	80 95       	com	r24
    10d6:	90 95       	com	r25
    10d8:	8e 0f       	add	r24, r30
    10da:	9f 1f       	adc	r25, r31
    10dc:	08 95       	ret

000010de <strnlen>:
    10de:	fc 01       	movw	r30, r24
    10e0:	61 50       	subi	r22, 0x01	; 1
    10e2:	70 40       	sbci	r23, 0x00	; 0
    10e4:	01 90       	ld	r0, Z+
    10e6:	01 10       	cpse	r0, r1
    10e8:	d8 f7       	brcc	.-10     	; 0x10e0 <strnlen+0x2>
    10ea:	80 95       	com	r24
    10ec:	90 95       	com	r25
    10ee:	8e 0f       	add	r24, r30
    10f0:	9f 1f       	adc	r25, r31
    10f2:	08 95       	ret

000010f4 <fputc>:
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	fb 01       	movw	r30, r22
    10fe:	23 81       	ldd	r18, Z+3	; 0x03
    1100:	21 fd       	sbrc	r18, 1
    1102:	03 c0       	rjmp	.+6      	; 0x110a <fputc+0x16>
    1104:	8f ef       	ldi	r24, 0xFF	; 255
    1106:	9f ef       	ldi	r25, 0xFF	; 255
    1108:	2c c0       	rjmp	.+88     	; 0x1162 <fputc+0x6e>
    110a:	22 ff       	sbrs	r18, 2
    110c:	16 c0       	rjmp	.+44     	; 0x113a <fputc+0x46>
    110e:	46 81       	ldd	r20, Z+6	; 0x06
    1110:	57 81       	ldd	r21, Z+7	; 0x07
    1112:	24 81       	ldd	r18, Z+4	; 0x04
    1114:	35 81       	ldd	r19, Z+5	; 0x05
    1116:	42 17       	cp	r20, r18
    1118:	53 07       	cpc	r21, r19
    111a:	44 f4       	brge	.+16     	; 0x112c <fputc+0x38>
    111c:	a0 81       	ld	r26, Z
    111e:	b1 81       	ldd	r27, Z+1	; 0x01
    1120:	9d 01       	movw	r18, r26
    1122:	2f 5f       	subi	r18, 0xFF	; 255
    1124:	3f 4f       	sbci	r19, 0xFF	; 255
    1126:	31 83       	std	Z+1, r19	; 0x01
    1128:	20 83       	st	Z, r18
    112a:	8c 93       	st	X, r24
    112c:	26 81       	ldd	r18, Z+6	; 0x06
    112e:	37 81       	ldd	r19, Z+7	; 0x07
    1130:	2f 5f       	subi	r18, 0xFF	; 255
    1132:	3f 4f       	sbci	r19, 0xFF	; 255
    1134:	37 83       	std	Z+7, r19	; 0x07
    1136:	26 83       	std	Z+6, r18	; 0x06
    1138:	14 c0       	rjmp	.+40     	; 0x1162 <fputc+0x6e>
    113a:	8b 01       	movw	r16, r22
    113c:	ec 01       	movw	r28, r24
    113e:	fb 01       	movw	r30, r22
    1140:	00 84       	ldd	r0, Z+8	; 0x08
    1142:	f1 85       	ldd	r31, Z+9	; 0x09
    1144:	e0 2d       	mov	r30, r0
    1146:	09 95       	icall
    1148:	89 2b       	or	r24, r25
    114a:	e1 f6       	brne	.-72     	; 0x1104 <fputc+0x10>
    114c:	d8 01       	movw	r26, r16
    114e:	16 96       	adiw	r26, 0x06	; 6
    1150:	8d 91       	ld	r24, X+
    1152:	9c 91       	ld	r25, X
    1154:	17 97       	sbiw	r26, 0x07	; 7
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	17 96       	adiw	r26, 0x07	; 7
    115a:	9c 93       	st	X, r25
    115c:	8e 93       	st	-X, r24
    115e:	16 97       	sbiw	r26, 0x06	; 6
    1160:	ce 01       	movw	r24, r28
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	1f 91       	pop	r17
    1168:	0f 91       	pop	r16
    116a:	08 95       	ret

0000116c <__ultoa_invert>:
    116c:	fa 01       	movw	r30, r20
    116e:	aa 27       	eor	r26, r26
    1170:	28 30       	cpi	r18, 0x08	; 8
    1172:	51 f1       	breq	.+84     	; 0x11c8 <__ultoa_invert+0x5c>
    1174:	20 31       	cpi	r18, 0x10	; 16
    1176:	81 f1       	breq	.+96     	; 0x11d8 <__ultoa_invert+0x6c>
    1178:	e8 94       	clt
    117a:	6f 93       	push	r22
    117c:	6e 7f       	andi	r22, 0xFE	; 254
    117e:	6e 5f       	subi	r22, 0xFE	; 254
    1180:	7f 4f       	sbci	r23, 0xFF	; 255
    1182:	8f 4f       	sbci	r24, 0xFF	; 255
    1184:	9f 4f       	sbci	r25, 0xFF	; 255
    1186:	af 4f       	sbci	r26, 0xFF	; 255
    1188:	b1 e0       	ldi	r27, 0x01	; 1
    118a:	3e d0       	rcall	.+124    	; 0x1208 <__ultoa_invert+0x9c>
    118c:	b4 e0       	ldi	r27, 0x04	; 4
    118e:	3c d0       	rcall	.+120    	; 0x1208 <__ultoa_invert+0x9c>
    1190:	67 0f       	add	r22, r23
    1192:	78 1f       	adc	r23, r24
    1194:	89 1f       	adc	r24, r25
    1196:	9a 1f       	adc	r25, r26
    1198:	a1 1d       	adc	r26, r1
    119a:	68 0f       	add	r22, r24
    119c:	79 1f       	adc	r23, r25
    119e:	8a 1f       	adc	r24, r26
    11a0:	91 1d       	adc	r25, r1
    11a2:	a1 1d       	adc	r26, r1
    11a4:	6a 0f       	add	r22, r26
    11a6:	71 1d       	adc	r23, r1
    11a8:	81 1d       	adc	r24, r1
    11aa:	91 1d       	adc	r25, r1
    11ac:	a1 1d       	adc	r26, r1
    11ae:	20 d0       	rcall	.+64     	; 0x11f0 <__ultoa_invert+0x84>
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <__ultoa_invert+0x48>
    11b2:	68 94       	set
    11b4:	3f 91       	pop	r19
    11b6:	2a e0       	ldi	r18, 0x0A	; 10
    11b8:	26 9f       	mul	r18, r22
    11ba:	11 24       	eor	r1, r1
    11bc:	30 19       	sub	r19, r0
    11be:	30 5d       	subi	r19, 0xD0	; 208
    11c0:	31 93       	st	Z+, r19
    11c2:	de f6       	brtc	.-74     	; 0x117a <__ultoa_invert+0xe>
    11c4:	cf 01       	movw	r24, r30
    11c6:	08 95       	ret
    11c8:	46 2f       	mov	r20, r22
    11ca:	47 70       	andi	r20, 0x07	; 7
    11cc:	40 5d       	subi	r20, 0xD0	; 208
    11ce:	41 93       	st	Z+, r20
    11d0:	b3 e0       	ldi	r27, 0x03	; 3
    11d2:	0f d0       	rcall	.+30     	; 0x11f2 <__ultoa_invert+0x86>
    11d4:	c9 f7       	brne	.-14     	; 0x11c8 <__ultoa_invert+0x5c>
    11d6:	f6 cf       	rjmp	.-20     	; 0x11c4 <__ultoa_invert+0x58>
    11d8:	46 2f       	mov	r20, r22
    11da:	4f 70       	andi	r20, 0x0F	; 15
    11dc:	40 5d       	subi	r20, 0xD0	; 208
    11de:	4a 33       	cpi	r20, 0x3A	; 58
    11e0:	18 f0       	brcs	.+6      	; 0x11e8 <__ultoa_invert+0x7c>
    11e2:	49 5d       	subi	r20, 0xD9	; 217
    11e4:	31 fd       	sbrc	r19, 1
    11e6:	40 52       	subi	r20, 0x20	; 32
    11e8:	41 93       	st	Z+, r20
    11ea:	02 d0       	rcall	.+4      	; 0x11f0 <__ultoa_invert+0x84>
    11ec:	a9 f7       	brne	.-22     	; 0x11d8 <__ultoa_invert+0x6c>
    11ee:	ea cf       	rjmp	.-44     	; 0x11c4 <__ultoa_invert+0x58>
    11f0:	b4 e0       	ldi	r27, 0x04	; 4
    11f2:	a6 95       	lsr	r26
    11f4:	97 95       	ror	r25
    11f6:	87 95       	ror	r24
    11f8:	77 95       	ror	r23
    11fa:	67 95       	ror	r22
    11fc:	ba 95       	dec	r27
    11fe:	c9 f7       	brne	.-14     	; 0x11f2 <__ultoa_invert+0x86>
    1200:	00 97       	sbiw	r24, 0x00	; 0
    1202:	61 05       	cpc	r22, r1
    1204:	71 05       	cpc	r23, r1
    1206:	08 95       	ret
    1208:	9b 01       	movw	r18, r22
    120a:	ac 01       	movw	r20, r24
    120c:	0a 2e       	mov	r0, r26
    120e:	06 94       	lsr	r0
    1210:	57 95       	ror	r21
    1212:	47 95       	ror	r20
    1214:	37 95       	ror	r19
    1216:	27 95       	ror	r18
    1218:	ba 95       	dec	r27
    121a:	c9 f7       	brne	.-14     	; 0x120e <__ultoa_invert+0xa2>
    121c:	62 0f       	add	r22, r18
    121e:	73 1f       	adc	r23, r19
    1220:	84 1f       	adc	r24, r20
    1222:	95 1f       	adc	r25, r21
    1224:	a0 1d       	adc	r26, r0
    1226:	08 95       	ret

00001228 <eeprom_read_block>:
    1228:	dc 01       	movw	r26, r24
    122a:	cb 01       	movw	r24, r22

0000122c <eeprom_read_blraw>:
    122c:	fc 01       	movw	r30, r24
    122e:	f9 99       	sbic	0x1f, 1	; 31
    1230:	fe cf       	rjmp	.-4      	; 0x122e <eeprom_read_blraw+0x2>
    1232:	06 c0       	rjmp	.+12     	; 0x1240 <eeprom_read_blraw+0x14>
    1234:	f2 bd       	out	0x22, r31	; 34
    1236:	e1 bd       	out	0x21, r30	; 33
    1238:	f8 9a       	sbi	0x1f, 0	; 31
    123a:	31 96       	adiw	r30, 0x01	; 1
    123c:	00 b4       	in	r0, 0x20	; 32
    123e:	0d 92       	st	X+, r0
    1240:	41 50       	subi	r20, 0x01	; 1
    1242:	50 40       	sbci	r21, 0x00	; 0
    1244:	b8 f7       	brcc	.-18     	; 0x1234 <eeprom_read_blraw+0x8>
    1246:	08 95       	ret

00001248 <eeprom_read_word>:
    1248:	a8 e1       	ldi	r26, 0x18	; 24
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	42 e0       	ldi	r20, 0x02	; 2
    124e:	50 e0       	ldi	r21, 0x00	; 0
    1250:	0c 94 16 09 	jmp	0x122c	; 0x122c <eeprom_read_blraw>

00001254 <eeprom_write_block>:
    1254:	dc 01       	movw	r26, r24
    1256:	cb 01       	movw	r24, r22
    1258:	03 c0       	rjmp	.+6      	; 0x1260 <eeprom_write_block+0xc>
    125a:	2d 91       	ld	r18, X+
    125c:	0e 94 35 09 	call	0x126a	; 0x126a <eeprom_write_r18>
    1260:	41 50       	subi	r20, 0x01	; 1
    1262:	50 40       	sbci	r21, 0x00	; 0
    1264:	d0 f7       	brcc	.-12     	; 0x125a <eeprom_write_block+0x6>
    1266:	08 95       	ret

00001268 <eeprom_write_byte>:
    1268:	26 2f       	mov	r18, r22

0000126a <eeprom_write_r18>:
    126a:	f9 99       	sbic	0x1f, 1	; 31
    126c:	fe cf       	rjmp	.-4      	; 0x126a <eeprom_write_r18>
    126e:	1f ba       	out	0x1f, r1	; 31
    1270:	92 bd       	out	0x22, r25	; 34
    1272:	81 bd       	out	0x21, r24	; 33
    1274:	20 bd       	out	0x20, r18	; 32
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	f8 94       	cli
    127a:	fa 9a       	sbi	0x1f, 2	; 31
    127c:	f9 9a       	sbi	0x1f, 1	; 31
    127e:	0f be       	out	0x3f, r0	; 63
    1280:	01 96       	adiw	r24, 0x01	; 1
    1282:	08 95       	ret

00001284 <eeprom_write_word>:
    1284:	0e 94 34 09 	call	0x1268	; 0x1268 <eeprom_write_byte>
    1288:	27 2f       	mov	r18, r23
    128a:	0c 94 35 09 	jmp	0x126a	; 0x126a <eeprom_write_r18>

0000128e <__mulsi3>:
    128e:	db 01       	movw	r26, r22
    1290:	8f 93       	push	r24
    1292:	9f 93       	push	r25
    1294:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__muluhisi3>
    1298:	bf 91       	pop	r27
    129a:	af 91       	pop	r26
    129c:	a2 9f       	mul	r26, r18
    129e:	80 0d       	add	r24, r0
    12a0:	91 1d       	adc	r25, r1
    12a2:	a3 9f       	mul	r26, r19
    12a4:	90 0d       	add	r25, r0
    12a6:	b2 9f       	mul	r27, r18
    12a8:	90 0d       	add	r25, r0
    12aa:	11 24       	eor	r1, r1
    12ac:	08 95       	ret

000012ae <__udivmodsi4>:
    12ae:	a1 e2       	ldi	r26, 0x21	; 33
    12b0:	1a 2e       	mov	r1, r26
    12b2:	aa 1b       	sub	r26, r26
    12b4:	bb 1b       	sub	r27, r27
    12b6:	fd 01       	movw	r30, r26
    12b8:	0d c0       	rjmp	.+26     	; 0x12d4 <__udivmodsi4_ep>

000012ba <__udivmodsi4_loop>:
    12ba:	aa 1f       	adc	r26, r26
    12bc:	bb 1f       	adc	r27, r27
    12be:	ee 1f       	adc	r30, r30
    12c0:	ff 1f       	adc	r31, r31
    12c2:	a2 17       	cp	r26, r18
    12c4:	b3 07       	cpc	r27, r19
    12c6:	e4 07       	cpc	r30, r20
    12c8:	f5 07       	cpc	r31, r21
    12ca:	20 f0       	brcs	.+8      	; 0x12d4 <__udivmodsi4_ep>
    12cc:	a2 1b       	sub	r26, r18
    12ce:	b3 0b       	sbc	r27, r19
    12d0:	e4 0b       	sbc	r30, r20
    12d2:	f5 0b       	sbc	r31, r21

000012d4 <__udivmodsi4_ep>:
    12d4:	66 1f       	adc	r22, r22
    12d6:	77 1f       	adc	r23, r23
    12d8:	88 1f       	adc	r24, r24
    12da:	99 1f       	adc	r25, r25
    12dc:	1a 94       	dec	r1
    12de:	69 f7       	brne	.-38     	; 0x12ba <__udivmodsi4_loop>
    12e0:	60 95       	com	r22
    12e2:	70 95       	com	r23
    12e4:	80 95       	com	r24
    12e6:	90 95       	com	r25
    12e8:	9b 01       	movw	r18, r22
    12ea:	ac 01       	movw	r20, r24
    12ec:	bd 01       	movw	r22, r26
    12ee:	cf 01       	movw	r24, r30
    12f0:	08 95       	ret

000012f2 <__muluhisi3>:
    12f2:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__umulhisi3>
    12f6:	a5 9f       	mul	r26, r21
    12f8:	90 0d       	add	r25, r0
    12fa:	b4 9f       	mul	r27, r20
    12fc:	90 0d       	add	r25, r0
    12fe:	a4 9f       	mul	r26, r20
    1300:	80 0d       	add	r24, r0
    1302:	91 1d       	adc	r25, r1
    1304:	11 24       	eor	r1, r1
    1306:	08 95       	ret

00001308 <__prologue_saves__>:
    1308:	2f 92       	push	r2
    130a:	3f 92       	push	r3
    130c:	4f 92       	push	r4
    130e:	5f 92       	push	r5
    1310:	6f 92       	push	r6
    1312:	7f 92       	push	r7
    1314:	8f 92       	push	r8
    1316:	9f 92       	push	r9
    1318:	af 92       	push	r10
    131a:	bf 92       	push	r11
    131c:	cf 92       	push	r12
    131e:	df 92       	push	r13
    1320:	ef 92       	push	r14
    1322:	ff 92       	push	r15
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	cd b7       	in	r28, 0x3d	; 61
    132e:	de b7       	in	r29, 0x3e	; 62
    1330:	ca 1b       	sub	r28, r26
    1332:	db 0b       	sbc	r29, r27
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	09 94       	ijmp

00001340 <__epilogue_restores__>:
    1340:	2a 88       	ldd	r2, Y+18	; 0x12
    1342:	39 88       	ldd	r3, Y+17	; 0x11
    1344:	48 88       	ldd	r4, Y+16	; 0x10
    1346:	5f 84       	ldd	r5, Y+15	; 0x0f
    1348:	6e 84       	ldd	r6, Y+14	; 0x0e
    134a:	7d 84       	ldd	r7, Y+13	; 0x0d
    134c:	8c 84       	ldd	r8, Y+12	; 0x0c
    134e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1350:	aa 84       	ldd	r10, Y+10	; 0x0a
    1352:	b9 84       	ldd	r11, Y+9	; 0x09
    1354:	c8 84       	ldd	r12, Y+8	; 0x08
    1356:	df 80       	ldd	r13, Y+7	; 0x07
    1358:	ee 80       	ldd	r14, Y+6	; 0x06
    135a:	fd 80       	ldd	r15, Y+5	; 0x05
    135c:	0c 81       	ldd	r16, Y+4	; 0x04
    135e:	1b 81       	ldd	r17, Y+3	; 0x03
    1360:	aa 81       	ldd	r26, Y+2	; 0x02
    1362:	b9 81       	ldd	r27, Y+1	; 0x01
    1364:	ce 0f       	add	r28, r30
    1366:	d1 1d       	adc	r29, r1
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	ed 01       	movw	r28, r26
    1374:	08 95       	ret

00001376 <_exit>:
    1376:	f8 94       	cli

00001378 <__stop_program>:
    1378:	ff cf       	rjmp	.-2      	; 0x1378 <__stop_program>
